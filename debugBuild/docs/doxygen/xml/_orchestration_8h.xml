<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_orchestration_8h" kind="file" language="C++">
    <compoundname>Orchestration.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">limits.h</includes>
    <includes refid="_sil_kit_macros_8h" local="yes">silkit/capi/SilKitMacros.h</includes>
    <includes refid="_types_8h" local="yes">silkit/capi/Types.h</includes>
    <includes refid="_interface_identifiers_8h" local="yes">silkit/capi/InterfaceIdentifiers.h</includes>
    <includedby refid="_sil_kit_8h" local="yes">/home/ubuntu/sil-kit/SilKit/include/silkit/capi/SilKit.h</includedby>
    <includedby refid="_orchestration_datatypes_8hpp" local="yes">/home/ubuntu/sil-kit/SilKit/include/silkit/services/orchestration/OrchestrationDatatypes.hpp</includedby>
    <incdepgraph>
      <node id="147">
        <label>cstdint</label>
      </node>
      <node id="144">
        <label>stdint.h</label>
      </node>
      <node id="149">
        <label>stddef.h</label>
      </node>
      <node id="151">
        <label>memory.h</label>
      </node>
      <node id="145">
        <label>limits.h</label>
      </node>
      <node id="146">
        <label>silkit/capi/SilKitMacros.h</label>
        <link refid="_sil_kit_macros_8h"/>
        <childnode refid="147" relation="include">
        </childnode>
      </node>
      <node id="143">
        <label>/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h</label>
        <link refid="_orchestration_8h"/>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
      </node>
      <node id="150">
        <label>silkit/capi/InterfaceIdentifiers.h</label>
        <link refid="_interface_identifiers_8h"/>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
      </node>
      <node id="148">
        <label>silkit/capi/Types.h</label>
        <link refid="_types_8h"/>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="162">
        <label>/home/ubuntu/sil-kit/SilKit/include/silkit/services/orchestration/string_utils.hpp</label>
        <link refid="services_2orchestration_2string__utils_8hpp"/>
      </node>
      <node id="153">
        <label>/home/ubuntu/sil-kit/SilKit/include/silkit/capi/SilKit.h</label>
        <link refid="_sil_kit_8h"/>
      </node>
      <node id="154">
        <label>/home/ubuntu/sil-kit/SilKit/include/silkit/services/orchestration/OrchestrationDatatypes.hpp</label>
        <link refid="_orchestration_datatypes_8hpp"/>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
      </node>
      <node id="158">
        <label>/home/ubuntu/sil-kit/SilKit/include/silkit/services/orchestration/all.hpp</label>
        <link refid="services_2orchestration_2all_8hpp"/>
        <childnode refid="159" relation="include">
        </childnode>
      </node>
      <node id="152">
        <label>/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h</label>
        <link refid="_orchestration_8h"/>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
      </node>
      <node id="159">
        <label>/home/ubuntu/sil-kit/SilKit/include/silkit/services/all.hpp</label>
        <link refid="services_2all_8hpp"/>
      </node>
      <node id="155">
        <label>/home/ubuntu/sil-kit/SilKit/include/silkit/experimental/services/orchestration/ISystemController.hpp</label>
        <link refid="_i_system_controller_8hpp"/>
        <childnode refid="156" relation="include">
        </childnode>
      </node>
      <node id="161">
        <label>/home/ubuntu/sil-kit/SilKit/include/silkit/services/orchestration/ITimeSyncService.hpp</label>
        <link refid="_i_time_sync_service_8hpp"/>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
      </node>
      <node id="160">
        <label>/home/ubuntu/sil-kit/SilKit/include/silkit/services/orchestration/ISystemMonitor.hpp</label>
        <link refid="_i_system_monitor_8hpp"/>
        <childnode refid="158" relation="include">
        </childnode>
      </node>
      <node id="157">
        <label>/home/ubuntu/sil-kit/SilKit/include/silkit/services/orchestration/ILifecycleService.hpp</label>
        <link refid="_i_lifecycle_service_8hpp"/>
        <childnode refid="158" relation="include">
        </childnode>
      </node>
      <node id="156">
        <label>/home/ubuntu/sil-kit/SilKit/include/silkit/experimental/participant/ParticipantExtensions.hpp</label>
        <link refid="_participant_extensions_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_sil_kit___participant_status" prot="public">SilKit_ParticipantStatus</innerclass>
    <innerclass refid="struct_sil_kit___workflow_configuration" prot="public">SilKit_WorkflowConfiguration</innerclass>
    <innerclass refid="struct_sil_kit___lifecycle_configuration" prot="public">SilKit_LifecycleConfiguration</innerclass>
    <innerclass refid="struct_sil_kit___participant_connection_information" prot="public">SilKit_ParticipantConnectionInformation</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_orchestration_8h_1a0b497fab4f9ed9f7e8b7f5eaa878876b" prot="public" static="no">
        <name>SilKit_ParticipantState_Invalid</name>
        <initializer>((<ref refid="_orchestration_8h_1a395dc77953e2b19b6b353ea3257e25ff" kindref="member">SilKit_ParticipantState</ref>)   0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An invalid participant state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="45" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_orchestration_8h_1ad5d7e0158a90da20a5f3b628bcf464e4" prot="public" static="no">
        <name>SilKit_ParticipantState_ServicesCreated</name>
        <initializer>((<ref refid="_orchestration_8h_1a395dc77953e2b19b6b353ea3257e25ff" kindref="member">SilKit_ParticipantState</ref>)  10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The controllers created state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="47" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_orchestration_8h_1aa1b442cef1d0da9eb631d7c86ee9e242" prot="public" static="no">
        <name>SilKit_ParticipantState_CommunicationInitializing</name>
        <initializer>((<ref refid="_orchestration_8h_1a395dc77953e2b19b6b353ea3257e25ff" kindref="member">SilKit_ParticipantState</ref>)  20)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The communication initializing state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="49" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_orchestration_8h_1a9377a7ce38e1dbda994fd9eb1a3ffea2" prot="public" static="no">
        <name>SilKit_ParticipantState_CommunicationInitialized</name>
        <initializer>((<ref refid="_orchestration_8h_1a395dc77953e2b19b6b353ea3257e25ff" kindref="member">SilKit_ParticipantState</ref>)  30)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The communication initialized state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="51" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_orchestration_8h_1a25d5acc9f0708b5c17112b9ef1e823f9" prot="public" static="no">
        <name>SilKit_ParticipantState_ReadyToRun</name>
        <initializer>((<ref refid="_orchestration_8h_1a395dc77953e2b19b6b353ea3257e25ff" kindref="member">SilKit_ParticipantState</ref>)  40)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The initialized state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="53" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_orchestration_8h_1a480ef9db035a23f3a0764929510e93fc" prot="public" static="no">
        <name>SilKit_ParticipantState_Running</name>
        <initializer>((<ref refid="_orchestration_8h_1a395dc77953e2b19b6b353ea3257e25ff" kindref="member">SilKit_ParticipantState</ref>)  50)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The running state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="55" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_orchestration_8h_1ab2f4b5632b0121fc2edd0c69ff7e5545" prot="public" static="no">
        <name>SilKit_ParticipantState_Paused</name>
        <initializer>((<ref refid="_orchestration_8h_1a395dc77953e2b19b6b353ea3257e25ff" kindref="member">SilKit_ParticipantState</ref>)  60)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The paused state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="57" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_orchestration_8h_1a22685e1b453ad4a0feed62f0e706edb6" prot="public" static="no">
        <name>SilKit_ParticipantState_Stopping</name>
        <initializer>((<ref refid="_orchestration_8h_1a395dc77953e2b19b6b353ea3257e25ff" kindref="member">SilKit_ParticipantState</ref>)  70)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The stopping state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="59" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_orchestration_8h_1a4a2215d1cadfe464dcce87e09fbb4759" prot="public" static="no">
        <name>SilKit_ParticipantState_Stopped</name>
        <initializer>((<ref refid="_orchestration_8h_1a395dc77953e2b19b6b353ea3257e25ff" kindref="member">SilKit_ParticipantState</ref>)  80)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The stopped state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="61" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_orchestration_8h_1a2ff679f11c8da94f041f7ad8e827a427" prot="public" static="no">
        <name>SilKit_ParticipantState_Error</name>
        <initializer>((<ref refid="_orchestration_8h_1a395dc77953e2b19b6b353ea3257e25ff" kindref="member">SilKit_ParticipantState</ref>)  90)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The error state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="63" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_orchestration_8h_1a7be191365d4e888b72a2d520c81b09ca" prot="public" static="no">
        <name>SilKit_ParticipantState_ShuttingDown</name>
        <initializer>((<ref refid="_orchestration_8h_1a395dc77953e2b19b6b353ea3257e25ff" kindref="member">SilKit_ParticipantState</ref>) 100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The shutting down state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="65" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_orchestration_8h_1ae2459ff99f83867fb5b845ce18c6cfea" prot="public" static="no">
        <name>SilKit_ParticipantState_Shutdown</name>
        <initializer>((<ref refid="_orchestration_8h_1a395dc77953e2b19b6b353ea3257e25ff" kindref="member">SilKit_ParticipantState</ref>) 110)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The shutdown state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="67" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_orchestration_8h_1acfa82a61b8c9668b2ba56743070eebae" prot="public" static="no">
        <name>SilKit_ParticipantState_Aborting</name>
        <initializer>((<ref refid="_orchestration_8h_1a395dc77953e2b19b6b353ea3257e25ff" kindref="member">SilKit_ParticipantState</ref>) 120)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The aborting state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="69" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_orchestration_8h_1a27df30a56c385bbc5096aaaccae9351b" prot="public" static="no">
        <name>SilKit_SystemState_Invalid</name>
        <initializer>((<ref refid="_orchestration_8h_1a4d6a8fe52fcfa9fbc3fd8c99ad6d9d4a" kindref="member">SilKit_SystemState</ref>)   0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An invalid participant state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="76" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_orchestration_8h_1ac55ae2745415fefd2d94de8bf4268b86" prot="public" static="no">
        <name>SilKit_SystemState_ServicesCreated</name>
        <initializer>((<ref refid="_orchestration_8h_1a4d6a8fe52fcfa9fbc3fd8c99ad6d9d4a" kindref="member">SilKit_SystemState</ref>)  10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The controllers created state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="78" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_orchestration_8h_1a709fb83a234eefaaf4d4150282f3c24b" prot="public" static="no">
        <name>SilKit_SystemState_CommunicationInitializing</name>
        <initializer>((<ref refid="_orchestration_8h_1a4d6a8fe52fcfa9fbc3fd8c99ad6d9d4a" kindref="member">SilKit_SystemState</ref>)  20)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The communication initializing state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="80" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_orchestration_8h_1a13e068e64118ecb67d3c1262536a2ff3" prot="public" static="no">
        <name>SilKit_SystemState_CommunicationInitialized</name>
        <initializer>((<ref refid="_orchestration_8h_1a4d6a8fe52fcfa9fbc3fd8c99ad6d9d4a" kindref="member">SilKit_SystemState</ref>)  30)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The communication initialized state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="82" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_orchestration_8h_1a689e1cb2eafcf72c5934ad23299a876b" prot="public" static="no">
        <name>SilKit_SystemState_ReadyToRun</name>
        <initializer>((<ref refid="_orchestration_8h_1a4d6a8fe52fcfa9fbc3fd8c99ad6d9d4a" kindref="member">SilKit_SystemState</ref>)  40)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The initialized state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="84" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_orchestration_8h_1a998ebb26556986a5125ad0d836de197a" prot="public" static="no">
        <name>SilKit_SystemState_Running</name>
        <initializer>((<ref refid="_orchestration_8h_1a4d6a8fe52fcfa9fbc3fd8c99ad6d9d4a" kindref="member">SilKit_SystemState</ref>)  50)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The running state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="86" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_orchestration_8h_1a046cf7c4dccdab94b00b89a812c28199" prot="public" static="no">
        <name>SilKit_SystemState_Paused</name>
        <initializer>((<ref refid="_orchestration_8h_1a4d6a8fe52fcfa9fbc3fd8c99ad6d9d4a" kindref="member">SilKit_SystemState</ref>)  60)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The paused state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="88" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_orchestration_8h_1a5347a9b48f6c508fc0530adaf6392560" prot="public" static="no">
        <name>SilKit_SystemState_Stopping</name>
        <initializer>((<ref refid="_orchestration_8h_1a4d6a8fe52fcfa9fbc3fd8c99ad6d9d4a" kindref="member">SilKit_SystemState</ref>)  70)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The stopping state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="90" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_orchestration_8h_1a808cd07a066ab1d5114d1404fc30903e" prot="public" static="no">
        <name>SilKit_SystemState_Stopped</name>
        <initializer>((<ref refid="_orchestration_8h_1a4d6a8fe52fcfa9fbc3fd8c99ad6d9d4a" kindref="member">SilKit_SystemState</ref>)  80)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The stopped state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="92" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_orchestration_8h_1a30a43ca5db2cbaeb67eb08c8739f187f" prot="public" static="no">
        <name>SilKit_SystemState_Error</name>
        <initializer>((<ref refid="_orchestration_8h_1a4d6a8fe52fcfa9fbc3fd8c99ad6d9d4a" kindref="member">SilKit_SystemState</ref>)  90)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The error state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="94" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_orchestration_8h_1a459be0021e351deccee4508faeae8b27" prot="public" static="no">
        <name>SilKit_SystemState_ShuttingDown</name>
        <initializer>((<ref refid="_orchestration_8h_1a4d6a8fe52fcfa9fbc3fd8c99ad6d9d4a" kindref="member">SilKit_SystemState</ref>) 100)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The shutting down state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="96" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_orchestration_8h_1a9fb46cddfb217b21542cece979bc29cb" prot="public" static="no">
        <name>SilKit_SystemState_Shutdown</name>
        <initializer>((<ref refid="_orchestration_8h_1a4d6a8fe52fcfa9fbc3fd8c99ad6d9d4a" kindref="member">SilKit_SystemState</ref>) 110)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The shutdown state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="98" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_orchestration_8h_1a8c9539d6fa76e9248a3f65012d56da1e" prot="public" static="no">
        <name>SilKit_SystemState_Aborting</name>
        <initializer>((<ref refid="_orchestration_8h_1a4d6a8fe52fcfa9fbc3fd8c99ad6d9d4a" kindref="member">SilKit_SystemState</ref>) 120)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The aborting state </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="100" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_orchestration_8h_1a3361714508cf78ad5d2715fffcd942dd" prot="public" static="no">
        <name>SilKit_OperationMode_Invalid</name>
        <initializer>((<ref refid="_orchestration_8h_1a37f260fc7a0744bb6b45dfa154ed50e6" kindref="member">SilKit_OperationMode</ref>)  0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An invalid operation mode </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="107" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_orchestration_8h_1ab758d637ae73a20a7676feabbe6935c0" prot="public" static="no">
        <name>SilKit_OperationMode_Coordinated</name>
        <initializer>((<ref refid="_orchestration_8h_1a37f260fc7a0744bb6b45dfa154ed50e6" kindref="member">SilKit_OperationMode</ref>) 10)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The coordinated operation mode </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="109" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_orchestration_8h_1a6df0010c0e9a87f1b336510366c4899a" prot="public" static="no">
        <name>SilKit_OperationMode_Autonomous</name>
        <initializer>((<ref refid="_orchestration_8h_1a37f260fc7a0744bb6b45dfa154ed50e6" kindref="member">SilKit_OperationMode</ref>) 20)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The autonomous operation mode </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="111" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_orchestration_8h_1a4a5c030b6c22d0228bad174647d4b7fd" prot="public" static="no">
        <type>uint64_t</type>
        <definition>typedef uint64_t SilKit_NanosecondsTime</definition>
        <argsstring></argsstring>
        <name>SilKit_NanosecondsTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Simulation time </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="35" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a5d25eaae0d9c76a203a09936078740a8" prot="public" static="no">
        <type>uint64_t</type>
        <definition>typedef uint64_t SilKit_NanosecondsWallclockTime</definition>
        <argsstring></argsstring>
        <name>SilKit_NanosecondsWallclockTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Wall clock time since epoch </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="38" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a395dc77953e2b19b6b353ea3257e25ff" prot="public" static="no">
        <type>int16_t</type>
        <definition>typedef int16_t SilKit_ParticipantState</definition>
        <argsstring></argsstring>
        <name>SilKit_ParticipantState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The state of a participant. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="42" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a4d6a8fe52fcfa9fbc3fd8c99ad6d9d4a" prot="public" static="no">
        <type>int16_t</type>
        <definition>typedef int16_t SilKit_SystemState</definition>
        <argsstring></argsstring>
        <name>SilKit_SystemState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The state of a system, deduced by states of the required participants. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="73" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a37f260fc7a0744bb6b45dfa154ed50e6" prot="public" static="no">
        <type>int8_t</type>
        <definition>typedef int8_t SilKit_OperationMode</definition>
        <argsstring></argsstring>
        <name>SilKit_OperationMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The OperationMode for lifecycle service. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="104" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a816825c0b36f1a7be3f67bfb5cf1c716" prot="public" static="no">
        <type>struct <ref refid="struct_sil_kit___lifecycle_configuration" kindref="compound">SilKit_LifecycleConfiguration</ref></type>
        <definition>typedef struct SilKit_LifecycleConfiguration  SilKit_LifecycleConfiguration</definition>
        <argsstring></argsstring>
        <name>SilKit_LifecycleConfiguration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The LifecycleLifecycle options </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="140" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" prot="public" static="no">
        <type>struct <ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref></type>
        <definition>typedef struct SilKit_SystemMonitor SilKit_SystemMonitor</definition>
        <argsstring></argsstring>
        <name>SilKit_SystemMonitor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="104" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" prot="public" static="no">
        <type>struct <ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref></type>
        <definition>typedef struct SilKit_LifecycleService SilKit_LifecycleService</definition>
        <argsstring></argsstring>
        <name>SilKit_LifecycleService</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="104" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1af9eb60e0de031fe0b8d4ad5e3aab7976" prot="public" static="no">
        <type>struct <ref refid="_orchestration_8h_1af9eb60e0de031fe0b8d4ad5e3aab7976" kindref="member">SilKit_TimeSyncService</ref></type>
        <definition>typedef struct SilKit_TimeSyncService SilKit_TimeSyncService</definition>
        <argsstring></argsstring>
        <name>SilKit_TimeSyncService</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="104" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a57553275c90b8b57511781ed81346253" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_LifecycleService_Create_t) (SilKit_LifecycleService **outLifecycleService, SilKit_Participant *participant, const SilKit_LifecycleConfiguration *startConfiguration)</definition>
        <argsstring>)(SilKit_LifecycleService **outLifecycleService, SilKit_Participant *participant, const SilKit_LifecycleConfiguration *startConfiguration)</argsstring>
        <name>SilKit_LifecycleService_Create_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="166" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1ad7704f5287fc1524f92fb717f82e6e1b" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(*  SilKit_LifecycleService_CommunicationReadyHandler_t) (void *context, SilKit_LifecycleService *lifecycleService)</definition>
        <argsstring>)(void *context, SilKit_LifecycleService *lifecycleService)</argsstring>
        <name>SilKit_LifecycleService_CommunicationReadyHandler_t</name>
        <briefdescription>
<para>The handler to be called on initialization. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The user provided context passed in <ref refid="_orchestration_8h_1a59e23ae65723660f4d7eaf5ad1916d77" kindref="member">SilKit_LifecycleService_SetCommunicationReadyHandler</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lifecycleService</parametername>
</parameternamelist>
<parameterdescription>
<para>The lifecycle service receiving the update. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="175" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a4316bb3d0665eace7b93f36ca45035a6" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode(*  SilKit_LifecycleService_SetCommunicationReadyHandler_t) (SilKit_LifecycleService *lifecycleService, void *context, SilKit_LifecycleService_CommunicationReadyHandler_t handler)</definition>
        <argsstring>)(SilKit_LifecycleService *lifecycleService, void *context, SilKit_LifecycleService_CommunicationReadyHandler_t handler)</argsstring>
        <name>SilKit_LifecycleService_SetCommunicationReadyHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="194" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a436f68248bd19cea51c00dfca34f8481" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_LifecycleService_SetCommunicationReadyHandlerAsync_t) (SilKit_LifecycleService *lifecycleService, void *context, SilKit_LifecycleService_CommunicationReadyHandler_t handler)</definition>
        <argsstring>)(SilKit_LifecycleService *lifecycleService, void *context, SilKit_LifecycleService_CommunicationReadyHandler_t handler)</argsstring>
        <name>SilKit_LifecycleService_SetCommunicationReadyHandlerAsync_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="215" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a71118e0e59d43a52fc6302290f273b2d" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_LifecycleService_CompleteCommunicationReadyHandlerAsync_t) (SilKit_LifecycleService *lifecycleService)</definition>
        <argsstring>)(SilKit_LifecycleService *lifecycleService)</argsstring>
        <name>SilKit_LifecycleService_CompleteCommunicationReadyHandlerAsync_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="227" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a0b99b65a5d1b09ce7bf29e8d694f6975" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void( * SilKit_LifecycleService_StartingHandler_t) (void *context, SilKit_LifecycleService *lifecycleService)</definition>
        <argsstring>)(void *context, SilKit_LifecycleService *lifecycleService)</argsstring>
        <name>SilKit_LifecycleService_StartingHandler_t</name>
        <briefdescription>
<para>This handler is triggered just before the lifecycle service changes to SilKit_ParticipantState_Running. It is only triggered if the participant does NOT use virtual time synchronization. It does not block other participants from changing to SilKit_ParticipantState_Running and should only be used for lightweight operations such as starting timers. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The user provided context passed in <ref refid="_orchestration_8h_1a59e23ae65723660f4d7eaf5ad1916d77" kindref="member">SilKit_LifecycleService_SetCommunicationReadyHandler</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lifecycleService</parametername>
</parameternamelist>
<parameterdescription>
<para>The lifecycle service receiving the update. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="237" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1af0047faf0e9b299a80424040cff9d820" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_LifecycleService_SetStartingHandler_t) (SilKit_LifecycleService *lifecycleService, void *context, SilKit_LifecycleService_StartingHandler_t handler)</definition>
        <argsstring>)(SilKit_LifecycleService *lifecycleService, void *context, SilKit_LifecycleService_StartingHandler_t handler)</argsstring>
        <name>SilKit_LifecycleService_SetStartingHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="256" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a5c8dfc9ffcb4ba86ec0489e83c0e6a81" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void( * SilKit_LifecycleService_StopHandler_t) (void *context, SilKit_LifecycleService *lifecycleService)</definition>
        <argsstring>)(void *context, SilKit_LifecycleService *lifecycleService)</argsstring>
        <name>SilKit_LifecycleService_StopHandler_t</name>
        <briefdescription>
<para>The handler to be called on a simulation stop. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The user provided context passed in <ref refid="_orchestration_8h_1a4f52e5e0750a810a88e5f827084c9aa3" kindref="member">SilKit_LifecycleService_SetStopHandler</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lifecycleService</parametername>
</parameternamelist>
<parameterdescription>
<para>The lifecycle service receiving the stop command </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="264" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1ab5a043ee79c3d19a448bc2a3dc6eafd3" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_LifecycleService_SetStopHandler_t) (SilKit_LifecycleService *lifecycleService, void *context, SilKit_LifecycleService_StopHandler_t handler)</definition>
        <argsstring>)(SilKit_LifecycleService *lifecycleService, void *context, SilKit_LifecycleService_StopHandler_t handler)</argsstring>
        <name>SilKit_LifecycleService_SetStopHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="286" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a32be5ea20f8ae06938860cee8902d95e" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void( * SilKit_LifecycleService_ShutdownHandler_t) (void *context, SilKit_LifecycleService *lifecycleService)</definition>
        <argsstring>)(void *context, SilKit_LifecycleService *lifecycleService)</argsstring>
        <name>SilKit_LifecycleService_ShutdownHandler_t</name>
        <briefdescription>
<para>The handler to be called on a simulation shutdown. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The user provided context passed in <ref refid="_orchestration_8h_1afc8646eef6d25b181468d8a93b3a25fa" kindref="member">SilKit_LifecycleService_SetShutdownHandler</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lifecycleService</parametername>
</parameternamelist>
<parameterdescription>
<para>The lifecycleService receiving the shutdown </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="295" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1aad374ed8219126b5f7c1ec867f0bd76b" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_LifecycleService_SetShutdownHandler_t) (SilKit_LifecycleService *lifecycleService, void *context, SilKit_LifecycleService_ShutdownHandler_t handler)</definition>
        <argsstring>)(SilKit_LifecycleService *lifecycleService, void *context, SilKit_LifecycleService_ShutdownHandler_t handler)</argsstring>
        <name>SilKit_LifecycleService_SetShutdownHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="313" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1ad91a4ec709cdc4c116c87f74fc500184" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(*  SilKit_LifecycleService_AbortHandler_t) (void *context, SilKit_LifecycleService *lifecycleService, SilKit_ParticipantState lastParticipantState)</definition>
        <argsstring>)(void *context, SilKit_LifecycleService *lifecycleService, SilKit_ParticipantState lastParticipantState)</argsstring>
        <name>SilKit_LifecycleService_AbortHandler_t</name>
        <briefdescription>
<para>The handler to be called on a simulation abort. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The user provided context passed in <ref refid="_orchestration_8h_1a3dbe846071dc457ffb06a2bdc28579ff" kindref="member">SilKit_LifecycleService_SetAbortHandler</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lifecycleService</parametername>
</parameternamelist>
<parameterdescription>
<para>The lifecycle service receiving the abort command </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lastParticipantState</parametername>
</parameternamelist>
<parameterdescription>
<para>The last participant state before the simulation was aborted. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="322" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1ab1601be30aa73beb8e0f58c9f2b4c2b7" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_LifecycleService_SetAbortHandler_t) (SilKit_LifecycleService *lifecycleService, void *context, SilKit_LifecycleService_AbortHandler_t handler)</definition>
        <argsstring>)(SilKit_LifecycleService *lifecycleService, void *context, SilKit_LifecycleService_AbortHandler_t handler)</argsstring>
        <name>SilKit_LifecycleService_SetAbortHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="335" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a693b2d7e3297ed3776ef3e939a8d4b5d" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_LifecycleService_StartLifecycle_t) (SilKit_LifecycleService *lifecycleService)</definition>
        <argsstring>)(SilKit_LifecycleService *lifecycleService)</argsstring>
        <name>SilKit_LifecycleService_StartLifecycle_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="345" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a5df5298cb1d555604745ae2cc6f527c8" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_LifecycleService_WaitForLifecycleToComplete_t) (SilKit_LifecycleService *lifecycleService, SilKit_ParticipantState *outParticipantState)</definition>
        <argsstring>)(SilKit_LifecycleService *lifecycleService, SilKit_ParticipantState *outParticipantState)</argsstring>
        <name>SilKit_LifecycleService_WaitForLifecycleToComplete_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="359" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a8be6d96d3a090679bcb5f6b5938c7904" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_LifecycleService_ReportError_t) (SilKit_LifecycleService *lifecycleService, const char *reason)</definition>
        <argsstring>)(SilKit_LifecycleService *lifecycleService, const char *reason)</argsstring>
        <name>SilKit_LifecycleService_ReportError_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="373" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1ac29887912be8fb58372a10d75b258f0d" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_LifecycleService_Pause_t) (SilKit_LifecycleService *lifecycleService, const char *reason)</definition>
        <argsstring>)(SilKit_LifecycleService *lifecycleService, const char *reason)</argsstring>
        <name>SilKit_LifecycleService_Pause_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="389" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1ade64c8a8e8aa5b6377b39bd28512f4a4" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_LifecycleService_Continue_t) (SilKit_LifecycleService *lifecycleService)</definition>
        <argsstring>)(SilKit_LifecycleService *lifecycleService)</argsstring>
        <name>SilKit_LifecycleService_Continue_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="399" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a27633a61b77aa40cfd9facea1a1384f6" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_LifecycleService_Stop_t) (SilKit_LifecycleService *lifecycleService, const char *reason)</definition>
        <argsstring>)(SilKit_LifecycleService *lifecycleService, const char *reason)</argsstring>
        <name>SilKit_LifecycleService_Stop_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="418" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="418" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a27397046e2e6d2f2c421d66b85fc8d8b" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode(*  SilKit_LifecycleService_State_t) (SilKit_ParticipantState *outParticipantState, SilKit_LifecycleService *lifecycleService)</definition>
        <argsstring>)(SilKit_ParticipantState *outParticipantState, SilKit_LifecycleService *lifecycleService)</argsstring>
        <name>SilKit_LifecycleService_State_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="428" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="428" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a788609caa4bf9b47f06ec943a4a5fbb3" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_LifecycleService_Status_t) (SilKit_ParticipantStatus *outParticipantStatus, SilKit_LifecycleService *lifecycleService)</definition>
        <argsstring>)(SilKit_ParticipantStatus *outParticipantStatus, SilKit_LifecycleService *lifecycleService)</argsstring>
        <name>SilKit_LifecycleService_Status_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="439" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="439" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a0ae08c3e0cb43a9877d7a8fae9e7f392" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_TimeSyncService_Create_t) (SilKit_TimeSyncService **outTimeSyncService, SilKit_Participant *lifecycleService)</definition>
        <argsstring>)(SilKit_TimeSyncService **outTimeSyncService, SilKit_Participant *lifecycleService)</argsstring>
        <name>SilKit_TimeSyncService_Create_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="458" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="458" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a2acde74070aa1322226101687d6d4d78" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void( * SilKit_TimeSyncService_SimulationStepHandler_t) (void *context, SilKit_TimeSyncService *timeSyncService, SilKit_NanosecondsTime now, SilKit_NanosecondsTime duration)</definition>
        <argsstring>)(void *context, SilKit_TimeSyncService *timeSyncService, SilKit_NanosecondsTime now, SilKit_NanosecondsTime duration)</argsstring>
        <name>SilKit_TimeSyncService_SimulationStepHandler_t</name>
        <briefdescription>
<para>The handler to be called if the simulation task is due. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The user provided context passed in <ref refid="_orchestration_8h_1a9450acac7c40b0fa7c8728f04a731c2c" kindref="member">SilKit_TimeSyncService_SetSimulationStepHandler</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeSyncService</parametername>
</parameternamelist>
<parameterdescription>
<para>The time sync service </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>now</parametername>
</parameternamelist>
<parameterdescription>
<para>The current simulation time </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>duration</parametername>
</parameternamelist>
<parameterdescription>
<para>The duration of the simulation step </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="468" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="468" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a2783e970e6727596d8c572efc64131da" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_TimeSyncService_SetSimulationStepHandler_t) (SilKit_TimeSyncService *timeSyncService, void *context, SilKit_TimeSyncService_SimulationStepHandler_t handler, SilKit_NanosecondsTime initialStepSize)</definition>
        <argsstring>)(SilKit_TimeSyncService *timeSyncService, void *context, SilKit_TimeSyncService_SimulationStepHandler_t handler, SilKit_NanosecondsTime initialStepSize)</argsstring>
        <name>SilKit_TimeSyncService_SetSimulationStepHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="482" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="482" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1acb2a904b9f486e2044cf4b8942d8ebd2" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_TimeSyncService_SetSimulationStepHandlerAsync_t) (SilKit_TimeSyncService *timeSyncService, void *context, SilKit_TimeSyncService_SimulationStepHandler_t handler, SilKit_NanosecondsTime initialStepSize)</definition>
        <argsstring>)(SilKit_TimeSyncService *timeSyncService, void *context, SilKit_TimeSyncService_SimulationStepHandler_t handler, SilKit_NanosecondsTime initialStepSize)</argsstring>
        <name>SilKit_TimeSyncService_SetSimulationStepHandlerAsync_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="508" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="508" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a5316659a907516ff8cbdeabcfe4f9e45" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_TimeSyncService_CompleteSimulationStep_t) (SilKit_TimeSyncService *timeSyncService)</definition>
        <argsstring>)(SilKit_TimeSyncService *timeSyncService)</argsstring>
        <name>SilKit_TimeSyncService_CompleteSimulationStep_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="518" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="518" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a2280fcf1b496053e1e719385b8954ddc" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_TimeSyncService_Now_t) (SilKit_TimeSyncService *timeSyncService, SilKit_NanosecondsTime *outNanosecondsTime)</definition>
        <argsstring>)(SilKit_TimeSyncService *timeSyncService, SilKit_NanosecondsTime *outNanosecondsTime)</argsstring>
        <name>SilKit_TimeSyncService_Now_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="528" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="528" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1ac71c888d1e64d0f8018bae656be0798e" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode(*  SilKit_SystemMonitor_Create_t) (SilKit_SystemMonitor **outSystemMonitor, SilKit_Participant *participant)</definition>
        <argsstring>)(SilKit_SystemMonitor **outSystemMonitor, SilKit_Participant *participant)</argsstring>
        <name>SilKit_SystemMonitor_Create_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="548" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="548" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a2569dc53611bc8217b0cdace59e451d1" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_SystemMonitor_GetParticipantStatus_t) (SilKit_ParticipantStatus *outParticipantState, SilKit_SystemMonitor *systemMonitor, const char *participantName)</definition>
        <argsstring>)(SilKit_ParticipantStatus *outParticipantState, SilKit_SystemMonitor *systemMonitor, const char *participantName)</argsstring>
        <name>SilKit_SystemMonitor_GetParticipantStatus_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="557" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="557" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a1b994aa0061d25d8b3ffca5696aae755" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_SystemMonitor_GetSystemState_t) (SilKit_SystemState *outSystemState, SilKit_SystemMonitor *systemMonitor)</definition>
        <argsstring>)(SilKit_SystemState *outSystemState, SilKit_SystemMonitor *systemMonitor)</argsstring>
        <name>SilKit_SystemMonitor_GetSystemState_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="565" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="565" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a6ee1384cf374d8eabec64b6c031c9a07" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void( * SilKit_SystemStateHandler_t) (void *context, SilKit_SystemMonitor *systemMonitor, SilKit_SystemState state)</definition>
        <argsstring>)(void *context, SilKit_SystemMonitor *systemMonitor, SilKit_SystemState state)</argsstring>
        <name>SilKit_SystemStateHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="568" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="568" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a7cef0120f3607cdf5008112d462a9a42" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_SystemMonitor_AddSystemStateHandler_t) (SilKit_SystemMonitor *systemMonitor, void *context, SilKit_SystemStateHandler_t handler, SilKit_HandlerId *outHandlerId)</definition>
        <argsstring>)(SilKit_SystemMonitor *systemMonitor, void *context, SilKit_SystemStateHandler_t handler, SilKit_HandlerId *outHandlerId)</argsstring>
        <name>SilKit_SystemMonitor_AddSystemStateHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="585" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="585" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1abf15f377bbf32298715d6dbad5652b1b" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_SystemMonitor_RemoveSystemStateHandler_t) (SilKit_SystemMonitor *systemMonitor, SilKit_HandlerId handlerId)</definition>
        <argsstring>)(SilKit_SystemMonitor *systemMonitor, SilKit_HandlerId handlerId)</argsstring>
        <name>SilKit_SystemMonitor_RemoveSystemStateHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="598" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="598" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a5f8bab474d4efcc6726d31abfc8e0fcf" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void( * SilKit_ParticipantStatusHandler_t) (void *context, SilKit_SystemMonitor *systemMonitor, const char *participantName, SilKit_ParticipantStatus *status)</definition>
        <argsstring>)(void *context, SilKit_SystemMonitor *systemMonitor, const char *participantName, SilKit_ParticipantStatus *status)</argsstring>
        <name>SilKit_ParticipantStatusHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="601" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="601" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a1d4ef39473dc91613a08e66a9e42557a" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_SystemMonitor_AddParticipantStatusHandler_t) (SilKit_SystemMonitor *systemMonitor, void *context, SilKit_ParticipantStatusHandler_t handler, SilKit_HandlerId *outHandlerId)</definition>
        <argsstring>)(SilKit_SystemMonitor *systemMonitor, void *context, SilKit_ParticipantStatusHandler_t handler, SilKit_HandlerId *outHandlerId)</argsstring>
        <name>SilKit_SystemMonitor_AddParticipantStatusHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="619" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="619" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1ae5ef014827c8b6bf781ab329d8bbc575" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_SystemMonitor_RemoveParticipantStatusHandler_t) (SilKit_SystemMonitor *systemMonitor, SilKit_HandlerId handlerId)</definition>
        <argsstring>)(SilKit_SystemMonitor *systemMonitor, SilKit_HandlerId handlerId)</argsstring>
        <name>SilKit_SystemMonitor_RemoveParticipantStatusHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="631" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="631" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1ad27244595cbe33f32d0d06e84a45d3d4" prot="public" static="no">
        <type>struct <ref refid="struct_sil_kit___participant_connection_information" kindref="compound">SilKit_ParticipantConnectionInformation</ref></type>
        <definition>typedef struct SilKit_ParticipantConnectionInformation  SilKit_ParticipantConnectionInformation</definition>
        <argsstring></argsstring>
        <name>SilKit_ParticipantConnectionInformation</name>
        <briefdescription>
<para>Information about a participant connection in the <ref refid="_orchestration_8h_1ab6f1805c56164a51b082c720aa35a8ae" kindref="member">SilKit_SystemMonitor_ParticipantConnectedHandler_t</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="640" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1ab6f1805c56164a51b082c720aa35a8ae" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void( * SilKit_SystemMonitor_ParticipantConnectedHandler_t) (void *context, SilKit_SystemMonitor *systemMonitor, const SilKit_ParticipantConnectionInformation *participantConnectionInformation)</definition>
        <argsstring>)(void *context, SilKit_SystemMonitor *systemMonitor, const SilKit_ParticipantConnectionInformation *participantConnectionInformation)</argsstring>
        <name>SilKit_SystemMonitor_ParticipantConnectedHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback type to indicate that a participant has been connected. Cf., <ref refid="_orchestration_8h_1a1895794e8da57137a685d9b7e2355836" kindref="member">SilKit_SystemMonitor_SetParticipantConnectedHandler</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="645" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="645" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a2a9cc99e65a4e726d49770090acd7caa" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_SystemMonitor_SetParticipantConnectedHandler_t) (SilKit_SystemMonitor *systemMonitor, void *context, SilKit_SystemMonitor_ParticipantConnectedHandler_t handler)</definition>
        <argsstring>)(SilKit_SystemMonitor *systemMonitor, void *context, SilKit_SystemMonitor_ParticipantConnectedHandler_t handler)</argsstring>
        <name>SilKit_SystemMonitor_SetParticipantConnectedHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="658" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="658" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1ae5687b6135df8ff627369bd193f34208" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void( * SilKit_SystemMonitor_ParticipantDisconnectedHandler_t) (void *context, SilKit_SystemMonitor *systemMonitor, const SilKit_ParticipantConnectionInformation *participantConnectionInformation)</definition>
        <argsstring>)(void *context, SilKit_SystemMonitor *systemMonitor, const SilKit_ParticipantConnectionInformation *participantConnectionInformation)</argsstring>
        <name>SilKit_SystemMonitor_ParticipantDisconnectedHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback type to indicate that a participant has been disconnected. Cf., <ref refid="_orchestration_8h_1ae37b68bea6a1f8ceac2f9852fb89e4d4" kindref="member">SilKit_SystemMonitor_SetParticipantDisconnectedHandler</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="664" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="664" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a55582b4c0e4c917a6a39eb92692406b2" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_SystemMonitor_SetParticipantDisconnectedHandler_t) (SilKit_SystemMonitor *systemMonitor, void *context, SilKit_SystemMonitor_ParticipantDisconnectedHandler_t handler)</definition>
        <argsstring>)(SilKit_SystemMonitor *systemMonitor, void *context, SilKit_SystemMonitor_ParticipantDisconnectedHandler_t handler)</argsstring>
        <name>SilKit_SystemMonitor_SetParticipantDisconnectedHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="677" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="677" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1ab865e0b4b45611e4d3510962865d9b7d" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_SystemMonitor_IsParticipantConnected_t) (SilKit_SystemMonitor *systemMonitor, const char *participantName, SilKit_Bool *out)</definition>
        <argsstring>)(SilKit_SystemMonitor *systemMonitor, const char *participantName, SilKit_Bool *out)</argsstring>
        <name>SilKit_SystemMonitor_IsParticipantConnected_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="690" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="690" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a709355cb2753305f5f91fff8e955a090" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( *  SilKit_Experimental_SystemController_Create_t) (SilKit_Experimental_SystemController **outSystemController, SilKit_Participant *participant)</definition>
        <argsstring>)(SilKit_Experimental_SystemController **outSystemController, SilKit_Participant *participant)</argsstring>
        <name>SilKit_Experimental_SystemController_Create_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="704" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="704" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a688b9454e08cc10dc3353aca21c0dfd4" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode(*  SilKit_Experimental_SystemController_AbortSimulation_t) (SilKit_Experimental_SystemController *systemController)</definition>
        <argsstring>)(SilKit_Experimental_SystemController *systemController)</argsstring>
        <name>SilKit_Experimental_SystemController_AbortSimulation_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="722" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="722" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_orchestration_8h_1a3ddd56d4f92a9a8277cff9bcc8171497" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_Experimental_SystemController_SetWorkflowConfiguration_t) (SilKit_Experimental_SystemController *systemController, const SilKit_WorkflowConfiguration *workflowConfiguration)</definition>
        <argsstring>)(SilKit_Experimental_SystemController *systemController, const SilKit_WorkflowConfiguration *workflowConfiguration)</argsstring>
        <name>SilKit_Experimental_SystemController_SetWorkflowConfiguration_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="744" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" bodystart="744" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_orchestration_8h_1a51a688e4fb748208a7c1dc6605a79713" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_LifecycleService_Create</definition>
        <argsstring>(SilKit_LifecycleService **outLifecycleService, SilKit_Participant *participant, const SilKit_LifecycleConfiguration *startConfiguration)</argsstring>
        <name>SilKit_LifecycleService_Create</name>
        <param>
          <type><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref> **</type>
          <declname>outLifecycleService</declname>
        </param>
        <param>
          <type><ref refid="_types_8h_1ad68cbbe03eb41e3b5683b5422e3cb9ae" kindref="member">SilKit_Participant</ref> *</type>
          <declname>participant</declname>
        </param>
        <param>
          <type>const <ref refid="struct_sil_kit___lifecycle_configuration" kindref="compound">SilKit_LifecycleConfiguration</ref> *</type>
          <declname>startConfiguration</declname>
        </param>
        <briefdescription>
<para>Create a lifecycle service at this SIL Kit simulation participant. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outLifecycleService</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer that refers to the resulting lifecycle service (out parameter). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>participant</parametername>
</parameternamelist>
<parameterdescription>
<para>The simulation participant at which the lifecycle service should be created. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>startConfiguration</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired start configuration of the lifecycle.</para></parameterdescription>
</parameteritem>
</parameterlist>
The object returned must not be deallocated using free()! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1a59e23ae65723660f4d7eaf5ad1916d77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_LifecycleService_SetCommunicationReadyHandler</definition>
        <argsstring>(SilKit_LifecycleService *lifecycleService, void *context, SilKit_LifecycleService_CommunicationReadyHandler_t handler)</argsstring>
        <name>SilKit_LifecycleService_SetCommunicationReadyHandler</name>
        <param>
          <type><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref> *</type>
          <declname>lifecycleService</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="_orchestration_8h_1ad7704f5287fc1524f92fb717f82e6e1b" kindref="member">SilKit_LifecycleService_CommunicationReadyHandler_t</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Register a callback that is executed once communication with controllers is possible. </para>        </briefdescription>
        <detaileddescription>
<para>The handler is called after <ref refid="_orchestration_8h_1a9377a7ce38e1dbda994fd9eb1a3ffea2" kindref="member">SilKit_ParticipantState_CommunicationInitialized</ref> is reached. This handler is invoked on the <ref refid="namespace_sil_kit" kindref="compound">SilKit</ref> I/O worker thread, and receiving messages during the handler invocation is not possible. For an asynchronous invocation, see <ref refid="_orchestration_8h_1a579cc25cb41e548809f6e78cc0aec098" kindref="member">SilKit_LifecycleService_SetCommunicationReadyHandlerAsync</ref> and <ref refid="_orchestration_8h_1a70b07870401b2d2ad6262c60732bbb9e" kindref="member">SilKit_LifecycleService_CompleteCommunicationReadyHandlerAsync</ref>. After the handler has been processed, the participant switches to the <ref refid="_orchestration_8h_1a25d5acc9f0708b5c17112b9ef1e823f9" kindref="member">SilKit_ParticipantState_ReadyToRun</ref> state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lifecycleService</parametername>
</parameternamelist>
<parameterdescription>
<para>The lifecycle service that switched to the CommunicationInitialized participant state. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>A user provided context accessible in the handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler to be called on initialization </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1a579cc25cb41e548809f6e78cc0aec098" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_LifecycleService_SetCommunicationReadyHandlerAsync</definition>
        <argsstring>(SilKit_LifecycleService *lifecycleService, void *context, SilKit_LifecycleService_CommunicationReadyHandler_t handler)</argsstring>
        <name>SilKit_LifecycleService_SetCommunicationReadyHandlerAsync</name>
        <param>
          <type><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref> *</type>
          <declname>lifecycleService</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="_orchestration_8h_1ad7704f5287fc1524f92fb717f82e6e1b" kindref="member">SilKit_LifecycleService_CommunicationReadyHandler_t</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Register a callback that is executed once all communication channels between participants with a lifecycle have been set up and are ready for communication. </para>        </briefdescription>
        <detaileddescription>
<para>The handler is called after <ref refid="_orchestration_8h_1a9377a7ce38e1dbda994fd9eb1a3ffea2" kindref="member">SilKit_ParticipantState_CommunicationInitialized</ref> is reached. The API user has to signal the completion of the handler by invoking <ref refid="_orchestration_8h_1a70b07870401b2d2ad6262c60732bbb9e" kindref="member">SilKit_LifecycleService_CompleteCommunicationReadyHandlerAsync</ref>. Note that <ref refid="_orchestration_8h_1a70b07870401b2d2ad6262c60732bbb9e" kindref="member">SilKit_LifecycleService_CompleteCommunicationReadyHandlerAsync</ref> may not be called from within any SilKit_LifecycleService_CommunicationReadyHandler_t. The participant remains in its state until <ref refid="_orchestration_8h_1a70b07870401b2d2ad6262c60732bbb9e" kindref="member">SilKit_LifecycleService_CompleteCommunicationReadyHandlerAsync</ref> is invoked and then switches to the <ref refid="_orchestration_8h_1a25d5acc9f0708b5c17112b9ef1e823f9" kindref="member">SilKit_ParticipantState_ReadyToRun</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lifecycleService</parametername>
</parameternamelist>
<parameterdescription>
<para>The lifecycle service receiving the (re-)initialization command </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>A user provided context accessible in the handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler to be called on initialization </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="212" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1a70b07870401b2d2ad6262c60732bbb9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_LifecycleService_CompleteCommunicationReadyHandlerAsync</definition>
        <argsstring>(SilKit_LifecycleService *lifecycleService)</argsstring>
        <name>SilKit_LifecycleService_CompleteCommunicationReadyHandlerAsync</name>
        <param>
          <type><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref> *</type>
          <declname>lifecycleService</declname>
        </param>
        <briefdescription>
<para>Notify that the async <ref refid="_orchestration_8h_1ad7704f5287fc1524f92fb717f82e6e1b" kindref="member">SilKit_LifecycleService_CommunicationReadyHandler_t</ref> is completed. </para>        </briefdescription>
        <detaileddescription>
<para>This method must not be invoked from within a SilKit_LifecycleService_CommunicationReadyHandler_t. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lifecycleService</parametername>
</parameternamelist>
<parameterdescription>
<para>The lifecycle service receiving the update. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1ad56a04da89dd48fc7c19364df04378f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_LifecycleService_SetStartingHandler</definition>
        <argsstring>(SilKit_LifecycleService *lifecycleService, void *context, SilKit_LifecycleService_StartingHandler_t handler)</argsstring>
        <name>SilKit_LifecycleService_SetStartingHandler</name>
        <param>
          <type><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref> *</type>
          <declname>lifecycleService</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="_orchestration_8h_1a0b99b65a5d1b09ce7bf29e8d694f6975" kindref="member">SilKit_LifecycleService_StartingHandler_t</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>(Asynchronous participants only) Register a callback that is executed once directly before the participant enters SilKit_ParticipantState_Running. </para>        </briefdescription>
        <detaileddescription>
<para>This handler is triggered just before the participant changes to <ref refid="namespace_sil_kit_1_1_services_1_1_orchestration_1a65bc5be11c4f390b95f6305916e780f7a5bda814c4aedb126839228f1a3d92f09" kindref="member">SilKit::Services::Orchestration::ParticipantState::Running</ref>. It is only triggered if the participant does NOT use virtual time synchronization. It does not block other participants from changing to ParticipantState::Running and should only be used for lightweight operations such as starting timers. It is executed in the context of an internal thread that received the command. After the handler has been processed, the participant switches to the <ref refid="_orchestration_8h_1a480ef9db035a23f3a0764929510e93fc" kindref="member">SilKit_ParticipantState_Running</ref> state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lifecycleService</parametername>
</parameternamelist>
<parameterdescription>
<para>The lifecycle service that triggers the StartingHandler. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>A user provided context accessible in the handler. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler to be called when starting. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="253" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1a4f52e5e0750a810a88e5f827084c9aa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_LifecycleService_SetStopHandler</definition>
        <argsstring>(SilKit_LifecycleService *lifecycleService, void *context, SilKit_LifecycleService_StopHandler_t handler)</argsstring>
        <name>SilKit_LifecycleService_SetStopHandler</name>
        <param>
          <type><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref> *</type>
          <declname>lifecycleService</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="_orchestration_8h_1a5c8dfc9ffcb4ba86ec0489e83c0e6a81" kindref="member">SilKit_LifecycleService_StopHandler_t</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Register a callback that is executed on simulation stop. </para>        </briefdescription>
        <detaileddescription>
<para>The handler is called when the participant has entered the <ref refid="_orchestration_8h_1a22685e1b453ad4a0feed62f0e706edb6" kindref="member">SilKit_ParticipantState_Stopping</ref> state. It is executed in the context of an internal thread that received the command. After the handler has been processed, the participant switches to the <ref refid="_orchestration_8h_1a4a2215d1cadfe464dcce87e09fbb4759" kindref="member">SilKit_ParticipantState_Stopped</ref> state.</para><para>Throwing an error inside the handler will cause a call to ReportError().</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lifecycleService</parametername>
</parameternamelist>
<parameterdescription>
<para>The lifecycle service receiving the stop command </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>A user provided context accessible in the handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler to be called </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="282" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1afc8646eef6d25b181468d8a93b3a25fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_LifecycleService_SetShutdownHandler</definition>
        <argsstring>(SilKit_LifecycleService *lifecycleService, void *context, SilKit_LifecycleService_ShutdownHandler_t handler)</argsstring>
        <name>SilKit_LifecycleService_SetShutdownHandler</name>
        <param>
          <type><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref> *</type>
          <declname>lifecycleService</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="_orchestration_8h_1a32be5ea20f8ae06938860cee8902d95e" kindref="member">SilKit_LifecycleService_ShutdownHandler_t</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Register a callback that is executed on simulation shutdown. </para>        </briefdescription>
        <detaileddescription>
<para>The handler is called when the participant is entering the <ref refid="_orchestration_8h_1a7be191365d4e888b72a2d520c81b09ca" kindref="member">SilKit_ParticipantState_ShuttingDown</ref> state. It is executed in the context of the middleware thread that received the command. After the handler has been processed, the participant switches to the <ref refid="_orchestration_8h_1ae2459ff99f83867fb5b845ce18c6cfea" kindref="member">SilKit_ParticipantState_Shutdown</ref> state and is allowed to terminate.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lifecycleService</parametername>
</parameternamelist>
<parameterdescription>
<para>The lifecycle service receiving the shutdown command </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>A user provided context accessible in the handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler to be called </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="310" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1a3dbe846071dc457ffb06a2bdc28579ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_LifecycleService_SetAbortHandler</definition>
        <argsstring>(SilKit_LifecycleService *lifecycleService, void *context, SilKit_LifecycleService_AbortHandler_t handler)</argsstring>
        <name>SilKit_LifecycleService_SetAbortHandler</name>
        <param>
          <type><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref> *</type>
          <declname>lifecycleService</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="_orchestration_8h_1ad91a4ec709cdc4c116c87f74fc500184" kindref="member">SilKit_LifecycleService_AbortHandler_t</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Register a callback that is executed on simulation abort. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lifecycleService</parametername>
</parameternamelist>
<parameterdescription>
<para>The lifecycle service receiving the abort command </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>A user provided context accessible in the handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler to be called </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="332" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1a7e176ee866b50cc71aafa6c86daca4f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_LifecycleService_StartLifecycle</definition>
        <argsstring>(SilKit_LifecycleService *lifecycleService)</argsstring>
        <name>SilKit_LifecycleService_StartLifecycle</name>
        <param>
          <type><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref> *</type>
          <declname>lifecycleService</declname>
        </param>
        <briefdescription>
<para>Start the lifecycle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lifecycleService</parametername>
</parameternamelist>
<parameterdescription>
<para>The instance of the lifecycleService. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="342" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1ab744a6b073c50695f02b30b6d5452fad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_LifecycleService_WaitForLifecycleToComplete</definition>
        <argsstring>(SilKit_LifecycleService *lifecycleService, SilKit_ParticipantState *outParticipantState)</argsstring>
        <name>SilKit_LifecycleService_WaitForLifecycleToComplete</name>
        <param>
          <type><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref> *</type>
          <declname>lifecycleService</declname>
        </param>
        <param>
          <type><ref refid="_orchestration_8h_1a395dc77953e2b19b6b353ea3257e25ff" kindref="member">SilKit_ParticipantState</ref> *</type>
          <declname>outParticipantState</declname>
        </param>
        <briefdescription>
<para>Wait for to asynchronous run operation to complete and return the final participant state. </para>        </briefdescription>
        <detaileddescription>
<para>Blocks until the simulation is shutdown. Prior to this method, <ref refid="_orchestration_8h_1a7e176ee866b50cc71aafa6c86daca4f9" kindref="member">SilKit_LifecycleService_StartLifecycle</ref> has to be called.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lifecycleService</parametername>
</parameternamelist>
<parameterdescription>
<para>The lifecycle service to wait for completing the asynchronous run operation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outParticipantState</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer for storing the final participant state (out parameter). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="356" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1a25f2bf77761e8e061d23466334387a94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_LifecycleService_ReportError</definition>
        <argsstring>(SilKit_LifecycleService *lifecycleService, const char *reason)</argsstring>
        <name>SilKit_LifecycleService_ReportError</name>
        <param>
          <type><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref> *</type>
          <declname>lifecycleService</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>reason</declname>
        </param>
        <briefdescription>
<para>Abort current simulation run due to an error. </para>        </briefdescription>
        <detaileddescription>
<para>Switch to the <ref refid="_orchestration_8h_1a2ff679f11c8da94f041f7ad8e827a427" kindref="member">SilKit_ParticipantState_Error</ref> state and report the error message in the SIL Kit system.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lifecycleService</parametername>
</parameternamelist>
<parameterdescription>
<para>The lifecycle service of the simulation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reason</parametername>
</parameternamelist>
<parameterdescription>
<para>A string describing the error. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="370" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1ae1523de93ec75403204c4012a877b836" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_LifecycleService_Pause</definition>
        <argsstring>(SilKit_LifecycleService *lifecycleService, const char *reason)</argsstring>
        <name>SilKit_LifecycleService_Pause</name>
        <param>
          <type><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref> *</type>
          <declname>lifecycleService</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>reason</declname>
        </param>
        <briefdescription>
<para>Pause execution of the participant. </para>        </briefdescription>
        <detaileddescription>
<para>Switch to <ref refid="_orchestration_8h_1ab2f4b5632b0121fc2edd0c69ff7e5545" kindref="member">SilKit_ParticipantState_Paused</ref> due to the provided <computeroutput>reason</computeroutput>.</para><para>When a client is in state <ref refid="_orchestration_8h_1ab2f4b5632b0121fc2edd0c69ff7e5545" kindref="member">SilKit_ParticipantState_Paused</ref>, it must not be considered as unresponsive even if a health monitoring related timeout occurs.</para><para>Precondition: State() == <ref refid="_orchestration_8h_1a480ef9db035a23f3a0764929510e93fc" kindref="member">SilKit_ParticipantState_Running</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="386" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1a34049ccfbe3ce993af8403fb701c6cc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_LifecycleService_Continue</definition>
        <argsstring>(SilKit_LifecycleService *lifecycleService)</argsstring>
        <name>SilKit_LifecycleService_Continue</name>
        <param>
          <type><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref> *</type>
          <declname>lifecycleService</declname>
        </param>
        <briefdescription>
<para>Switch back to <ref refid="_orchestration_8h_1a480ef9db035a23f3a0764929510e93fc" kindref="member">SilKit_ParticipantState_Running</ref> after having paused. </para>        </briefdescription>
        <detaileddescription>
<para>Precondition: State() == <ref refid="_orchestration_8h_1ab2f4b5632b0121fc2edd0c69ff7e5545" kindref="member">SilKit_ParticipantState_Paused</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="397" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1a6ef8d9825b677abad94e97b77c7e5a5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_LifecycleService_Stop</definition>
        <argsstring>(SilKit_LifecycleService *lifecycleService, const char *reason)</argsstring>
        <name>SilKit_LifecycleService_Stop</name>
        <param>
          <type><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref> *</type>
          <declname>lifecycleService</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>reason</declname>
        </param>
        <briefdescription>
<para>Stop execution of the participant. </para>        </briefdescription>
        <detaileddescription>
<para>Allows the participant to exit the RunAsync loop, e.g., if it is unable to further progress its simulation.</para><para>Calls the StopHandler and then switches to the <ref refid="_orchestration_8h_1a4a2215d1cadfe464dcce87e09fbb4759" kindref="member">SilKit_ParticipantState_Stopped</ref> state.</para><para>NB: In general, Stop should not be called by the participants as the end of simulation is governed by the central execution controller. This method should only be used if the client cannot participate in the system simulation anymore.</para><para>Precondition: State() == <ref refid="_orchestration_8h_1a480ef9db035a23f3a0764929510e93fc" kindref="member">SilKit_ParticipantState_Running</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="416" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1a24aab4c93a26132c9ff5990868bc8366" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_LifecycleService_State</definition>
        <argsstring>(SilKit_ParticipantState *outParticipantState, SilKit_LifecycleService *lifecycleService)</argsstring>
        <name>SilKit_LifecycleService_State</name>
        <param>
          <type><ref refid="_orchestration_8h_1a395dc77953e2b19b6b353ea3257e25ff" kindref="member">SilKit_ParticipantState</ref> *</type>
          <declname>outParticipantState</declname>
        </param>
        <param>
          <type><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref> *</type>
          <declname>lifecycleService</declname>
        </param>
        <briefdescription>
<para>Get the current participant state. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outParticipantState</parametername>
</parameternamelist>
<parameterdescription>
<para>The current participant state will be written to the pointee. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lifecycleService</parametername>
</parameternamelist>
<parameterdescription>
<para>The lifecycle service obtained by <ref refid="_orchestration_8h_1a51a688e4fb748208a7c1dc6605a79713" kindref="member">SilKit_LifecycleService_Create</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="425" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1a4dd0b55745a3c01afe4db429862646cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_LifecycleService_Status</definition>
        <argsstring>(SilKit_ParticipantStatus *outParticipantStatus, SilKit_LifecycleService *lifecycleService)</argsstring>
        <name>SilKit_LifecycleService_Status</name>
        <param>
          <type><ref refid="struct_sil_kit___participant_status" kindref="compound">SilKit_ParticipantStatus</ref> *</type>
          <declname>outParticipantStatus</declname>
        </param>
        <param>
          <type><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref> *</type>
          <declname>lifecycleService</declname>
        </param>
        <briefdescription>
<para>Get the current participant status. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outParticipantStatus</parametername>
</parameternamelist>
<parameterdescription>
<para>The current participant status will be written to the pointee. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lifecycleService</parametername>
</parameternamelist>
<parameterdescription>
<para>The lifecycle service obtained by <ref refid="_orchestration_8h_1a51a688e4fb748208a7c1dc6605a79713" kindref="member">SilKit_LifecycleService_Create</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="436" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1ad62446856e9397c968fdf2fe2d873c6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_TimeSyncService_Create</definition>
        <argsstring>(SilKit_TimeSyncService **outTimeSyncService, SilKit_LifecycleService *lifecycleService)</argsstring>
        <name>SilKit_TimeSyncService_Create</name>
        <param>
          <type><ref refid="_orchestration_8h_1af9eb60e0de031fe0b8d4ad5e3aab7976" kindref="member">SilKit_TimeSyncService</ref> **</type>
          <declname>outTimeSyncService</declname>
        </param>
        <param>
          <type><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref> *</type>
          <declname>lifecycleService</declname>
        </param>
        <briefdescription>
<para>Create a time sync service at this SIL Kit simulation participant. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outTimeSyncService</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer that refers to the resulting time sync service (out parameter). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lifecycleService</parametername>
</parameternamelist>
<parameterdescription>
<para>The lifecyle service at which the time sync service should be created.</para></parameterdescription>
</parameteritem>
</parameterlist>
The object returned must not be deallocated using free()! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="455" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1a9450acac7c40b0fa7c8728f04a731c2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_TimeSyncService_SetSimulationStepHandler</definition>
        <argsstring>(SilKit_TimeSyncService *timeSyncService, void *context, SilKit_TimeSyncService_SimulationStepHandler_t handler, SilKit_NanosecondsTime initialStepSize)</argsstring>
        <name>SilKit_TimeSyncService_SetSimulationStepHandler</name>
        <param>
          <type><ref refid="_orchestration_8h_1af9eb60e0de031fe0b8d4ad5e3aab7976" kindref="member">SilKit_TimeSyncService</ref> *</type>
          <declname>timeSyncService</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="_orchestration_8h_1a2acde74070aa1322226101687d6d4d78" kindref="member">SilKit_TimeSyncService_SimulationStepHandler_t</ref></type>
          <declname>handler</declname>
        </param>
        <param>
          <type><ref refid="_orchestration_8h_1a4a5c030b6c22d0228bad174647d4b7fd" kindref="member">SilKit_NanosecondsTime</ref></type>
          <declname>initialStepSize</declname>
        </param>
        <briefdescription>
<para>Set the task to be executed with each grant / tick. </para>        </briefdescription>
        <detaileddescription>
<para>Can be changed at runtime. Execution context depends on the run type.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeSyncService</parametername>
</parameternamelist>
<parameterdescription>
<para>The time-sync service obtained via <ref refid="_orchestration_8h_1ad62446856e9397c968fdf2fe2d873c6d" kindref="member">SilKit_TimeSyncService_Create</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>A user provided context accessible in the handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler to be called if the simulation task is due </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initialStepSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The initial size of the simulation step of this participant in nanoseconds </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="479" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1aa0b9e9937b7c87d434005f34f4c2f4c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_TimeSyncService_SetSimulationStepHandlerAsync</definition>
        <argsstring>(SilKit_TimeSyncService *timeSyncService, void *context, SilKit_TimeSyncService_SimulationStepHandler_t handler, SilKit_NanosecondsTime initialStepSize)</argsstring>
        <name>SilKit_TimeSyncService_SetSimulationStepHandlerAsync</name>
        <param>
          <type><ref refid="_orchestration_8h_1af9eb60e0de031fe0b8d4ad5e3aab7976" kindref="member">SilKit_TimeSyncService</ref> *</type>
          <declname>timeSyncService</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="_orchestration_8h_1a2acde74070aa1322226101687d6d4d78" kindref="member">SilKit_TimeSyncService_SimulationStepHandler_t</ref></type>
          <declname>handler</declname>
        </param>
        <param>
          <type><ref refid="_orchestration_8h_1a4a5c030b6c22d0228bad174647d4b7fd" kindref="member">SilKit_NanosecondsTime</ref></type>
          <declname>initialStepSize</declname>
        </param>
        <briefdescription>
<para>Set the task to be executed with each grant / tick. </para>        </briefdescription>
        <detaileddescription>
<para>Can be changed at runtime. Execution context depends on the run type.</para><para>The difference to SetSimulationStepHandler is, that after execution of the simulation task the advance in simulation time will NOT be signaled to other participants. Progress in simulation time (including all other participants) will cease. Instead, SilKit_TimeSyncService_CompleteSimulationStep must be called FROM ANY OTHER THREAD to &apos;unlock&apos; the thread executing the simulation task, and let it execute again. Thus, a fine grained control over the whole simulation time progress can be achieved by calling CompleteSimulationStep from an application thread. Participants using &apos;regular&apos; simulation tasks and non-blocking simulation tasks may be freely mixed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeSyncService</parametername>
</parameternamelist>
<parameterdescription>
<para>The time-sync service obtained via <ref refid="_orchestration_8h_1ad62446856e9397c968fdf2fe2d873c6d" kindref="member">SilKit_TimeSyncService_Create</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>A user provided context accessible in the handler </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler to be called if the simulation task is due </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initialStepSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The initial size of the simulation step of this participant in nanoseconds </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="504" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1a4f5806df0c31c0536e52a8e14948b2b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_TimeSyncService_CompleteSimulationStep</definition>
        <argsstring>(SilKit_TimeSyncService *timeSyncService)</argsstring>
        <name>SilKit_TimeSyncService_CompleteSimulationStep</name>
        <param>
          <type><ref refid="_orchestration_8h_1af9eb60e0de031fe0b8d4ad5e3aab7976" kindref="member">SilKit_TimeSyncService</ref> *</type>
          <declname>timeSyncService</declname>
        </param>
        <briefdescription>
<para>Complete the current step of a non-blocking simulation task. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeSyncService</parametername>
</parameternamelist>
<parameterdescription>
<para>The time sync service </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="516" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1aa7df4e430990a7a946a265f0cacd4e89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_TimeSyncService_Now</definition>
        <argsstring>(SilKit_TimeSyncService *timeSyncService, SilKit_NanosecondsTime *outNanosecondsTime)</argsstring>
        <name>SilKit_TimeSyncService_Now</name>
        <param>
          <type><ref refid="_orchestration_8h_1af9eb60e0de031fe0b8d4ad5e3aab7976" kindref="member">SilKit_TimeSyncService</ref> *</type>
          <declname>timeSyncService</declname>
        </param>
        <param>
          <type><ref refid="_orchestration_8h_1a4a5c030b6c22d0228bad174647d4b7fd" kindref="member">SilKit_NanosecondsTime</ref> *</type>
          <declname>outNanosecondsTime</declname>
        </param>
        <briefdescription>
<para>Get the current simulation time. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timeSyncService</parametername>
</parameternamelist>
<parameterdescription>
<para>The time sync service obtained via <ref refid="_orchestration_8h_1ad62446856e9397c968fdf2fe2d873c6d" kindref="member">SilKit_TimeSyncService_Create</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outNanosecondsTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The simulation time in nanoseconds. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="525" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1ab97a97556028d82321ec805efbb388ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_SystemMonitor_Create</definition>
        <argsstring>(SilKit_SystemMonitor **outSystemMonitor, SilKit_Participant *participant)</argsstring>
        <name>SilKit_SystemMonitor_Create</name>
        <param>
          <type><ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref> **</type>
          <declname>outSystemMonitor</declname>
        </param>
        <param>
          <type><ref refid="_types_8h_1ad68cbbe03eb41e3b5683b5422e3cb9ae" kindref="member">SilKit_Participant</ref> *</type>
          <declname>participant</declname>
        </param>
        <briefdescription>
<para>Create a system monitor at this SIL Kit simulation participant. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outSystemMonitor</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer that refers to the resulting sytem monitor (out parameter). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>participant</parametername>
</parameternamelist>
<parameterdescription>
<para>The simulation participant at which the system monitor should be created.</para></parameterdescription>
</parameteritem>
</parameterlist>
The object returned must not be deallocated using free()! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="545" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1ad744d214d02c60478e5d62c86291c688" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_SystemMonitor_GetParticipantStatus</definition>
        <argsstring>(SilKit_ParticipantStatus *outParticipantState, SilKit_SystemMonitor *systemMonitor, const char *participantName)</argsstring>
        <name>SilKit_SystemMonitor_GetParticipantStatus</name>
        <param>
          <type><ref refid="struct_sil_kit___participant_status" kindref="compound">SilKit_ParticipantStatus</ref> *</type>
          <declname>outParticipantState</declname>
        </param>
        <param>
          <type><ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref> *</type>
          <declname>systemMonitor</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>participantName</declname>
        </param>
        <briefdescription>
<para>Get the current participant state of the participant given by participantName. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="553" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1af32b26cd58da91ce3289bb2020a14f7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_SystemMonitor_GetSystemState</definition>
        <argsstring>(SilKit_SystemState *outSystemState, SilKit_SystemMonitor *systemMonitor)</argsstring>
        <name>SilKit_SystemMonitor_GetSystemState</name>
        <param>
          <type><ref refid="_orchestration_8h_1a4d6a8fe52fcfa9fbc3fd8c99ad6d9d4a" kindref="member">SilKit_SystemState</ref> *</type>
          <declname>outSystemState</declname>
        </param>
        <param>
          <type><ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref> *</type>
          <declname>systemMonitor</declname>
        </param>
        <briefdescription>
<para>Get the current <ref refid="_orchestration_8h_1a4d6a8fe52fcfa9fbc3fd8c99ad6d9d4a" kindref="member">SilKit_SystemState</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="562" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1a02e798cf7a9ad0a4254037bdb4782ec3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_SystemMonitor_AddSystemStateHandler</definition>
        <argsstring>(SilKit_SystemMonitor *systemMonitor, void *context, SilKit_SystemStateHandler_t handler, SilKit_HandlerId *outHandlerId)</argsstring>
        <name>SilKit_SystemMonitor_AddSystemStateHandler</name>
        <param>
          <type><ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref> *</type>
          <declname>systemMonitor</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="_orchestration_8h_1a6ee1384cf374d8eabec64b6c031c9a07" kindref="member">SilKit_SystemStateHandler_t</ref></type>
          <declname>handler</declname>
        </param>
        <param>
          <type><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref> *</type>
          <declname>outHandlerId</declname>
        </param>
        <briefdescription>
<para>Register a callback for system state changes. </para>        </briefdescription>
        <detaileddescription>
<para>If the current SystemState is not <ref refid="_orchestration_8h_1a27df30a56c385bbc5096aaaccae9351b" kindref="member">SilKit_SystemState_Invalid</ref>, the handler will be called immediately.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>systemMonitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The system monitor obtained via <ref refid="_orchestration_8h_1ab97a97556028d82321ec805efbb388ff" kindref="member">SilKit_SystemMonitor_Create</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The user context pointer made available to the handler. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler to be called to be called when the <ref refid="_orchestration_8h_1a4d6a8fe52fcfa9fbc3fd8c99ad6d9d4a" kindref="member">SilKit_SystemState</ref> changes. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outHandlerId</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler identifier that can be used to remove the callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="581" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1a528bffc36891a864c039943633867f53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_SystemMonitor_RemoveSystemStateHandler</definition>
        <argsstring>(SilKit_SystemMonitor *systemMonitor, SilKit_HandlerId handlerId)</argsstring>
        <name>SilKit_SystemMonitor_RemoveSystemStateHandler</name>
        <param>
          <type><ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref> *</type>
          <declname>systemMonitor</declname>
        </param>
        <param>
          <type><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref></type>
          <declname>handlerId</declname>
        </param>
        <briefdescription>
<para>Remove a <ref refid="_orchestration_8h_1a6ee1384cf374d8eabec64b6c031c9a07" kindref="member">SilKit_SystemStateHandler_t</ref> by SilKit_HandlerId on this participant. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>systemMonitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The system monitor obtained via <ref refid="_orchestration_8h_1ab97a97556028d82321ec805efbb388ff" kindref="member">SilKit_SystemMonitor_Create</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handlerId</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier of the callback to be removed. Obtained upon adding to respective handler. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="595" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1a2344753af998c32f04d6fe58ae0e2108" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_SystemMonitor_AddParticipantStatusHandler</definition>
        <argsstring>(SilKit_SystemMonitor *systemMonitor, void *context, SilKit_ParticipantStatusHandler_t handler, SilKit_HandlerId *outHandlerId)</argsstring>
        <name>SilKit_SystemMonitor_AddParticipantStatusHandler</name>
        <param>
          <type><ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref> *</type>
          <declname>systemMonitor</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="_orchestration_8h_1a5f8bab474d4efcc6726d31abfc8e0fcf" kindref="member">SilKit_ParticipantStatusHandler_t</ref></type>
          <declname>handler</declname>
        </param>
        <param>
          <type><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref> *</type>
          <declname>outHandlerId</declname>
        </param>
        <briefdescription>
<para>Register a callback for status changes of participants. </para>        </briefdescription>
        <detaileddescription>
<para>The handler will be called immediately for any participant that is not in <ref refid="_orchestration_8h_1a0b497fab4f9ed9f7e8b7f5eaa878876b" kindref="member">SilKit_ParticipantState_Invalid</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>systemMonitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The system monitor obtained via <ref refid="_orchestration_8h_1ab97a97556028d82321ec805efbb388ff" kindref="member">SilKit_SystemMonitor_Create</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The user context pointer made available to the handler. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler to be called to be called when the participant status changes. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outHandlerId</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler identifier that can be used to remove the callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="614" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1a3518f8af4c7f5b82816e64b6a88a2663" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_SystemMonitor_RemoveParticipantStatusHandler</definition>
        <argsstring>(SilKit_SystemMonitor *systemMonitor, SilKit_HandlerId handlerId)</argsstring>
        <name>SilKit_SystemMonitor_RemoveParticipantStatusHandler</name>
        <param>
          <type><ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref> *</type>
          <declname>systemMonitor</declname>
        </param>
        <param>
          <type><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref></type>
          <declname>handlerId</declname>
        </param>
        <briefdescription>
<para>Remove a <ref refid="_orchestration_8h_1a5f8bab474d4efcc6726d31abfc8e0fcf" kindref="member">SilKit_ParticipantStatusHandler_t</ref> by SilKit_HandlerId on this participant. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>systemMonitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The system monitor obtained via <ref refid="_orchestration_8h_1ab97a97556028d82321ec805efbb388ff" kindref="member">SilKit_SystemMonitor_Create</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handlerId</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier of the callback to be removed. Obtained upon adding to respective handler. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="628" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1a1895794e8da57137a685d9b7e2355836" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_SystemMonitor_SetParticipantConnectedHandler</definition>
        <argsstring>(SilKit_SystemMonitor *systemMonitor, void *context, SilKit_SystemMonitor_ParticipantConnectedHandler_t handler)</argsstring>
        <name>SilKit_SystemMonitor_SetParticipantConnectedHandler</name>
        <param>
          <type><ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref> *</type>
          <declname>systemMonitor</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="_orchestration_8h_1ab6f1805c56164a51b082c720aa35a8ae" kindref="member">SilKit_SystemMonitor_ParticipantConnectedHandler_t</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Set a callback for participants being connected. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>systemMonitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The system monitor obtained via <ref refid="_orchestration_8h_1ab97a97556028d82321ec805efbb388ff" kindref="member">SilKit_SystemMonitor_Create</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The user context pointer made available to the handler. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler to be called to be called when a participant has been connected. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="655" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1ae37b68bea6a1f8ceac2f9852fb89e4d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_SystemMonitor_SetParticipantDisconnectedHandler</definition>
        <argsstring>(SilKit_SystemMonitor *systemMonitor, void *context, SilKit_SystemMonitor_ParticipantDisconnectedHandler_t handler)</argsstring>
        <name>SilKit_SystemMonitor_SetParticipantDisconnectedHandler</name>
        <param>
          <type><ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref> *</type>
          <declname>systemMonitor</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="_orchestration_8h_1ae5687b6135df8ff627369bd193f34208" kindref="member">SilKit_SystemMonitor_ParticipantDisconnectedHandler_t</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Set a callback for participants being disconnected. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>systemMonitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The system monitor obtained via <ref refid="_orchestration_8h_1ab97a97556028d82321ec805efbb388ff" kindref="member">SilKit_SystemMonitor_Create</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The user context pointer made available to the handler. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler to be called to be called when a participant has been disconnected. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="674" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1a872a3313e64a37d367768ea1398c9a90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_SystemMonitor_IsParticipantConnected</definition>
        <argsstring>(SilKit_SystemMonitor *systemMonitor, const char *participantName, SilKit_Bool *out)</argsstring>
        <name>SilKit_SystemMonitor_IsParticipantConnected</name>
        <param>
          <type><ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref> *</type>
          <declname>systemMonitor</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>participantName</declname>
        </param>
        <param>
          <type><ref refid="_types_8h_1acd67002df70237d213b7773b26891fcc" kindref="member">SilKit_Bool</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Check if a participant identified by the participantName is present. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>systemMonitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The system monitor obtained via <ref refid="_orchestration_8h_1ab97a97556028d82321ec805efbb388ff" kindref="member">SilKit_SystemMonitor_Create</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>participantName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the participant for which presence is queried. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="_types_8h_1a12c997607dd5580cb5bc51b6fe90c241" kindref="member">SilKit_True</ref> is written to the pointee if the participant is present, otherwise <ref refid="_types_8h_1a9b02e1dc7c9dbabc244462988cca9b4e" kindref="member">SilKit_False</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="686" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1ad729532db085e3b0fd48d9ff1c708110" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_Experimental_SystemController_Create</definition>
        <argsstring>(SilKit_Experimental_SystemController **outSystemController, SilKit_Participant *participant)</argsstring>
        <name>SilKit_Experimental_SystemController_Create</name>
        <param>
          <type><ref refid="_types_8h_1ad0c54a6ff4d48c97463fc2cf6d005d22" kindref="member">SilKit_Experimental_SystemController</ref> **</type>
          <declname>outSystemController</declname>
        </param>
        <param>
          <type><ref refid="_types_8h_1ad68cbbe03eb41e3b5683b5422e3cb9ae" kindref="member">SilKit_Participant</ref> *</type>
          <declname>participant</declname>
        </param>
        <briefdescription>
<para>Return the experimental ISystemController at a given SIL Kit participant. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This function is not part of the stable API and ABI of the SIL Kit. It may be removed at any time without prior notice.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outSystemController</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer that refers to the resulting system controller (out parameter). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>participant</parametername>
</parameternamelist>
<parameterdescription>
<para>The participant instance for which the system controller is created </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="701" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1a0b77ccece36b4afdb85e5ff91388d9fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_Experimental_SystemController_AbortSimulation</definition>
        <argsstring>(SilKit_Experimental_SystemController *systemController)</argsstring>
        <name>SilKit_Experimental_SystemController_AbortSimulation</name>
        <param>
          <type><ref refid="_types_8h_1ad0c54a6ff4d48c97463fc2cf6d005d22" kindref="member">SilKit_Experimental_SystemController</ref> *</type>
          <declname>systemController</declname>
        </param>
        <briefdescription>
<para>Sends a SilKit::Services::Orchestration::SystemCommand::Kind::AbortSimulation to all participants. </para>        </briefdescription>
        <detaileddescription>
<para>The abort simulation command signals all participants to terminate their lifecycle, regardless of their current state.</para><para>The command is allowed at any time.</para><para><simplesect kind="warning"><para>This function is not part of the stable API and ABI of the SIL Kit. It may be removed at any time without prior notice.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>systemController</parametername>
</parameternamelist>
<parameterdescription>
<para>The system controller obtained via <ref refid="_orchestration_8h_1ad729532db085e3b0fd48d9ff1c708110" kindref="member">SilKit_Experimental_SystemController_Create</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="719" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_orchestration_8h_1a2f7a7b1de7315818caa20fb553f86636" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_Experimental_SystemController_SetWorkflowConfiguration</definition>
        <argsstring>(SilKit_Experimental_SystemController *systemController, const SilKit_WorkflowConfiguration *workflowConfiguration)</argsstring>
        <name>SilKit_Experimental_SystemController_SetWorkflowConfiguration</name>
        <param>
          <type><ref refid="_types_8h_1ad0c54a6ff4d48c97463fc2cf6d005d22" kindref="member">SilKit_Experimental_SystemController</ref> *</type>
          <declname>systemController</declname>
        </param>
        <param>
          <type>const <ref refid="struct_sil_kit___workflow_configuration" kindref="compound">SilKit_WorkflowConfiguration</ref> *</type>
          <declname>workflowConfiguration</declname>
        </param>
        <briefdescription>
<para>Configures details of the simulation workflow regarding lifecycle and participant coordination. </para>        </briefdescription>
        <detaileddescription>
<para>Only the required participant defined in the <ref refid="struct_sil_kit___workflow_configuration" kindref="compound">SilKit_WorkflowConfiguration</ref> are taken into account to define the system state. Further, the simulation time propagation also relies on the required participants.</para><para>The <ref refid="struct_sil_kit___workflow_configuration" kindref="compound">SilKit_WorkflowConfiguration</ref> is distributed to other participants, so it must only be set once by a single member of the simulation.</para><para><simplesect kind="warning"><para>This function is not part of the stable API and ABI of the SIL Kit. It may be removed at any time without prior notice.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>systemController</parametername>
</parameternamelist>
<parameterdescription>
<para>The system controller obtained via <ref refid="_orchestration_8h_1ad729532db085e3b0fd48d9ff1c708110" kindref="member">SilKit_Experimental_SystemController_Create</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>workflowConfiguration</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired configuration, currently containing a list of required participants </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h" line="740" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Copyright<sp/>(c)<sp/>2022<sp/>Vector<sp/>Informatik<sp/>GmbH</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="4"><highlight class="comment">a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the</highlight></codeline>
<codeline lineno="5"><highlight class="comment">&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including</highlight></codeline>
<codeline lineno="6"><highlight class="comment">without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,</highlight></codeline>
<codeline lineno="7"><highlight class="comment">distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="8"><highlight class="comment">permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to</highlight></codeline>
<codeline lineno="9"><highlight class="comment">the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment">The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="12"><highlight class="comment">included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="17"><highlight class="comment">NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE</highlight></codeline>
<codeline lineno="18"><highlight class="comment">LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION</highlight></codeline>
<codeline lineno="19"><highlight class="comment">OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="20"><highlight class="comment">WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_sil_kit_macros_8h" kindref="compound">silkit/capi/SilKitMacros.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_types_8h" kindref="compound">silkit/capi/Types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_interface_identifiers_8h" kindref="compound">silkit/capi/InterfaceIdentifiers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(push)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a4029ba13647be387d1d38057b99c7612" kindref="member">SILKIT_BEGIN_DECLS</ref></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="_orchestration_8h_1a4a5c030b6c22d0228bad174647d4b7fd" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint64_t<sp/><ref refid="_orchestration_8h_1a4a5c030b6c22d0228bad174647d4b7fd" kindref="member">SilKit_NanosecondsTime</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="_orchestration_8h_1a5d25eaae0d9c76a203a09936078740a8" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint64_t<sp/><ref refid="_orchestration_8h_1a5d25eaae0d9c76a203a09936078740a8" kindref="member">SilKit_NanosecondsWallclockTime</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="_orchestration_8h_1a395dc77953e2b19b6b353ea3257e25ff" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int16_t<sp/><ref refid="_orchestration_8h_1a395dc77953e2b19b6b353ea3257e25ff" kindref="member">SilKit_ParticipantState</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="_orchestration_8h_1a0b497fab4f9ed9f7e8b7f5eaa878876b" refkind="member"><highlight class="preprocessor">#define<sp/>SilKit_ParticipantState_Invalid<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_ParticipantState)<sp/><sp/><sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="_orchestration_8h_1ad5d7e0158a90da20a5f3b628bcf464e4" refkind="member"><highlight class="preprocessor">#define<sp/>SilKit_ParticipantState_ServicesCreated<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_ParticipantState)<sp/><sp/>10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="_orchestration_8h_1aa1b442cef1d0da9eb631d7c86ee9e242" refkind="member"><highlight class="preprocessor">#define<sp/>SilKit_ParticipantState_CommunicationInitializing<sp/><sp/><sp/>((SilKit_ParticipantState)<sp/><sp/>20)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="_orchestration_8h_1a9377a7ce38e1dbda994fd9eb1a3ffea2" refkind="member"><highlight class="preprocessor">#define<sp/>SilKit_ParticipantState_CommunicationInitialized<sp/><sp/><sp/><sp/>((SilKit_ParticipantState)<sp/><sp/>30)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="_orchestration_8h_1a25d5acc9f0708b5c17112b9ef1e823f9" refkind="member"><highlight class="preprocessor">#define<sp/>SilKit_ParticipantState_ReadyToRun<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_ParticipantState)<sp/><sp/>40)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="_orchestration_8h_1a480ef9db035a23f3a0764929510e93fc" refkind="member"><highlight class="preprocessor">#define<sp/>SilKit_ParticipantState_Running<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_ParticipantState)<sp/><sp/>50)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="_orchestration_8h_1ab2f4b5632b0121fc2edd0c69ff7e5545" refkind="member"><highlight class="preprocessor">#define<sp/>SilKit_ParticipantState_Paused<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_ParticipantState)<sp/><sp/>60)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="_orchestration_8h_1a22685e1b453ad4a0feed62f0e706edb6" refkind="member"><highlight class="preprocessor">#define<sp/>SilKit_ParticipantState_Stopping<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_ParticipantState)<sp/><sp/>70)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="_orchestration_8h_1a4a2215d1cadfe464dcce87e09fbb4759" refkind="member"><highlight class="preprocessor">#define<sp/>SilKit_ParticipantState_Stopped<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_ParticipantState)<sp/><sp/>80)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="_orchestration_8h_1a2ff679f11c8da94f041f7ad8e827a427" refkind="member"><highlight class="preprocessor">#define<sp/>SilKit_ParticipantState_Error<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_ParticipantState)<sp/><sp/>90)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="_orchestration_8h_1a7be191365d4e888b72a2d520c81b09ca" refkind="member"><highlight class="preprocessor">#define<sp/>SilKit_ParticipantState_ShuttingDown<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_ParticipantState)<sp/>100)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="_orchestration_8h_1ae2459ff99f83867fb5b845ce18c6cfea" refkind="member"><highlight class="preprocessor">#define<sp/>SilKit_ParticipantState_Shutdown<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_ParticipantState)<sp/>110)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="_orchestration_8h_1acfa82a61b8c9668b2ba56743070eebae" refkind="member"><highlight class="preprocessor">#define<sp/>SilKit_ParticipantState_Aborting<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_ParticipantState)<sp/>120)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="_orchestration_8h_1a4d6a8fe52fcfa9fbc3fd8c99ad6d9d4a" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int16_t<sp/><ref refid="_orchestration_8h_1a4d6a8fe52fcfa9fbc3fd8c99ad6d9d4a" kindref="member">SilKit_SystemState</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="_orchestration_8h_1a27df30a56c385bbc5096aaaccae9351b" refkind="member"><highlight class="preprocessor">#define<sp/>SilKit_SystemState_Invalid<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_SystemState)<sp/><sp/><sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="_orchestration_8h_1ac55ae2745415fefd2d94de8bf4268b86" refkind="member"><highlight class="preprocessor">#define<sp/>SilKit_SystemState_ServicesCreated<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_SystemState)<sp/><sp/>10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="_orchestration_8h_1a709fb83a234eefaaf4d4150282f3c24b" refkind="member"><highlight class="preprocessor">#define<sp/>SilKit_SystemState_CommunicationInitializing<sp/><sp/><sp/><sp/>((SilKit_SystemState)<sp/><sp/>20)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="_orchestration_8h_1a13e068e64118ecb67d3c1262536a2ff3" refkind="member"><highlight class="preprocessor">#define<sp/>SilKit_SystemState_CommunicationInitialized<sp/><sp/><sp/><sp/><sp/>((SilKit_SystemState)<sp/><sp/>30)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="_orchestration_8h_1a689e1cb2eafcf72c5934ad23299a876b" refkind="member"><highlight class="preprocessor">#define<sp/>SilKit_SystemState_ReadyToRun<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_SystemState)<sp/><sp/>40)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="_orchestration_8h_1a998ebb26556986a5125ad0d836de197a" refkind="member"><highlight class="preprocessor">#define<sp/>SilKit_SystemState_Running<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_SystemState)<sp/><sp/>50)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="_orchestration_8h_1a046cf7c4dccdab94b00b89a812c28199" refkind="member"><highlight class="preprocessor">#define<sp/>SilKit_SystemState_Paused<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_SystemState)<sp/><sp/>60)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="_orchestration_8h_1a5347a9b48f6c508fc0530adaf6392560" refkind="member"><highlight class="preprocessor">#define<sp/>SilKit_SystemState_Stopping<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_SystemState)<sp/><sp/>70)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="_orchestration_8h_1a808cd07a066ab1d5114d1404fc30903e" refkind="member"><highlight class="preprocessor">#define<sp/>SilKit_SystemState_Stopped<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_SystemState)<sp/><sp/>80)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="_orchestration_8h_1a30a43ca5db2cbaeb67eb08c8739f187f" refkind="member"><highlight class="preprocessor">#define<sp/>SilKit_SystemState_Error<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_SystemState)<sp/><sp/>90)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="_orchestration_8h_1a459be0021e351deccee4508faeae8b27" refkind="member"><highlight class="preprocessor">#define<sp/>SilKit_SystemState_ShuttingDown<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_SystemState)<sp/>100)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="_orchestration_8h_1a9fb46cddfb217b21542cece979bc29cb" refkind="member"><highlight class="preprocessor">#define<sp/>SilKit_SystemState_Shutdown<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_SystemState)<sp/>110)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="_orchestration_8h_1a8c9539d6fa76e9248a3f65012d56da1e" refkind="member"><highlight class="preprocessor">#define<sp/>SilKit_SystemState_Aborting<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_SystemState)<sp/>120)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="_orchestration_8h_1a37f260fc7a0744bb6b45dfa154ed50e6" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int8_t<sp/><ref refid="_orchestration_8h_1a37f260fc7a0744bb6b45dfa154ed50e6" kindref="member">SilKit_OperationMode</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="_orchestration_8h_1a3361714508cf78ad5d2715fffcd942dd" refkind="member"><highlight class="preprocessor">#define<sp/>SilKit_OperationMode_Invalid<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_OperationMode)<sp/><sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="_orchestration_8h_1ab758d637ae73a20a7676feabbe6935c0" refkind="member"><highlight class="preprocessor">#define<sp/>SilKit_OperationMode_Coordinated<sp/><sp/><sp/><sp/>((SilKit_OperationMode)<sp/>10)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="_orchestration_8h_1a6df0010c0e9a87f1b336510366c4899a" refkind="member"><highlight class="preprocessor">#define<sp/>SilKit_OperationMode_Autonomous<sp/><sp/><sp/><sp/><sp/>((SilKit_OperationMode)<sp/>20)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="struct_sil_kit___participant_status" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117" refid="struct_sil_kit___participant_status_1acd29854123b5d333c00845c1bf26b643" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sil_kit___struct_header" kindref="compound">SilKit_StructHeader</ref><sp/><ref refid="struct_sil_kit___participant_status_1acd29854123b5d333c00845c1bf26b643" kindref="member">structHeader</ref>;</highlight></codeline>
<codeline lineno="118" refid="struct_sil_kit___participant_status_1a0987330fe1f9568a5729153465d2f22d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="struct_sil_kit___participant_status_1a0987330fe1f9568a5729153465d2f22d" kindref="member">participantName</ref>;<sp/></highlight></codeline>
<codeline lineno="119" refid="struct_sil_kit___participant_status_1a3d8e68770a362e36ac7360067779c7a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a395dc77953e2b19b6b353ea3257e25ff" kindref="member">SilKit_ParticipantState</ref><sp/><ref refid="struct_sil_kit___participant_status_1a3d8e68770a362e36ac7360067779c7a6" kindref="member">participantState</ref>;<sp/></highlight></codeline>
<codeline lineno="120" refid="struct_sil_kit___participant_status_1a63f58d06107654698349f79fea83960a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="struct_sil_kit___participant_status_1a63f58d06107654698349f79fea83960a" kindref="member">enterReason</ref>;<sp/></highlight></codeline>
<codeline lineno="121" refid="struct_sil_kit___participant_status_1a3a52878d271956ce51d2f4df91a2affb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a5d25eaae0d9c76a203a09936078740a8" kindref="member">SilKit_NanosecondsWallclockTime</ref><sp/><ref refid="struct_sil_kit___participant_status_1a3a52878d271956ce51d2f4df91a2affb" kindref="member">enterTime</ref>;<sp/></highlight></codeline>
<codeline lineno="122" refid="struct_sil_kit___participant_status_1aa112b7c566be6e704cb3c476adb22926" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a5d25eaae0d9c76a203a09936078740a8" kindref="member">SilKit_NanosecondsWallclockTime</ref><sp/><ref refid="struct_sil_kit___participant_status_1aa112b7c566be6e704cb3c476adb22926" kindref="member">refreshTime</ref>;<sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal">}<sp/><ref refid="struct_sil_kit___participant_status" kindref="compound">SilKit_ParticipantStatus</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="struct_sil_kit___workflow_configuration" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129" refid="struct_sil_kit___workflow_configuration_1a3edda1171d3ef6bdf1c180471213bb88" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sil_kit___struct_header" kindref="compound">SilKit_StructHeader</ref><sp/><ref refid="struct_sil_kit___workflow_configuration_1a3edda1171d3ef6bdf1c180471213bb88" kindref="member">structHeader</ref>;</highlight></codeline>
<codeline lineno="131" refid="struct_sil_kit___workflow_configuration_1a754a557a02edf29c02ec724c76cfffdf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sil_kit___string_list" kindref="compound">SilKit_StringList</ref>*<sp/><ref refid="struct_sil_kit___workflow_configuration_1a754a557a02edf29c02ec724c76cfffdf" kindref="member">requiredParticipantNames</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}<sp/><ref refid="struct_sil_kit___workflow_configuration" kindref="compound">SilKit_WorkflowConfiguration</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="struct_sil_kit___lifecycle_configuration" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit___lifecycle_configuration" kindref="compound">SilKit_LifecycleConfiguration</ref></highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138" refid="struct_sil_kit___lifecycle_configuration_1a205744587055e06a0378e41532c8245e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sil_kit___struct_header" kindref="compound">SilKit_StructHeader</ref><sp/><ref refid="struct_sil_kit___lifecycle_configuration_1a205744587055e06a0378e41532c8245e" kindref="member">structHeader</ref>;</highlight></codeline>
<codeline lineno="139" refid="struct_sil_kit___lifecycle_configuration_1a0a249438bfff5b50060ab6e25c30dea3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a37f260fc7a0744bb6b45dfa154ed50e6" kindref="member">SilKit_OperationMode</ref><sp/><ref refid="struct_sil_kit___lifecycle_configuration_1a0a249438bfff5b50060ab6e25c30dea3" kindref="member">operationMode</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}<sp/><ref refid="_orchestration_8h_1a816825c0b36f1a7be3f67bfb5cf1c716" kindref="member">SilKit_LifecycleConfiguration</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref><sp/><ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref>;</highlight></codeline>
<codeline lineno="144" refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref><sp/><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>;</highlight></codeline>
<codeline lineno="145" refid="_orchestration_8h_1af9eb60e0de031fe0b8d4ad5e3aab7976" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="_orchestration_8h_1af9eb60e0de031fe0b8d4ad5e3aab7976" kindref="member">SilKit_TimeSyncService</ref><sp/><ref refid="_orchestration_8h_1af9eb60e0de031fe0b8d4ad5e3aab7976" kindref="member">SilKit_TimeSyncService</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*<sp/>Lifecycle<sp/>Service</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1a51a688e4fb748208a7c1dc6605a79713" kindref="member">SilKit_LifecycleService_Create</ref>(<ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>**<sp/>outLifecycleService,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1ad68cbbe03eb41e3b5683b5422e3cb9ae" kindref="member">SilKit_Participant</ref>*<sp/>participant,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit___lifecycle_configuration" kindref="compound">SilKit_LifecycleConfiguration</ref>*<sp/>startConfiguration);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="_orchestration_8h_1a57553275c90b8b57511781ed81346253" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1a57553275c90b8b57511781ed81346253" kindref="member">SilKit_LifecycleService_Create_t</ref>)(<ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>**<sp/>outLifecycleService,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1ad68cbbe03eb41e3b5683b5422e3cb9ae" kindref="member">SilKit_Participant</ref>*<sp/>participant,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit___lifecycle_configuration" kindref="compound">SilKit_LifecycleConfiguration</ref>*<sp/>startConfiguration);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="_orchestration_8h_1ad7704f5287fc1524f92fb717f82e6e1b" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref>*<sp/><ref refid="_orchestration_8h_1ad7704f5287fc1524f92fb717f82e6e1b" kindref="member">SilKit_LifecycleService_CommunicationReadyHandler_t</ref>)(</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><ref refid="_orchestration_8h_1a59e23ae65723660f4d7eaf5ad1916d77" kindref="member">SilKit_LifecycleService_SetCommunicationReadyHandler</ref>(<ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1ad7704f5287fc1524f92fb717f82e6e1b" kindref="member">SilKit_LifecycleService_CommunicationReadyHandler_t</ref><sp/>handler);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="_orchestration_8h_1a4316bb3d0665eace7b93f36ca45035a6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref>*<sp/><ref refid="_orchestration_8h_1a4316bb3d0665eace7b93f36ca45035a6" kindref="member">SilKit_LifecycleService_SetCommunicationReadyHandler_t</ref>)(</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1ad7704f5287fc1524f92fb717f82e6e1b" kindref="member">SilKit_LifecycleService_CommunicationReadyHandler_t</ref><sp/>handler);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1a579cc25cb41e548809f6e78cc0aec098" kindref="member">SilKit_LifecycleService_SetCommunicationReadyHandlerAsync</ref>(</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_orchestration_8h_1ad7704f5287fc1524f92fb717f82e6e1b" kindref="member">SilKit_LifecycleService_CommunicationReadyHandler_t</ref><sp/>handler);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="_orchestration_8h_1a436f68248bd19cea51c00dfca34f8481" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1a436f68248bd19cea51c00dfca34f8481" kindref="member">SilKit_LifecycleService_SetCommunicationReadyHandlerAsync_t</ref>)(</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_orchestration_8h_1ad7704f5287fc1524f92fb717f82e6e1b" kindref="member">SilKit_LifecycleService_CommunicationReadyHandler_t</ref><sp/>handler);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1a70b07870401b2d2ad6262c60732bbb9e" kindref="member">SilKit_LifecycleService_CompleteCommunicationReadyHandlerAsync</ref>(</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="_orchestration_8h_1a71118e0e59d43a52fc6302290f273b2d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1a71118e0e59d43a52fc6302290f273b2d" kindref="member">SilKit_LifecycleService_CompleteCommunicationReadyHandlerAsync_t</ref>)(</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="_orchestration_8h_1a0b99b65a5d1b09ce7bf29e8d694f6975" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1a0b99b65a5d1b09ce7bf29e8d694f6975" kindref="member">SilKit_LifecycleService_StartingHandler_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1ad56a04da89dd48fc7c19364df04378f4" kindref="member">SilKit_LifecycleService_SetStartingHandler</ref>(</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_orchestration_8h_1a0b99b65a5d1b09ce7bf29e8d694f6975" kindref="member">SilKit_LifecycleService_StartingHandler_t</ref><sp/>handler);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="_orchestration_8h_1af0047faf0e9b299a80424040cff9d820" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1af0047faf0e9b299a80424040cff9d820" kindref="member">SilKit_LifecycleService_SetStartingHandler_t</ref>)(</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_orchestration_8h_1a0b99b65a5d1b09ce7bf29e8d694f6975" kindref="member">SilKit_LifecycleService_StartingHandler_t</ref><sp/>handler);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="264" refid="_orchestration_8h_1a5c8dfc9ffcb4ba86ec0489e83c0e6a81" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1a5c8dfc9ffcb4ba86ec0489e83c0e6a81" kindref="member">SilKit_LifecycleService_StopHandler_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1a4f52e5e0750a810a88e5f827084c9aa3" kindref="member">SilKit_LifecycleService_SetStopHandler</ref>(<ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a5c8dfc9ffcb4ba86ec0489e83c0e6a81" kindref="member">SilKit_LifecycleService_StopHandler_t</ref><sp/>handler);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="_orchestration_8h_1ab5a043ee79c3d19a448bc2a3dc6eafd3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1ab5a043ee79c3d19a448bc2a3dc6eafd3" kindref="member">SilKit_LifecycleService_SetStopHandler_t</ref>)(<ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a5c8dfc9ffcb4ba86ec0489e83c0e6a81" kindref="member">SilKit_LifecycleService_StopHandler_t</ref><sp/>handler);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="_orchestration_8h_1a32be5ea20f8ae06938860cee8902d95e" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1a32be5ea20f8ae06938860cee8902d95e" kindref="member">SilKit_LifecycleService_ShutdownHandler_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1afc8646eef6d25b181468d8a93b3a25fa" kindref="member">SilKit_LifecycleService_SetShutdownHandler</ref>(</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_orchestration_8h_1a32be5ea20f8ae06938860cee8902d95e" kindref="member">SilKit_LifecycleService_ShutdownHandler_t</ref><sp/>handler);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="_orchestration_8h_1aad374ed8219126b5f7c1ec867f0bd76b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1aad374ed8219126b5f7c1ec867f0bd76b" kindref="member">SilKit_LifecycleService_SetShutdownHandler_t</ref>)(</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_orchestration_8h_1a32be5ea20f8ae06938860cee8902d95e" kindref="member">SilKit_LifecycleService_ShutdownHandler_t</ref><sp/>handler);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="_orchestration_8h_1ad91a4ec709cdc4c116c87f74fc500184" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref>*<sp/><ref refid="_orchestration_8h_1ad91a4ec709cdc4c116c87f74fc500184" kindref="member">SilKit_LifecycleService_AbortHandler_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a395dc77953e2b19b6b353ea3257e25ff" kindref="member">SilKit_ParticipantState</ref><sp/>lastParticipantState);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1a3dbe846071dc457ffb06a2bdc28579ff" kindref="member">SilKit_LifecycleService_SetAbortHandler</ref>(</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_orchestration_8h_1ad91a4ec709cdc4c116c87f74fc500184" kindref="member">SilKit_LifecycleService_AbortHandler_t</ref><sp/>handler);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="_orchestration_8h_1ab1601be30aa73beb8e0f58c9f2b4c2b7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1ab1601be30aa73beb8e0f58c9f2b4c2b7" kindref="member">SilKit_LifecycleService_SetAbortHandler_t</ref>)(</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_orchestration_8h_1ad91a4ec709cdc4c116c87f74fc500184" kindref="member">SilKit_LifecycleService_AbortHandler_t</ref><sp/>handler);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1a7e176ee866b50cc71aafa6c86daca4f9" kindref="member">SilKit_LifecycleService_StartLifecycle</ref>(</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="_orchestration_8h_1a693b2d7e3297ed3776ef3e939a8d4b5d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1a693b2d7e3297ed3776ef3e939a8d4b5d" kindref="member">SilKit_LifecycleService_StartLifecycle_t</ref>)(</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1ab744a6b073c50695f02b30b6d5452fad" kindref="member">SilKit_LifecycleService_WaitForLifecycleToComplete</ref>(</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService,<sp/><ref refid="_orchestration_8h_1a395dc77953e2b19b6b353ea3257e25ff" kindref="member">SilKit_ParticipantState</ref>*<sp/>outParticipantState);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359" refid="_orchestration_8h_1a5df5298cb1d555604745ae2cc6f527c8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1a5df5298cb1d555604745ae2cc6f527c8" kindref="member">SilKit_LifecycleService_WaitForLifecycleToComplete_t</ref>)(</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService,<sp/><ref refid="_orchestration_8h_1a395dc77953e2b19b6b353ea3257e25ff" kindref="member">SilKit_ParticipantState</ref>*<sp/>outParticipantState);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1a25f2bf77761e8e061d23466334387a94" kindref="member">SilKit_LifecycleService_ReportError</ref>(<ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService,</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>reason);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373" refid="_orchestration_8h_1a8be6d96d3a090679bcb5f6b5938c7904" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1a8be6d96d3a090679bcb5f6b5938c7904" kindref="member">SilKit_LifecycleService_ReportError_t</ref>)(<ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService,</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>reason);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1ae1523de93ec75403204c4012a877b836" kindref="member">SilKit_LifecycleService_Pause</ref>(<ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>reason);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389" refid="_orchestration_8h_1ac29887912be8fb58372a10d75b258f0d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1ac29887912be8fb58372a10d75b258f0d" kindref="member">SilKit_LifecycleService_Pause_t</ref>)(<ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService,</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>reason);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1a34049ccfbe3ce993af8403fb701c6cc7" kindref="member">SilKit_LifecycleService_Continue</ref>(<ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="_orchestration_8h_1ade64c8a8e8aa5b6377b39bd28512f4a4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1ade64c8a8e8aa5b6377b39bd28512f4a4" kindref="member">SilKit_LifecycleService_Continue_t</ref>)(<ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1a6ef8d9825b677abad94e97b77c7e5a5e" kindref="member">SilKit_LifecycleService_Stop</ref>(<ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>reason);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418" refid="_orchestration_8h_1a27633a61b77aa40cfd9facea1a1384f6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1a27633a61b77aa40cfd9facea1a1384f6" kindref="member">SilKit_LifecycleService_Stop_t</ref>)(<ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>reason);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1a24aab4c93a26132c9ff5990868bc8366" kindref="member">SilKit_LifecycleService_State</ref>(<ref refid="_orchestration_8h_1a395dc77953e2b19b6b353ea3257e25ff" kindref="member">SilKit_ParticipantState</ref>*<sp/>outParticipantState,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428" refid="_orchestration_8h_1a27397046e2e6d2f2c421d66b85fc8d8b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref>*<sp/><ref refid="_orchestration_8h_1a27397046e2e6d2f2c421d66b85fc8d8b" kindref="member">SilKit_LifecycleService_State_t</ref>)(<ref refid="_orchestration_8h_1a395dc77953e2b19b6b353ea3257e25ff" kindref="member">SilKit_ParticipantState</ref>*<sp/>outParticipantState,</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1a4dd0b55745a3c01afe4db429862646cc" kindref="member">SilKit_LifecycleService_Status</ref>(<ref refid="struct_sil_kit___participant_status" kindref="compound">SilKit_ParticipantStatus</ref>*<sp/>outParticipantStatus,</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="_orchestration_8h_1a788609caa4bf9b47f06ec943a4a5fbb3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1a788609caa4bf9b47f06ec943a4a5fbb3" kindref="member">SilKit_LifecycleService_Status_t</ref>)(<ref refid="struct_sil_kit___participant_status" kindref="compound">SilKit_ParticipantStatus</ref>*<sp/>outParticipantStatus,</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="444"><highlight class="comment"><sp/>*<sp/>Time-Sync<sp/>Service</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="446"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1ad62446856e9397c968fdf2fe2d873c6d" kindref="member">SilKit_TimeSyncService_Create</ref>(<ref refid="_orchestration_8h_1af9eb60e0de031fe0b8d4ad5e3aab7976" kindref="member">SilKit_TimeSyncService</ref>**<sp/>outTimeSyncService,</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a7a020fae9471c7c620298d5bb5b8840c" kindref="member">SilKit_LifecycleService</ref>*<sp/>lifecycleService);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458" refid="_orchestration_8h_1a0ae08c3e0cb43a9877d7a8fae9e7f392" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1a0ae08c3e0cb43a9877d7a8fae9e7f392" kindref="member">SilKit_TimeSyncService_Create_t</ref>)(<ref refid="_orchestration_8h_1af9eb60e0de031fe0b8d4ad5e3aab7976" kindref="member">SilKit_TimeSyncService</ref>**<sp/>outTimeSyncService,</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_types_8h_1ad68cbbe03eb41e3b5683b5422e3cb9ae" kindref="member">SilKit_Participant</ref>*<sp/>lifecycleService);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="468" refid="_orchestration_8h_1a2acde74070aa1322226101687d6d4d78" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1a2acde74070aa1322226101687d6d4d78" kindref="member">SilKit_TimeSyncService_SimulationStepHandler_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_orchestration_8h_1af9eb60e0de031fe0b8d4ad5e3aab7976" kindref="member">SilKit_TimeSyncService</ref>*<sp/>timeSyncService,</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a4a5c030b6c22d0228bad174647d4b7fd" kindref="member">SilKit_NanosecondsTime</ref><sp/>now,<sp/><ref refid="_orchestration_8h_1a4a5c030b6c22d0228bad174647d4b7fd" kindref="member">SilKit_NanosecondsTime</ref><sp/>duration);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1a9450acac7c40b0fa7c8728f04a731c2c" kindref="member">SilKit_TimeSyncService_SetSimulationStepHandler</ref>(</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1af9eb60e0de031fe0b8d4ad5e3aab7976" kindref="member">SilKit_TimeSyncService</ref>*<sp/>timeSyncService,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_orchestration_8h_1a2acde74070aa1322226101687d6d4d78" kindref="member">SilKit_TimeSyncService_SimulationStepHandler_t</ref><sp/>handler,<sp/><ref refid="_orchestration_8h_1a4a5c030b6c22d0228bad174647d4b7fd" kindref="member">SilKit_NanosecondsTime</ref><sp/>initialStepSize);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482" refid="_orchestration_8h_1a2783e970e6727596d8c572efc64131da" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1a2783e970e6727596d8c572efc64131da" kindref="member">SilKit_TimeSyncService_SetSimulationStepHandler_t</ref>)(</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1af9eb60e0de031fe0b8d4ad5e3aab7976" kindref="member">SilKit_TimeSyncService</ref>*<sp/>timeSyncService,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_orchestration_8h_1a2acde74070aa1322226101687d6d4d78" kindref="member">SilKit_TimeSyncService_SimulationStepHandler_t</ref><sp/>handler,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a4a5c030b6c22d0228bad174647d4b7fd" kindref="member">SilKit_NanosecondsTime</ref><sp/>initialStepSize);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1aa0b9e9937b7c87d434005f34f4c2f4c5" kindref="member">SilKit_TimeSyncService_SetSimulationStepHandlerAsync</ref>(</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1af9eb60e0de031fe0b8d4ad5e3aab7976" kindref="member">SilKit_TimeSyncService</ref>*<sp/>timeSyncService,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_orchestration_8h_1a2acde74070aa1322226101687d6d4d78" kindref="member">SilKit_TimeSyncService_SimulationStepHandler_t</ref><sp/>handler,</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a4a5c030b6c22d0228bad174647d4b7fd" kindref="member">SilKit_NanosecondsTime</ref><sp/>initialStepSize);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508" refid="_orchestration_8h_1acb2a904b9f486e2044cf4b8942d8ebd2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1acb2a904b9f486e2044cf4b8942d8ebd2" kindref="member">SilKit_TimeSyncService_SetSimulationStepHandlerAsync_t</ref>)(</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1af9eb60e0de031fe0b8d4ad5e3aab7976" kindref="member">SilKit_TimeSyncService</ref>*<sp/>timeSyncService,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_orchestration_8h_1a2acde74070aa1322226101687d6d4d78" kindref="member">SilKit_TimeSyncService_SimulationStepHandler_t</ref><sp/>handler,</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a4a5c030b6c22d0228bad174647d4b7fd" kindref="member">SilKit_NanosecondsTime</ref><sp/>initialStepSize);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1a4f5806df0c31c0536e52a8e14948b2b4" kindref="member">SilKit_TimeSyncService_CompleteSimulationStep</ref>(<ref refid="_orchestration_8h_1af9eb60e0de031fe0b8d4ad5e3aab7976" kindref="member">SilKit_TimeSyncService</ref>*<sp/>timeSyncService);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518" refid="_orchestration_8h_1a5316659a907516ff8cbdeabcfe4f9e45" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1a5316659a907516ff8cbdeabcfe4f9e45" kindref="member">SilKit_TimeSyncService_CompleteSimulationStep_t</ref>)(<ref refid="_orchestration_8h_1af9eb60e0de031fe0b8d4ad5e3aab7976" kindref="member">SilKit_TimeSyncService</ref>*<sp/>timeSyncService);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1aa7df4e430990a7a946a265f0cacd4e89" kindref="member">SilKit_TimeSyncService_Now</ref>(<ref refid="_orchestration_8h_1af9eb60e0de031fe0b8d4ad5e3aab7976" kindref="member">SilKit_TimeSyncService</ref>*<sp/>timeSyncService,</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a4a5c030b6c22d0228bad174647d4b7fd" kindref="member">SilKit_NanosecondsTime</ref>*<sp/>outNanosecondsTime);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528" refid="_orchestration_8h_1a2280fcf1b496053e1e719385b8954ddc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1a2280fcf1b496053e1e719385b8954ddc" kindref="member">SilKit_TimeSyncService_Now_t</ref>)(<ref refid="_orchestration_8h_1af9eb60e0de031fe0b8d4ad5e3aab7976" kindref="member">SilKit_TimeSyncService</ref>*<sp/>timeSyncService,</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a4a5c030b6c22d0228bad174647d4b7fd" kindref="member">SilKit_NanosecondsTime</ref>*<sp/>outNanosecondsTime);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="533"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="534"><highlight class="comment"><sp/>*<sp/>System<sp/>Monitor</highlight></codeline>
<codeline lineno="535"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="536"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1ab97a97556028d82321ec805efbb388ff" kindref="member">SilKit_SystemMonitor_Create</ref>(<ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref>**<sp/>outSystemMonitor,</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_types_8h_1ad68cbbe03eb41e3b5683b5422e3cb9ae" kindref="member">SilKit_Participant</ref>*<sp/>participant);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548" refid="_orchestration_8h_1ac71c888d1e64d0f8018bae656be0798e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref>*<sp/><ref refid="_orchestration_8h_1ac71c888d1e64d0f8018bae656be0798e" kindref="member">SilKit_SystemMonitor_Create_t</ref>)(<ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref>**<sp/>outSystemMonitor,</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_types_8h_1ad68cbbe03eb41e3b5683b5422e3cb9ae" kindref="member">SilKit_Participant</ref>*<sp/>participant);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1ad744d214d02c60478e5d62c86291c688" kindref="member">SilKit_SystemMonitor_GetParticipantStatus</ref>(<ref refid="struct_sil_kit___participant_status" kindref="compound">SilKit_ParticipantStatus</ref>*<sp/>outParticipantState,</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref>*<sp/>systemMonitor,</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>participantName);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557" refid="_orchestration_8h_1a2569dc53611bc8217b0cdace59e451d1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1a2569dc53611bc8217b0cdace59e451d1" kindref="member">SilKit_SystemMonitor_GetParticipantStatus_t</ref>)(<ref refid="struct_sil_kit___participant_status" kindref="compound">SilKit_ParticipantStatus</ref>*<sp/>outParticipantState,</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref>*<sp/>systemMonitor,</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>participantName);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1af32b26cd58da91ce3289bb2020a14f7c" kindref="member">SilKit_SystemMonitor_GetSystemState</ref>(<ref refid="_orchestration_8h_1a4d6a8fe52fcfa9fbc3fd8c99ad6d9d4a" kindref="member">SilKit_SystemState</ref>*<sp/>outSystemState,</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref>*<sp/>systemMonitor);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565" refid="_orchestration_8h_1a1b994aa0061d25d8b3ffca5696aae755" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1a1b994aa0061d25d8b3ffca5696aae755" kindref="member">SilKit_SystemMonitor_GetSystemState_t</ref>)(<ref refid="_orchestration_8h_1a4d6a8fe52fcfa9fbc3fd8c99ad6d9d4a" kindref="member">SilKit_SystemState</ref>*<sp/>outSystemState,</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref>*<sp/>systemMonitor);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568" refid="_orchestration_8h_1a6ee1384cf374d8eabec64b6c031c9a07" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1a6ee1384cf374d8eabec64b6c031c9a07" kindref="member">SilKit_SystemStateHandler_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref>*<sp/>systemMonitor,</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a4d6a8fe52fcfa9fbc3fd8c99ad6d9d4a" kindref="member">SilKit_SystemState</ref><sp/>state);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1a02e798cf7a9ad0a4254037bdb4782ec3" kindref="member">SilKit_SystemMonitor_AddSystemStateHandler</ref>(<ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref>*<sp/>systemMonitor,</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a6ee1384cf374d8eabec64b6c031c9a07" kindref="member">SilKit_SystemStateHandler_t</ref><sp/>handler,</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref>*<sp/>outHandlerId);</highlight></codeline>
<codeline lineno="585" refid="_orchestration_8h_1a7cef0120f3607cdf5008112d462a9a42" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1a7cef0120f3607cdf5008112d462a9a42" kindref="member">SilKit_SystemMonitor_AddSystemStateHandler_t</ref>)(<ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref>*<sp/>systemMonitor,</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a6ee1384cf374d8eabec64b6c031c9a07" kindref="member">SilKit_SystemStateHandler_t</ref><sp/>handler,</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref>*<sp/>outHandlerId);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1a528bffc36891a864c039943633867f53" kindref="member">SilKit_SystemMonitor_RemoveSystemStateHandler</ref>(<ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref>*<sp/>systemMonitor,</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref><sp/>handlerId);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598" refid="_orchestration_8h_1abf15f377bbf32298715d6dbad5652b1b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1abf15f377bbf32298715d6dbad5652b1b" kindref="member">SilKit_SystemMonitor_RemoveSystemStateHandler_t</ref>)(<ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref>*<sp/>systemMonitor,</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref><sp/>handlerId);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601" refid="_orchestration_8h_1a5f8bab474d4efcc6726d31abfc8e0fcf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1a5f8bab474d4efcc6726d31abfc8e0fcf" kindref="member">SilKit_ParticipantStatusHandler_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref>*<sp/>systemMonitor,</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>participantName,<sp/><ref refid="struct_sil_kit___participant_status" kindref="compound">SilKit_ParticipantStatus</ref>*<sp/>status);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1a2344753af998c32f04d6fe58ae0e2108" kindref="member">SilKit_SystemMonitor_AddParticipantStatusHandler</ref>(<ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref>*<sp/>systemMonitor,</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1a5f8bab474d4efcc6726d31abfc8e0fcf" kindref="member">SilKit_ParticipantStatusHandler_t</ref><sp/>handler,</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref>*<sp/>outHandlerId);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619" refid="_orchestration_8h_1a1d4ef39473dc91613a08e66a9e42557a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1a1d4ef39473dc91613a08e66a9e42557a" kindref="member">SilKit_SystemMonitor_AddParticipantStatusHandler_t</ref>)(</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref>*<sp/>systemMonitor,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_orchestration_8h_1a5f8bab474d4efcc6726d31abfc8e0fcf" kindref="member">SilKit_ParticipantStatusHandler_t</ref><sp/>handler,</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref>*<sp/>outHandlerId);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1a3518f8af4c7f5b82816e64b6a88a2663" kindref="member">SilKit_SystemMonitor_RemoveParticipantStatusHandler</ref>(<ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref>*<sp/>systemMonitor,</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref><sp/>handlerId);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631" refid="_orchestration_8h_1ae5ef014827c8b6bf781ab329d8bbc575" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1ae5ef014827c8b6bf781ab329d8bbc575" kindref="member">SilKit_SystemMonitor_RemoveParticipantStatusHandler_t</ref>)(<ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref>*<sp/>systemMonitor,</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref><sp/>handlerId);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="635" refid="struct_sil_kit___participant_connection_information" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit___participant_connection_information" kindref="compound">SilKit_ParticipantConnectionInformation</ref></highlight></codeline>
<codeline lineno="636"><highlight class="normal">{</highlight></codeline>
<codeline lineno="637" refid="struct_sil_kit___participant_connection_information_1aa8eed2b7358d978e7ed21388e86f70e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sil_kit___struct_header" kindref="compound">SilKit_StructHeader</ref><sp/><ref refid="struct_sil_kit___participant_connection_information_1aa8eed2b7358d978e7ed21388e86f70e6" kindref="member">structHeader</ref>;</highlight></codeline>
<codeline lineno="639" refid="struct_sil_kit___participant_connection_information_1a8b1bda9ecb38dd07e6dd40b1f5aabe65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="struct_sil_kit___participant_connection_information_1a8b1bda9ecb38dd07e6dd40b1f5aabe65" kindref="member">participantName</ref>;</highlight></codeline>
<codeline lineno="640"><highlight class="normal">}<sp/><ref refid="_orchestration_8h_1ad27244595cbe33f32d0d06e84a45d3d4" kindref="member">SilKit_ParticipantConnectionInformation</ref>;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="645" refid="_orchestration_8h_1ab6f1805c56164a51b082c720aa35a8ae" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1ab6f1805c56164a51b082c720aa35a8ae" kindref="member">SilKit_SystemMonitor_ParticipantConnectedHandler_t</ref>)(</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref>*<sp/>systemMonitor,</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit___participant_connection_information" kindref="compound">SilKit_ParticipantConnectionInformation</ref>*<sp/>participantConnectionInformation);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1a1895794e8da57137a685d9b7e2355836" kindref="member">SilKit_SystemMonitor_SetParticipantConnectedHandler</ref>(</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref>*<sp/>systemMonitor,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_orchestration_8h_1ab6f1805c56164a51b082c720aa35a8ae" kindref="member">SilKit_SystemMonitor_ParticipantConnectedHandler_t</ref><sp/>handler);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658" refid="_orchestration_8h_1a2a9cc99e65a4e726d49770090acd7caa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1a2a9cc99e65a4e726d49770090acd7caa" kindref="member">SilKit_SystemMonitor_SetParticipantConnectedHandler_t</ref>)(</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref>*<sp/>systemMonitor,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_orchestration_8h_1ab6f1805c56164a51b082c720aa35a8ae" kindref="member">SilKit_SystemMonitor_ParticipantConnectedHandler_t</ref><sp/>handler);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="664" refid="_orchestration_8h_1ae5687b6135df8ff627369bd193f34208" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1ae5687b6135df8ff627369bd193f34208" kindref="member">SilKit_SystemMonitor_ParticipantDisconnectedHandler_t</ref>)(</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref>*<sp/>systemMonitor,</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit___participant_connection_information" kindref="compound">SilKit_ParticipantConnectionInformation</ref>*<sp/>participantConnectionInformation);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1ae37b68bea6a1f8ceac2f9852fb89e4d4" kindref="member">SilKit_SystemMonitor_SetParticipantDisconnectedHandler</ref>(</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref>*<sp/>systemMonitor,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_orchestration_8h_1ae5687b6135df8ff627369bd193f34208" kindref="member">SilKit_SystemMonitor_ParticipantDisconnectedHandler_t</ref><sp/>handler);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677" refid="_orchestration_8h_1a55582b4c0e4c917a6a39eb92692406b2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1a55582b4c0e4c917a6a39eb92692406b2" kindref="member">SilKit_SystemMonitor_SetParticipantDisconnectedHandler_t</ref>)(</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref>*<sp/>systemMonitor,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_orchestration_8h_1ae5687b6135df8ff627369bd193f34208" kindref="member">SilKit_SystemMonitor_ParticipantDisconnectedHandler_t</ref><sp/>handler);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1a872a3313e64a37d367768ea1398c9a90" kindref="member">SilKit_SystemMonitor_IsParticipantConnected</ref>(<ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref>*<sp/>systemMonitor,</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>participantName,</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1acd67002df70237d213b7773b26891fcc" kindref="member">SilKit_Bool</ref>*<sp/>out);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690" refid="_orchestration_8h_1ab865e0b4b45611e4d3510962865d9b7d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1ab865e0b4b45611e4d3510962865d9b7d" kindref="member">SilKit_SystemMonitor_IsParticipantConnected_t</ref>)(</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_orchestration_8h_1ac0d3e4ead3124920292ab399140147c6" kindref="member">SilKit_SystemMonitor</ref>*<sp/>systemMonitor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>participantName,<sp/><ref refid="_types_8h_1acd67002df70237d213b7773b26891fcc" kindref="member">SilKit_Bool</ref>*<sp/>out);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1ad729532db085e3b0fd48d9ff1c708110" kindref="member">SilKit_Experimental_SystemController_Create</ref>(</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_types_8h_1ad0c54a6ff4d48c97463fc2cf6d005d22" kindref="member">SilKit_Experimental_SystemController</ref>**<sp/>outSystemController,<sp/><ref refid="_types_8h_1ad68cbbe03eb41e3b5683b5422e3cb9ae" kindref="member">SilKit_Participant</ref>*<sp/>participant);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704" refid="_orchestration_8h_1a709355cb2753305f5f91fff8e955a090" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<sp/><ref refid="_orchestration_8h_1a709355cb2753305f5f91fff8e955a090" kindref="member">SilKit_Experimental_SystemController_Create_t</ref>)(</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_types_8h_1ad0c54a6ff4d48c97463fc2cf6d005d22" kindref="member">SilKit_Experimental_SystemController</ref>**<sp/>outSystemController,<sp/><ref refid="_types_8h_1ad68cbbe03eb41e3b5683b5422e3cb9ae" kindref="member">SilKit_Participant</ref>*<sp/>participant);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1a0b77ccece36b4afdb85e5ff91388d9fd" kindref="member">SilKit_Experimental_SystemController_AbortSimulation</ref>(</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_types_8h_1ad0c54a6ff4d48c97463fc2cf6d005d22" kindref="member">SilKit_Experimental_SystemController</ref>*<sp/>systemController);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722" refid="_orchestration_8h_1a688b9454e08cc10dc3353aca21c0dfd4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref>*<sp/><ref refid="_orchestration_8h_1a688b9454e08cc10dc3353aca21c0dfd4" kindref="member">SilKit_Experimental_SystemController_AbortSimulation_t</ref>)(</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_types_8h_1ad0c54a6ff4d48c97463fc2cf6d005d22" kindref="member">SilKit_Experimental_SystemController</ref>*<sp/>systemController);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_orchestration_8h_1a2f7a7b1de7315818caa20fb553f86636" kindref="member">SilKit_Experimental_SystemController_SetWorkflowConfiguration</ref>(</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_types_8h_1ad0c54a6ff4d48c97463fc2cf6d005d22" kindref="member">SilKit_Experimental_SystemController</ref>*<sp/>systemController,</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit___workflow_configuration" kindref="compound">SilKit_WorkflowConfiguration</ref>*<sp/>workflowConfiguration);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744" refid="_orchestration_8h_1a3ddd56d4f92a9a8277cff9bcc8171497" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_orchestration_8h_1a3ddd56d4f92a9a8277cff9bcc8171497" kindref="member">SilKit_Experimental_SystemController_SetWorkflowConfiguration_t</ref>)(</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_types_8h_1ad0c54a6ff4d48c97463fc2cf6d005d22" kindref="member">SilKit_Experimental_SystemController</ref>*<sp/>systemController,</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit___workflow_configuration" kindref="compound">SilKit_WorkflowConfiguration</ref>*<sp/>workflowConfiguration);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a04b5ec616ea8e67360a3930e4cf5d2fb" kindref="member">SILKIT_END_DECLS</ref></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(pop)</highlight></codeline>
    </programlisting>
    <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Orchestration.h"/>
  </compounddef>
</doxygen>
