<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_flexray_8h" kind="file" language="C++">
    <compoundname>Flexray.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes refid="_sil_kit_macros_8h" local="yes">silkit/capi/SilKitMacros.h</includes>
    <includes refid="_types_8h" local="yes">silkit/capi/Types.h</includes>
    <includes refid="_interface_identifiers_8h" local="yes">silkit/capi/InterfaceIdentifiers.h</includes>
    <includedby refid="_sil_kit_8h" local="yes">/home/ubuntu/sil-kit/SilKit/include/silkit/capi/SilKit.h</includedby>
    <includedby refid="_flexray_datatypes_8hpp" local="yes">/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/FlexrayDatatypes.hpp</includedby>
    <incdepgraph>
      <node id="46">
        <label>cstdint</label>
      </node>
      <node id="44">
        <label>stdint.h</label>
      </node>
      <node id="43">
        <label>/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h</label>
        <link refid="_flexray_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>stddef.h</label>
      </node>
      <node id="51">
        <label>memory.h</label>
      </node>
      <node id="50">
        <label>limits.h</label>
      </node>
      <node id="45">
        <label>silkit/capi/SilKitMacros.h</label>
        <link refid="_sil_kit_macros_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>silkit/capi/InterfaceIdentifiers.h</label>
        <link refid="_interface_identifiers_8h"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>silkit/capi/Types.h</label>
        <link refid="_types_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="53">
        <label>/home/ubuntu/sil-kit/SilKit/include/silkit/capi/SilKit.h</label>
        <link refid="_sil_kit_8h"/>
      </node>
      <node id="55">
        <label>/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/all.hpp</label>
        <link refid="services_2flexray_2all_8hpp"/>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h</label>
        <link refid="_flexray_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp</label>
        <link refid="services_2flexray_2string__utils_8hpp"/>
      </node>
      <node id="54">
        <label>/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/FlexrayDatatypes.hpp</label>
        <link refid="_flexray_datatypes_8hpp"/>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>/home/ubuntu/sil-kit/SilKit/include/silkit/services/all.hpp</label>
        <link refid="services_2all_8hpp"/>
      </node>
      <node id="57">
        <label>/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/IFlexrayController.hpp</label>
        <link refid="_i_flexray_controller_8hpp"/>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_sil_kit___flexray_cluster_parameters" prot="public">SilKit_FlexrayClusterParameters</innerclass>
    <innerclass refid="struct_sil_kit___flexray_node_parameters" prot="public">SilKit_FlexrayNodeParameters</innerclass>
    <innerclass refid="struct_sil_kit___flexray_tx_buffer_config" prot="public">SilKit_FlexrayTxBufferConfig</innerclass>
    <innerclass refid="struct_sil_kit___flexray_controller_config" prot="public">SilKit_FlexrayControllerConfig</innerclass>
    <innerclass refid="struct_sil_kit___flexray_tx_buffer_update" prot="public">SilKit_FlexrayTxBufferUpdate</innerclass>
    <innerclass refid="struct_sil_kit___flexray_header" prot="public">SilKit_FlexrayHeader</innerclass>
    <innerclass refid="struct_sil_kit___flexray_frame" prot="public">SilKit_FlexrayFrame</innerclass>
    <innerclass refid="struct_sil_kit___flexray_frame_event" prot="public">SilKit_FlexrayFrameEvent</innerclass>
    <innerclass refid="struct_sil_kit___flexray_frame_transmit_event" prot="public">SilKit_FlexrayFrameTransmitEvent</innerclass>
    <innerclass refid="struct_sil_kit___flexray_symbol_event" prot="public">SilKit_FlexraySymbolEvent</innerclass>
    <innerclass refid="struct_sil_kit___flexray_cycle_start_event" prot="public">SilKit_FlexrayCycleStartEvent</innerclass>
    <innerclass refid="struct_sil_kit___flexray_poc_status_event" prot="public">SilKit_FlexrayPocStatusEvent</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_flexray_8h_1a18cb3b37c8e2db26fb679ed0588f231b" prot="public" static="no">
        <name>SilKit_FlexrayChannel_None</name>
        <initializer>((<ref refid="_flexray_8h_1a7f5c9f146f6a2edd0ba9b06e65f544b7" kindref="member">SilKit_FlexrayChannel</ref>)0x00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="42" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1aaef97939041af9e4032e7faec20fb88f" prot="public" static="no">
        <name>SilKit_FlexrayChannel_A</name>
        <initializer>((<ref refid="_flexray_8h_1a7f5c9f146f6a2edd0ba9b06e65f544b7" kindref="member">SilKit_FlexrayChannel</ref>)0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="43" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1aef0b89d7292dec1768ffe9917f28a1a5" prot="public" static="no">
        <name>SilKit_FlexrayChannel_B</name>
        <initializer>((<ref refid="_flexray_8h_1a7f5c9f146f6a2edd0ba9b06e65f544b7" kindref="member">SilKit_FlexrayChannel</ref>)0x02)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="44" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1ad64b8ebd2e7ad27287f16168e713d734" prot="public" static="no">
        <name>SilKit_FlexrayChannel_AB</name>
        <initializer>((<ref refid="_flexray_8h_1a7f5c9f146f6a2edd0ba9b06e65f544b7" kindref="member">SilKit_FlexrayChannel</ref>)0x03)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="45" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1aff844203582a8fa1e47e89621a9f6263" prot="public" static="no">
        <name>SilKit_FlexrayClockPeriod_T12_5NS</name>
        <initializer>((<ref refid="_flexray_8h_1a7f7a0bfb08236938fe1fd46089770976" kindref="member">SilKit_FlexrayClockPeriod</ref>)1)</initializer>
        <briefdescription>
<para>25ns / 40MHz </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="50" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1a107a161355cc3afb716e427a9cc0cca6" prot="public" static="no">
        <name>SilKit_FlexrayClockPeriod_T25NS</name>
        <initializer>((<ref refid="_flexray_8h_1a7f7a0bfb08236938fe1fd46089770976" kindref="member">SilKit_FlexrayClockPeriod</ref>)2)</initializer>
        <briefdescription>
<para>50ns / 20MHz </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="52" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1a9bddb26575ccc25a8480c9198959ea89" prot="public" static="no">
        <name>SilKit_FlexrayClockPeriod_T50NS</name>
        <initializer>((<ref refid="_flexray_8h_1a7f7a0bfb08236938fe1fd46089770976" kindref="member">SilKit_FlexrayClockPeriod</ref>)3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="54" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1a1745731bee47cd0542595843e05f4aaf" prot="public" static="no">
        <name>SilKit_FlexrayTransmissionMode_SingleShot</name>
        <initializer>((<ref refid="_flexray_8h_1a5edf815b586688837a63f9a8131a9136" kindref="member">SilKit_FlexrayTransmissionMode</ref>)0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="268" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1a429a62e577ee95536b99f2241132c481" prot="public" static="no">
        <name>SilKit_FlexrayTransmissionMode_Continuous</name>
        <initializer>((<ref refid="_flexray_8h_1a5edf815b586688837a63f9a8131a9136" kindref="member">SilKit_FlexrayTransmissionMode</ref>)1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="269" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1a337a994647a5c8c33e8f7567cf4d02c6" prot="public" static="no">
        <name>SilKit_FlexrayChiCommand_RUN</name>
        <initializer>((<ref refid="_flexray_8h_1a306020a22fe79c789db0e3647ae532b3" kindref="member">SilKit_FlexrayChiCommand</ref>)0x00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="335" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1ad432481cce02627649dfb63fc99d71db" prot="public" static="no">
        <name>SilKit_FlexrayChiCommand_DEFERRED_HALT</name>
        <initializer>((<ref refid="_flexray_8h_1a306020a22fe79c789db0e3647ae532b3" kindref="member">SilKit_FlexrayChiCommand</ref>)0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="336" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1a8b5a79b405ddeb1bb6e138679d142c28" prot="public" static="no">
        <name>SilKit_FlexrayChiCommand_FREEZE</name>
        <initializer>((<ref refid="_flexray_8h_1a306020a22fe79c789db0e3647ae532b3" kindref="member">SilKit_FlexrayChiCommand</ref>)0x02)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="337" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1a415e253ef5816ab177b0051965bf3e79" prot="public" static="no">
        <name>SilKit_FlexrayChiCommand_ALLOW_COLDSTART</name>
        <initializer>((<ref refid="_flexray_8h_1a306020a22fe79c789db0e3647ae532b3" kindref="member">SilKit_FlexrayChiCommand</ref>)0x03)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="338" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1a1991f8d1943a415e66a837fca59ce98d" prot="public" static="no">
        <name>SilKit_FlexrayChiCommand_ALL_SLOTS</name>
        <initializer>((<ref refid="_flexray_8h_1a306020a22fe79c789db0e3647ae532b3" kindref="member">SilKit_FlexrayChiCommand</ref>)0x04)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="339" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1a0d667f963495dfd69ad5eafb723a849a" prot="public" static="no">
        <name>SilKit_FlexrayChiCommand_WAKEUP</name>
        <initializer>((<ref refid="_flexray_8h_1a306020a22fe79c789db0e3647ae532b3" kindref="member">SilKit_FlexrayChiCommand</ref>)0x05)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="340" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1acf8e2cb5d7a7233aff71c11f0df07425" prot="public" static="no">
        <name>SilKit_FlexrayHeader_SuFIndicator</name>
        <initializer>((<ref refid="_flexray_8h_1af07541bbc6465d3fbe10f85fe014ae74" kindref="member">SilKit_FlexrayHeader_Flag</ref>)0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="343" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1a2dd4cd67983c0baebcf7710ea18aeb64" prot="public" static="no">
        <name>SilKit_FlexrayHeader_SyFIndicator</name>
        <initializer>((<ref refid="_flexray_8h_1af07541bbc6465d3fbe10f85fe014ae74" kindref="member">SilKit_FlexrayHeader_Flag</ref>)0x02)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="344" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1a35e8487c85606e1fcb3bf2138d1b07f0" prot="public" static="no">
        <name>SilKit_FlexrayHeader_NFIndicator</name>
        <initializer>((<ref refid="_flexray_8h_1af07541bbc6465d3fbe10f85fe014ae74" kindref="member">SilKit_FlexrayHeader_Flag</ref>)0x04)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="345" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1a4ca4a36861a20657a5d481efce10b51c" prot="public" static="no">
        <name>SilKit_FlexrayHeader_PPIndicator</name>
        <initializer>((<ref refid="_flexray_8h_1af07541bbc6465d3fbe10f85fe014ae74" kindref="member">SilKit_FlexrayHeader_Flag</ref>)0x08)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="346" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="346" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1ae07923747105840109c87e52d0a0ae21" prot="public" static="no">
        <name>SilKit_FlexraySymbolPattern_CasMts</name>
        <initializer>((<ref refid="_flexray_8h_1aa09783dbc288ffdd566ba0b094c0d40f" kindref="member">SilKit_FlexraySymbolPattern</ref>)0x00)</initializer>
        <briefdescription>
<para>Collision avoidance symbol (CAS) OR media access test symbol (MTS). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="403" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1a0bc55b1ea3b89713624d88ccd103cfd7" prot="public" static="no">
        <name>SilKit_FlexraySymbolPattern_Wus</name>
        <initializer>((<ref refid="_flexray_8h_1aa09783dbc288ffdd566ba0b094c0d40f" kindref="member">SilKit_FlexraySymbolPattern</ref>)0x01)</initializer>
        <briefdescription>
<para>Wakeup symbol (WUS). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="405" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="405" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1a69b1cdc616b33582c6d8576884b32c47" prot="public" static="no">
        <name>SilKit_FlexraySymbolPattern_Wudop</name>
        <initializer>((<ref refid="_flexray_8h_1aa09783dbc288ffdd566ba0b094c0d40f" kindref="member">SilKit_FlexraySymbolPattern</ref>)0x02)</initializer>
        <briefdescription>
<para>Wakeup During Operation Pattern (WUDOP). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="407" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="407" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1a55d0b8b7eeaa1d66ad9d155aec87d3b6" prot="public" static="no">
        <name>SilKit_FlexrayPocState_DefaultConfig</name>
        <initializer>((<ref refid="_flexray_8h_1abb26a80ffcd11513c43a41b52ea9fa5f" kindref="member">SilKit_FlexrayPocState</ref>)0x00)</initializer>
        <briefdescription>
<para>CC expects configuration. Initial state after reset. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="440" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="440" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1ac8c06e2bd046f546b98ba712caff7d7a" prot="public" static="no">
        <name>SilKit_FlexrayPocState_Config</name>
        <initializer>((<ref refid="_flexray_8h_1abb26a80ffcd11513c43a41b52ea9fa5f" kindref="member">SilKit_FlexrayPocState</ref>)0x01)</initializer>
        <briefdescription>
<para>CC is in configuration mode for setting communication parameters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="442" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="442" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1abdf2b0bae1f102bb0283c07ab77298a4" prot="public" static="no">
        <name>SilKit_FlexrayPocState_Ready</name>
        <initializer>((<ref refid="_flexray_8h_1abb26a80ffcd11513c43a41b52ea9fa5f" kindref="member">SilKit_FlexrayPocState</ref>)0x02)</initializer>
        <briefdescription>
<para>intermediate state for initialization process (after Config). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="444" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="444" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1ae9a768b563d582473eea23157beb0d03" prot="public" static="no">
        <name>SilKit_FlexrayPocState_Startup</name>
        <initializer>((<ref refid="_flexray_8h_1abb26a80ffcd11513c43a41b52ea9fa5f" kindref="member">SilKit_FlexrayPocState</ref>)0x03)</initializer>
        <briefdescription>
<para>FlexRay startup phase. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="446" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1a0cd7263569b17c7dec2a11381a0779b7" prot="public" static="no">
        <name>SilKit_FlexrayPocState_Wakeup</name>
        <initializer>((<ref refid="_flexray_8h_1abb26a80ffcd11513c43a41b52ea9fa5f" kindref="member">SilKit_FlexrayPocState</ref>)0x04)</initializer>
        <briefdescription>
<para>FlexRay wakeup phase. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="448" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="448" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1af98453e1e048baa553a8c3ae0f1f53ae" prot="public" static="no">
        <name>SilKit_FlexrayPocState_NormalActive</name>
        <initializer>((<ref refid="_flexray_8h_1abb26a80ffcd11513c43a41b52ea9fa5f" kindref="member">SilKit_FlexrayPocState</ref>)0x05)</initializer>
        <briefdescription>
<para>Normal operating mode. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="450" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="450" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1ae1521c1067890a10017a742e571baa07" prot="public" static="no">
        <name>SilKit_FlexrayPocState_NormalPassive</name>
        <initializer>((<ref refid="_flexray_8h_1abb26a80ffcd11513c43a41b52ea9fa5f" kindref="member">SilKit_FlexrayPocState</ref>)0x06)</initializer>
        <briefdescription>
<para>Operating mode with transient or tolerable errors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="452" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="452" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1aa10c4ce31b0d8a4ca5ebc2d0d9057ce2" prot="public" static="no">
        <name>SilKit_FlexrayPocState_Halt</name>
        <initializer>((<ref refid="_flexray_8h_1abb26a80ffcd11513c43a41b52ea9fa5f" kindref="member">SilKit_FlexrayPocState</ref>)0x07)</initializer>
        <briefdescription>
<para>CC is halted (caused by the application (FlexrayChiCommand::DEFERRED_HALT) or by a fatal error). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="454" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="454" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1a4d96606fecf8cb337767e7ed0b7cd579" prot="public" static="no">
        <name>SilKit_FlexraySlotModeType_KeySlot</name>
        <initializer>((<ref refid="_flexray_8h_1a515ebbcc19b1336dce05d4b53284a4bf" kindref="member">SilKit_FlexraySlotModeType</ref>)0x00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="461" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="461" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1a7951522d0fc7890de5016a8f47756a6a" prot="public" static="no">
        <name>SilKit_FlexraySlotModeType_AllPending</name>
        <initializer>((<ref refid="_flexray_8h_1a515ebbcc19b1336dce05d4b53284a4bf" kindref="member">SilKit_FlexraySlotModeType</ref>)0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="462" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="462" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1a45c0f86bdb889d6baebd2ecbbd810d4e" prot="public" static="no">
        <name>SilKit_FlexraySlotModeType_All</name>
        <initializer>((<ref refid="_flexray_8h_1a515ebbcc19b1336dce05d4b53284a4bf" kindref="member">SilKit_FlexraySlotModeType</ref>)0x02)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="463" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="463" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1ad2738f76cde7e133454c4534fddda84d" prot="public" static="no">
        <name>SilKit_FlexrayErrorModeType_Active</name>
        <initializer>((<ref refid="_flexray_8h_1a6cdc8fcf6f2c624256dd3572001dcfec" kindref="member">SilKit_FlexrayErrorModeType</ref>)0x00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="470" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="470" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1a39daf060d2668a6430e50e797869c647" prot="public" static="no">
        <name>SilKit_FlexrayErrorModeType_Passive</name>
        <initializer>((<ref refid="_flexray_8h_1a6cdc8fcf6f2c624256dd3572001dcfec" kindref="member">SilKit_FlexrayErrorModeType</ref>)0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="471" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="471" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1a9a1cdfb70acba829cff18c42094223f7" prot="public" static="no">
        <name>SilKit_FlexrayErrorModeType_CommHalt</name>
        <initializer>((<ref refid="_flexray_8h_1a6cdc8fcf6f2c624256dd3572001dcfec" kindref="member">SilKit_FlexrayErrorModeType</ref>)0x02)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="472" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="472" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1aab43d0c2710f900ca4c26f54a153c1b0" prot="public" static="no">
        <name>SilKit_FlexrayStartupStateType_Undefined</name>
        <initializer>((<ref refid="_flexray_8h_1ac86794dad89cd36f7646ac29d4d4fd29" kindref="member">SilKit_FlexrayStartupStateType</ref>)0x00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="479" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="479" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1a8f57d4ae498897720a574a6862b125d2" prot="public" static="no">
        <name>SilKit_FlexrayStartupStateType_ColdStartListen</name>
        <initializer>((<ref refid="_flexray_8h_1ac86794dad89cd36f7646ac29d4d4fd29" kindref="member">SilKit_FlexrayStartupStateType</ref>)0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="480" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="480" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1aa7925473ed405d07b19455b6c668739b" prot="public" static="no">
        <name>SilKit_FlexrayStartupStateType_IntegrationColdstartCheck</name>
        <initializer>((<ref refid="_flexray_8h_1ac86794dad89cd36f7646ac29d4d4fd29" kindref="member">SilKit_FlexrayStartupStateType</ref>)0x02)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="481" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="481" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1af347bb2f743f1575742ffe554f3c5025" prot="public" static="no">
        <name>SilKit_FlexrayStartupStateType_ColdStartJoin</name>
        <initializer>((<ref refid="_flexray_8h_1ac86794dad89cd36f7646ac29d4d4fd29" kindref="member">SilKit_FlexrayStartupStateType</ref>)0x03)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="482" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="482" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1a7a03fa41f7e8edf1c95847e895eb97da" prot="public" static="no">
        <name>SilKit_FlexrayStartupStateType_ColdStartCollisionResolution</name>
        <initializer>((<ref refid="_flexray_8h_1ac86794dad89cd36f7646ac29d4d4fd29" kindref="member">SilKit_FlexrayStartupStateType</ref>)0x04)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="483" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="483" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1aabc13741c69ded44180e96d2adf2a764" prot="public" static="no">
        <name>SilKit_FlexrayStartupStateType_ColdStartConsistencyCheck</name>
        <initializer>((<ref refid="_flexray_8h_1ac86794dad89cd36f7646ac29d4d4fd29" kindref="member">SilKit_FlexrayStartupStateType</ref>)0x05)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="484" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="484" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1a436a99049d3953132ee4103f8250d0b5" prot="public" static="no">
        <name>SilKit_FlexrayStartupStateType_IntegrationListen</name>
        <initializer>((<ref refid="_flexray_8h_1ac86794dad89cd36f7646ac29d4d4fd29" kindref="member">SilKit_FlexrayStartupStateType</ref>)0x06)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="485" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="485" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1a5e98b3c9c6d901faaac8b478ed186364" prot="public" static="no">
        <name>SilKit_FlexrayStartupStateType_InitializeSchedule</name>
        <initializer>((<ref refid="_flexray_8h_1ac86794dad89cd36f7646ac29d4d4fd29" kindref="member">SilKit_FlexrayStartupStateType</ref>)0x07)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="486" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="486" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1a931245cc7af46f2884cd5b62cc42cf93" prot="public" static="no">
        <name>SilKit_FlexrayStartupStateType_IntegrationConsistencyCheck</name>
        <initializer>((<ref refid="_flexray_8h_1ac86794dad89cd36f7646ac29d4d4fd29" kindref="member">SilKit_FlexrayStartupStateType</ref>)0x08)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="487" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="487" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1a718a191cadb72d00aa4c35710801d489" prot="public" static="no">
        <name>SilKit_FlexrayStartupStateType_ColdStartGap</name>
        <initializer>((<ref refid="_flexray_8h_1ac86794dad89cd36f7646ac29d4d4fd29" kindref="member">SilKit_FlexrayStartupStateType</ref>)0x09)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="488" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="488" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1adb7ca1dc0294b5de34bb8084c3143f29" prot="public" static="no">
        <name>SilKit_FlexrayStartupStateType_ExternalStartup</name>
        <initializer>((<ref refid="_flexray_8h_1ac86794dad89cd36f7646ac29d4d4fd29" kindref="member">SilKit_FlexrayStartupStateType</ref>)0x0A)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="489" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="489" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1abe7feee8ca6a523f7e3cf4507d57c4a4" prot="public" static="no">
        <name>SilKit_FlexrayWakeupStatusType_Undefined</name>
        <initializer>((<ref refid="_flexray_8h_1ae839a3b09d6f0ca2e72b22cd34da2c9e" kindref="member">SilKit_FlexrayWakeupStatusType</ref>)0x00)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="496" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="496" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1aaeca2aab79dfb29fce126c5fd60080ed" prot="public" static="no">
        <name>SilKit_FlexrayWakeupStatusType_ReceivedHeader</name>
        <initializer>((<ref refid="_flexray_8h_1ae839a3b09d6f0ca2e72b22cd34da2c9e" kindref="member">SilKit_FlexrayWakeupStatusType</ref>)0x01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="497" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="497" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1a4edbdd63c79b154e9ff3fe3c2ef9c1a0" prot="public" static="no">
        <name>SilKit_FlexrayWakeupStatusType_ReceivedWup</name>
        <initializer>((<ref refid="_flexray_8h_1ae839a3b09d6f0ca2e72b22cd34da2c9e" kindref="member">SilKit_FlexrayWakeupStatusType</ref>)0x02)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="498" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="498" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1a41c509dff825e9d354b3afd330f90bb7" prot="public" static="no">
        <name>SilKit_FlexrayWakeupStatusType_CollisionHeader</name>
        <initializer>((<ref refid="_flexray_8h_1ae839a3b09d6f0ca2e72b22cd34da2c9e" kindref="member">SilKit_FlexrayWakeupStatusType</ref>)0x03)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="499" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="499" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1aac940ad6b11e60122fd54930ea87e7ec" prot="public" static="no">
        <name>SilKit_FlexrayWakeupStatusType_CollisionWup</name>
        <initializer>((<ref refid="_flexray_8h_1ae839a3b09d6f0ca2e72b22cd34da2c9e" kindref="member">SilKit_FlexrayWakeupStatusType</ref>)0x04)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="500" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="500" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1a39d710ac8e731c7172afbc4c730c68a2" prot="public" static="no">
        <name>SilKit_FlexrayWakeupStatusType_CollisionUnknown</name>
        <initializer>((<ref refid="_flexray_8h_1ae839a3b09d6f0ca2e72b22cd34da2c9e" kindref="member">SilKit_FlexrayWakeupStatusType</ref>)0x05)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="501" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="501" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_flexray_8h_1aad61877352d8fec232df628fdcfdca4c" prot="public" static="no">
        <name>SilKit_FlexrayWakeupStatusType_Transmitted</name>
        <initializer>((<ref refid="_flexray_8h_1ae839a3b09d6f0ca2e72b22cd34da2c9e" kindref="member">SilKit_FlexrayWakeupStatusType</ref>)0x06)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="502" column="9" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="502" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_flexray_8h_1aa2f0693e875b3c8a204d648693616612" prot="public" static="no">
        <type>int32_t</type>
        <definition>typedef int32_t SilKit_FlexrayMicroTick</definition>
        <argsstring></argsstring>
        <name>SilKit_FlexrayMicroTick</name>
        <briefdescription>
<para>FlexRay micro tick. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="36" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1aa57139970fae812879b83c845f928dfb" prot="public" static="no">
        <type>int32_t</type>
        <definition>typedef int32_t SilKit_FlexrayMacroTick</definition>
        <argsstring></argsstring>
        <name>SilKit_FlexrayMacroTick</name>
        <briefdescription>
<para>FlexRay macro tick. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="38" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1a7f5c9f146f6a2edd0ba9b06e65f544b7" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t SilKit_FlexrayChannel</definition>
        <argsstring></argsstring>
        <name>SilKit_FlexrayChannel</name>
        <briefdescription>
<para>Type and constants for the FlexRay channel parameter A, B, or AB. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="41" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1a7f7a0bfb08236938fe1fd46089770976" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t SilKit_FlexrayClockPeriod</definition>
        <argsstring></argsstring>
        <name>SilKit_FlexrayClockPeriod</name>
        <briefdescription>
<para>Period of the clock (used for micro tick period and sample clock period). </para>        </briefdescription>
        <detaileddescription>
<para>12.5ns / 80MHz </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="48" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1afaacf999e45b74eae4d9dca7b3eaf385" prot="public" static="no">
        <type>struct <ref refid="struct_sil_kit___flexray_cluster_parameters" kindref="compound">SilKit_FlexrayClusterParameters</ref></type>
        <definition>typedef struct SilKit_FlexrayClusterParameters SilKit_FlexrayClusterParameters</definition>
        <argsstring></argsstring>
        <name>SilKit_FlexrayClusterParameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="48" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1a6b92c31717dd1131be096f45d2244bf4" prot="public" static="no">
        <type>struct <ref refid="struct_sil_kit___flexray_node_parameters" kindref="compound">SilKit_FlexrayNodeParameters</ref></type>
        <definition>typedef struct SilKit_FlexrayNodeParameters SilKit_FlexrayNodeParameters</definition>
        <argsstring></argsstring>
        <name>SilKit_FlexrayNodeParameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="48" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1a5edf815b586688837a63f9a8131a9136" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t SilKit_FlexrayTransmissionMode</definition>
        <argsstring></argsstring>
        <name>SilKit_FlexrayTransmissionMode</name>
        <briefdescription>
<para>Transmission mode for FlexRay Tx-Buffer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="267" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1afa9d3cbee15fc0a9457533705cffc143" prot="public" static="no">
        <type>struct <ref refid="struct_sil_kit___flexray_tx_buffer_config" kindref="compound">SilKit_FlexrayTxBufferConfig</ref></type>
        <definition>typedef struct SilKit_FlexrayTxBufferConfig SilKit_FlexrayTxBufferConfig</definition>
        <argsstring></argsstring>
        <name>SilKit_FlexrayTxBufferConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="267" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1afe826cd5ab35714073d6892c0b86418d" prot="public" static="no">
        <type>struct <ref refid="struct_sil_kit___flexray_controller_config" kindref="compound">SilKit_FlexrayControllerConfig</ref></type>
        <definition>typedef struct SilKit_FlexrayControllerConfig SilKit_FlexrayControllerConfig</definition>
        <argsstring></argsstring>
        <name>SilKit_FlexrayControllerConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="267" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1afd4b71886d044e71ce68fe2d1e07a35d" prot="public" static="no">
        <type>struct <ref refid="struct_sil_kit___flexray_tx_buffer_update" kindref="compound">SilKit_FlexrayTxBufferUpdate</ref></type>
        <definition>typedef struct SilKit_FlexrayTxBufferUpdate SilKit_FlexrayTxBufferUpdate</definition>
        <argsstring></argsstring>
        <name>SilKit_FlexrayTxBufferUpdate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="267" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="331" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1a306020a22fe79c789db0e3647ae532b3" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t SilKit_FlexrayChiCommand</definition>
        <argsstring></argsstring>
        <name>SilKit_FlexrayChiCommand</name>
        <briefdescription>
<para>FlexRay controller commands. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="334" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1af07541bbc6465d3fbe10f85fe014ae74" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t SilKit_FlexrayHeader_Flag</definition>
        <argsstring></argsstring>
        <name>SilKit_FlexrayHeader_Flag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="342" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1a5ef2f975f2fa41c19c266cc37ea374ec" prot="public" static="no">
        <type>struct <ref refid="struct_sil_kit___flexray_header" kindref="compound">SilKit_FlexrayHeader</ref></type>
        <definition>typedef struct SilKit_FlexrayHeader SilKit_FlexrayHeader</definition>
        <argsstring></argsstring>
        <name>SilKit_FlexrayHeader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="342" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1a8ff09469fc50356f867705103a2b37da" prot="public" static="no">
        <type>struct <ref refid="struct_sil_kit___flexray_frame" kindref="compound">SilKit_FlexrayFrame</ref></type>
        <definition>typedef struct SilKit_FlexrayFrame SilKit_FlexrayFrame</definition>
        <argsstring></argsstring>
        <name>SilKit_FlexrayFrame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="342" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1a2f7d2981bc1958f86fe73c0f40001342" prot="public" static="no">
        <type>struct <ref refid="struct_sil_kit___flexray_frame_event" kindref="compound">SilKit_FlexrayFrameEvent</ref></type>
        <definition>typedef struct SilKit_FlexrayFrameEvent SilKit_FlexrayFrameEvent</definition>
        <argsstring></argsstring>
        <name>SilKit_FlexrayFrameEvent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="342" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1aa5f3455e372058ff79fbfd0d449c40d1" prot="public" static="no">
        <type>struct <ref refid="struct_sil_kit___flexray_frame_transmit_event" kindref="compound">SilKit_FlexrayFrameTransmitEvent</ref></type>
        <definition>typedef struct SilKit_FlexrayFrameTransmitEvent SilKit_FlexrayFrameTransmitEvent</definition>
        <argsstring></argsstring>
        <name>SilKit_FlexrayFrameTransmitEvent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="342" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1aa09783dbc288ffdd566ba0b094c0d40f" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t SilKit_FlexraySymbolPattern</definition>
        <argsstring></argsstring>
        <name>SilKit_FlexraySymbolPattern</name>
        <briefdescription>
<para>FlexRay symbols patterns. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="401" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1ad7efc21c3e05abc53a3efa4e770ee991" prot="public" static="no">
        <type>struct <ref refid="struct_sil_kit___flexray_symbol_event" kindref="compound">SilKit_FlexraySymbolEvent</ref></type>
        <definition>typedef struct SilKit_FlexraySymbolEvent SilKit_FlexraySymbolEvent</definition>
        <argsstring></argsstring>
        <name>SilKit_FlexraySymbolEvent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="401" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="419" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1a63b20a22232afe724c1ded4980226ab2" prot="public" static="no">
        <type>struct <ref refid="struct_sil_kit___flexray_symbol_event" kindref="compound">SilKit_FlexraySymbolEvent</ref></type>
        <definition>typedef struct SilKit_FlexraySymbolEvent SilKit_FlexraySymbolTransmitEvent</definition>
        <argsstring></argsstring>
        <name>SilKit_FlexraySymbolTransmitEvent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="401" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="420" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1a41a386db0ac179ab3de42b7524e8d2e6" prot="public" static="no">
        <type>struct <ref refid="struct_sil_kit___flexray_symbol_event" kindref="compound">SilKit_FlexraySymbolEvent</ref></type>
        <definition>typedef struct SilKit_FlexraySymbolEvent SilKit_FlexrayWakeupEvent</definition>
        <argsstring></argsstring>
        <name>SilKit_FlexrayWakeupEvent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="401" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="421" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1aeb4bfef7e1c7ffe808d402ba84e3c3ff" prot="public" static="no">
        <type>struct <ref refid="struct_sil_kit___flexray_cycle_start_event" kindref="compound">SilKit_FlexrayCycleStartEvent</ref></type>
        <definition>typedef struct SilKit_FlexrayCycleStartEvent SilKit_FlexrayCycleStartEvent</definition>
        <argsstring></argsstring>
        <name>SilKit_FlexrayCycleStartEvent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="401" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="432" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1abb26a80ffcd11513c43a41b52ea9fa5f" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t SilKit_FlexrayPocState</definition>
        <argsstring></argsstring>
        <name>SilKit_FlexrayPocState</name>
        <briefdescription>
<para>Protocol Operation Control (POC) state of the FlexRay communication controller <emphasis>AUTOSAR Name:</emphasis> Fr_POCStateType. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="438" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="438" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1a515ebbcc19b1336dce05d4b53284a4bf" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t SilKit_FlexraySlotModeType</definition>
        <argsstring></argsstring>
        <name>SilKit_FlexraySlotModeType</name>
        <briefdescription>
<para>Indicates what slot mode the POC is in. <emphasis>AUTOSAR Name:</emphasis> Fr_SlotModeType. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="460" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="460" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1a6cdc8fcf6f2c624256dd3572001dcfec" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t SilKit_FlexrayErrorModeType</definition>
        <argsstring></argsstring>
        <name>SilKit_FlexrayErrorModeType</name>
        <briefdescription>
<para>Indicates what error mode the POC is in. <emphasis>AUTOSAR Name:</emphasis> Fr_ErrorModeType. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="469" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="469" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1ac86794dad89cd36f7646ac29d4d4fd29" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t SilKit_FlexrayStartupStateType</definition>
        <argsstring></argsstring>
        <name>SilKit_FlexrayStartupStateType</name>
        <briefdescription>
<para>Indicates the current substate in the startup procedure. <emphasis>AUTOSAR Name:</emphasis> Fr_StartupStateType. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="478" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="478" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1ae839a3b09d6f0ca2e72b22cd34da2c9e" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t SilKit_FlexrayWakeupStatusType</definition>
        <argsstring></argsstring>
        <name>SilKit_FlexrayWakeupStatusType</name>
        <briefdescription>
<para>Indicates the outcome of the wake-up mechanism. <emphasis>AUTOSAR Name:</emphasis> Fr_WakeupStateType. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="495" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="495" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1a11c2077bbaa462e2cbe329911f93e572" prot="public" static="no">
        <type>struct <ref refid="struct_sil_kit___flexray_poc_status_event" kindref="compound">SilKit_FlexrayPocStatusEvent</ref></type>
        <definition>typedef struct SilKit_FlexrayPocStatusEvent SilKit_FlexrayPocStatusEvent</definition>
        <argsstring></argsstring>
        <name>SilKit_FlexrayPocStatusEvent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="495" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="527" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" prot="public" static="no">
        <type>void</type>
        <definition>typedef void SilKit_FlexrayController</definition>
        <argsstring></argsstring>
        <name>SilKit_FlexrayController</name>
        <briefdescription>
<para>abstract FlexRay Controller object to be used by vECUs </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="531" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="531" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1a065a6feeaf48b1e3fcb23e2e2c5f3d88" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void( * SilKit_FlexrayFrameHandler_t) (void *context, SilKit_FlexrayController *controller, const SilKit_FlexrayFrameEvent *message)</definition>
        <argsstring>)(void *context, SilKit_FlexrayController *controller, const SilKit_FlexrayFrameEvent *message)</argsstring>
        <name>SilKit_FlexrayFrameHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback type to indicate that a FlexRay message has been received. Cf. <ref refid="_flexray_8h_1a39e9a52ba8569a5be78c3098e0f590ce" kindref="member">SilKit_FlexrayController_AddFrameHandler</ref>; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="536" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="536" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1ad043cc2f412ce76404c5b38af8d9b687" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void( * SilKit_FlexrayFrameTransmitHandler_t) (void *context, SilKit_FlexrayController *controller, const SilKit_FlexrayFrameTransmitEvent *acknowledge)</definition>
        <argsstring>)(void *context, SilKit_FlexrayController *controller, const SilKit_FlexrayFrameTransmitEvent *acknowledge)</argsstring>
        <name>SilKit_FlexrayFrameTransmitHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback type to indicate that a FlexrayFrameTransmitEvent has been received. Cf. <ref refid="_flexray_8h_1a684b5f161a423d6c296e7efa68b52739" kindref="member">SilKit_FlexrayController_AddFrameTransmitHandler</ref>; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="541" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="541" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1ab387bcb89722e17c27a2ce8d9207c1df" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void( * SilKit_FlexrayWakeupHandler_t) (void *context, SilKit_FlexrayController *controller, const SilKit_FlexrayWakeupEvent *symbol)</definition>
        <argsstring>)(void *context, SilKit_FlexrayController *controller, const SilKit_FlexrayWakeupEvent *symbol)</argsstring>
        <name>SilKit_FlexrayWakeupHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback type to indicate that a wakeup has been received. Should be answered by a call to Run(). Cf. <ref refid="_flexray_8h_1aac57918f29e98dccc3be2dacd9404a1a" kindref="member">SilKit_FlexrayController_AddWakeupHandler</ref>; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="546" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="546" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1aa2e4fb6cf3cd1e2d6db69d950a70b781" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void( * SilKit_FlexrayPocStatusHandler_t) (void *context, SilKit_FlexrayController *controller, const SilKit_FlexrayPocStatusEvent *status)</definition>
        <argsstring>)(void *context, SilKit_FlexrayController *controller, const SilKit_FlexrayPocStatusEvent *status)</argsstring>
        <name>SilKit_FlexrayPocStatusHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback type to indicate that the POC status (including state variables, modes and error codes) has changed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="551" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="551" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1a0fe135e178fcfc33e0f88ae27cac1228" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void( * SilKit_FlexraySymbolHandler_t) (void *context, SilKit_FlexrayController *controller, const SilKit_FlexraySymbolEvent *symbol)</definition>
        <argsstring>)(void *context, SilKit_FlexrayController *controller, const SilKit_FlexraySymbolEvent *symbol)</argsstring>
        <name>SilKit_FlexraySymbolHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback type to indicate that the controller has received a symbol. Cf. <ref refid="_flexray_8h_1adeea5dc3408705337098e86456373687" kindref="member">SilKit_FlexrayController_AddSymbolHandler</ref>; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="556" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="556" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1adcadcfe65a3dd32aab92de696ef9c8a1" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void( * SilKit_FlexraySymbolTransmitHandler_t) (void *context, SilKit_FlexrayController *controller, const SilKit_FlexraySymbolTransmitEvent *acknowledge)</definition>
        <argsstring>)(void *context, SilKit_FlexrayController *controller, const SilKit_FlexraySymbolTransmitEvent *acknowledge)</argsstring>
        <name>SilKit_FlexraySymbolTransmitHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback type to indicate that the controller has sent a symbol. Cf. <ref refid="_flexray_8h_1af9420e7a973056f12554928d3d4fe8ce" kindref="member">SilKit_FlexrayController_AddSymbolTransmitHandler</ref>; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="561" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="561" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1a1b92575bf688256bf4824063e6cc7e49" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void( * SilKit_FlexrayCycleStartHandler_t) (void *context, SilKit_FlexrayController *controller, const SilKit_FlexrayCycleStartEvent *cycleStart)</definition>
        <argsstring>)(void *context, SilKit_FlexrayController *controller, const SilKit_FlexrayCycleStartEvent *cycleStart)</argsstring>
        <name>SilKit_FlexrayCycleStartHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback type to indicate that a new FlexRay cycle did start. Cf. <ref refid="_flexray_8h_1a66c2459e67315a0b8d36fdd9ab9cf030" kindref="member">SilKit_FlexrayController_AddCycleStartHandler</ref>; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="566" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="566" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1a552b5a47323b2ab1439beb8b5316dc45" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_FlexrayController_Create_t) (SilKit_FlexrayController **outController, SilKit_Participant *participant, const char *name, const char *network)</definition>
        <argsstring>)(SilKit_FlexrayController **outController, SilKit_Participant *participant, const char *name, const char *network)</argsstring>
        <name>SilKit_FlexrayController_Create_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="575" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="575" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1a5a82eadbdefddea685f7284942b23050" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_FlexrayController_Configure_t) (SilKit_FlexrayController *controller, const SilKit_FlexrayControllerConfig *config)</definition>
        <argsstring>)(SilKit_FlexrayController *controller, const SilKit_FlexrayControllerConfig *config)</argsstring>
        <name>SilKit_FlexrayController_Configure_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="582" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="582" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1ad82e6252dd86d3ebf8a7f7cdfc89def6" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_FlexrayController_ReconfigureTxBuffer_t) (SilKit_FlexrayController *controller, uint16_t txBufferIdx, const SilKit_FlexrayTxBufferConfig *config)</definition>
        <argsstring>)(SilKit_FlexrayController *controller, uint16_t txBufferIdx, const SilKit_FlexrayTxBufferConfig *config)</argsstring>
        <name>SilKit_FlexrayController_ReconfigureTxBuffer_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="587" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="587" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1a1606a6d9640429f6a072cc277d45f874" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_FlexrayController_UpdateTxBuffer_t) (SilKit_FlexrayController *controller, const SilKit_FlexrayTxBufferUpdate *update)</definition>
        <argsstring>)(SilKit_FlexrayController *controller, const SilKit_FlexrayTxBufferUpdate *update)</argsstring>
        <name>SilKit_FlexrayController_UpdateTxBuffer_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="600" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="600" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1a18c8485de5c3deb98f2f79acefa3d841" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_FlexrayController_ExecuteCmd_t) (SilKit_FlexrayController *controller, SilKit_FlexrayChiCommand cmd)</definition>
        <argsstring>)(SilKit_FlexrayController *controller, SilKit_FlexrayChiCommand cmd)</argsstring>
        <name>SilKit_FlexrayController_ExecuteCmd_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="605" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="605" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1a9976158be75dfd99538aa1a65bba5c75" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_FlexrayController_AddFrameHandler_t) (SilKit_FlexrayController *controller, void *context, SilKit_FlexrayFrameHandler_t handler, SilKit_HandlerId *outHandlerId)</definition>
        <argsstring>)(SilKit_FlexrayController *controller, void *context, SilKit_FlexrayFrameHandler_t handler, SilKit_HandlerId *outHandlerId)</argsstring>
        <name>SilKit_FlexrayController_AddFrameHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="618" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="618" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1a046c42fef068ec6dcafea89517e3c77f" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_FlexrayController_RemoveFrameHandler_t) (SilKit_FlexrayController *controller, SilKit_HandlerId handlerId)</definition>
        <argsstring>)(SilKit_FlexrayController *controller, SilKit_HandlerId handlerId)</argsstring>
        <name>SilKit_FlexrayController_RemoveFrameHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="630" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="630" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1a00865570228cad99c9b3644b40ed85e8" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_FlexrayController_AddFrameTransmitHandler_t) (SilKit_FlexrayController *controller, void *context, SilKit_FlexrayFrameTransmitHandler_t handler, SilKit_HandlerId *outHandlerId)</definition>
        <argsstring>)(SilKit_FlexrayController *controller, void *context, SilKit_FlexrayFrameTransmitHandler_t handler, SilKit_HandlerId *outHandlerId)</argsstring>
        <name>SilKit_FlexrayController_AddFrameTransmitHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="645" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="645" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1a1946b8da8ab076a396c06c9d2c38ed02" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_FlexrayController_RemoveFrameTransmitHandler_t) (SilKit_FlexrayController *controller, SilKit_HandlerId handlerId)</definition>
        <argsstring>)(SilKit_FlexrayController *controller, SilKit_HandlerId handlerId)</argsstring>
        <name>SilKit_FlexrayController_RemoveFrameTransmitHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="658" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="658" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1a8582a7609bef2bacdf9c6cf4dcf20b9a" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_FlexrayController_AddWakeupHandler_t) (SilKit_FlexrayController *controller, void *context, SilKit_FlexrayWakeupHandler_t handler, SilKit_HandlerId *outHandlerId)</definition>
        <argsstring>)(SilKit_FlexrayController *controller, void *context, SilKit_FlexrayWakeupHandler_t handler, SilKit_HandlerId *outHandlerId)</argsstring>
        <name>SilKit_FlexrayController_AddWakeupHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="672" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="672" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1a670d3556718067261cf6d743d2524b0f" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_FlexrayController_RemoveWakeupHandler_t) (SilKit_FlexrayController *controller, SilKit_HandlerId handlerId)</definition>
        <argsstring>)(SilKit_FlexrayController *controller, SilKit_HandlerId handlerId)</argsstring>
        <name>SilKit_FlexrayController_RemoveWakeupHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="684" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="684" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1acf8d0d2f1f9f4dc9deceed0a58991e8f" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_FlexrayController_AddPocStatusHandler_t) (SilKit_FlexrayController *controller, void *context, SilKit_FlexrayPocStatusHandler_t handler, SilKit_HandlerId *outHandlerId)</definition>
        <argsstring>)(SilKit_FlexrayController *controller, void *context, SilKit_FlexrayPocStatusHandler_t handler, SilKit_HandlerId *outHandlerId)</argsstring>
        <name>SilKit_FlexrayController_AddPocStatusHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="699" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="699" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1aa15e41831e30c017bab00530a1c0d99c" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_FlexrayController_RemovePocStatusHandler_t) (SilKit_FlexrayController *controller, SilKit_HandlerId handlerId)</definition>
        <argsstring>)(SilKit_FlexrayController *controller, SilKit_HandlerId handlerId)</argsstring>
        <name>SilKit_FlexrayController_RemovePocStatusHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="711" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="711" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1ab2811d173364dd731a03b0c055ac5702" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_FlexrayController_AddSymbolHandler_t) (SilKit_FlexrayController *controller, void *context, SilKit_FlexraySymbolHandler_t handler, SilKit_HandlerId *outHandlerId)</definition>
        <argsstring>)(SilKit_FlexrayController *controller, void *context, SilKit_FlexraySymbolHandler_t handler, SilKit_HandlerId *outHandlerId)</argsstring>
        <name>SilKit_FlexrayController_AddSymbolHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="728" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="728" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1a0aba40c1f44421e10dec2718f759131f" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_FlexrayController_RemoveSymbolHandler_t) (SilKit_FlexrayController *controller, SilKit_HandlerId handlerId)</definition>
        <argsstring>)(SilKit_FlexrayController *controller, SilKit_HandlerId handlerId)</argsstring>
        <name>SilKit_FlexrayController_RemoveSymbolHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="740" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="740" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1a806390b1c3cbadadb042f2b656ce0682" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_FlexrayController_AddSymbolTransmitHandler_t) (SilKit_FlexrayController *controller, void *context, SilKit_FlexraySymbolTransmitHandler_t handler, SilKit_HandlerId *outHandlerId)</definition>
        <argsstring>)(SilKit_FlexrayController *controller, void *context, SilKit_FlexraySymbolTransmitHandler_t handler, SilKit_HandlerId *outHandlerId)</argsstring>
        <name>SilKit_FlexrayController_AddSymbolTransmitHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="758" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="758" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1a3a0beb2bb2d9a834032c5d715fa19c51" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_FlexrayController_RemoveSymbolTransmitHandler_t) (SilKit_FlexrayController *controller, SilKit_HandlerId handlerId)</definition>
        <argsstring>)(SilKit_FlexrayController *controller, SilKit_HandlerId handlerId)</argsstring>
        <name>SilKit_FlexrayController_RemoveSymbolTransmitHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="771" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="771" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1a1b611906e3a28329fbdf39c443da93c4" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_FlexrayController_AddCycleStartHandler_t) (SilKit_FlexrayController *controller, void *context, SilKit_FlexrayCycleStartHandler_t handler, SilKit_HandlerId *outHandlerId)</definition>
        <argsstring>)(SilKit_FlexrayController *controller, void *context, SilKit_FlexrayCycleStartHandler_t handler, SilKit_HandlerId *outHandlerId)</argsstring>
        <name>SilKit_FlexrayController_AddCycleStartHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="786" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="786" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_flexray_8h_1af02e9e5b719f45195793e7958378e64d" prot="public" static="no">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref>(*</type>
        <definition>typedef SilKit_ReturnCode( * SilKit_FlexrayController_RemoveCycleStartHandler_t) (SilKit_FlexrayController *controller, SilKit_HandlerId handlerId)</definition>
        <argsstring>)(SilKit_FlexrayController *controller, SilKit_HandlerId handlerId)</argsstring>
        <name>SilKit_FlexrayController_RemoveCycleStartHandler_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="799" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" bodystart="799" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_flexray_8h_1ae0d1d466847d5006bd7ee48baa12f53e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_FlexrayController_Create</definition>
        <argsstring>(SilKit_FlexrayController **outController, SilKit_Participant *participant, const char *name, const char *network)</argsstring>
        <name>SilKit_FlexrayController_Create</name>
        <param>
          <type><ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref> **</type>
          <declname>outController</declname>
        </param>
        <param>
          <type><ref refid="_types_8h_1ad68cbbe03eb41e3b5683b5422e3cb9ae" kindref="member">SilKit_Participant</ref> *</type>
          <declname>participant</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>network</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="571" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_flexray_8h_1aad6d1355018790cdc12251534c8f184b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_FlexrayController_Configure</definition>
        <argsstring>(SilKit_FlexrayController *controller, const SilKit_FlexrayControllerConfig *config)</argsstring>
        <name>SilKit_FlexrayController_Configure</name>
        <param>
          <type><ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref> *</type>
          <declname>controller</declname>
        </param>
        <param>
          <type>const <ref refid="struct_sil_kit___flexray_controller_config" kindref="compound">SilKit_FlexrayControllerConfig</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Apply the given controller configuration to the controller. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="580" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_flexray_8h_1ac1d05e319366a0e902ffb76436b42b25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_FlexrayController_ReconfigureTxBuffer</definition>
        <argsstring>(SilKit_FlexrayController *controller, uint16_t txBufferIdx, const SilKit_FlexrayTxBufferConfig *config)</argsstring>
        <name>SilKit_FlexrayController_ReconfigureTxBuffer</name>
        <param>
          <type><ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref> *</type>
          <declname>controller</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>txBufferIdx</declname>
        </param>
        <param>
          <type>const <ref refid="struct_sil_kit___flexray_tx_buffer_config" kindref="compound">SilKit_FlexrayTxBufferConfig</ref> *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Reconfigure a TX Buffer that was previously setup with <ref refid="_flexray_8h_1aad6d1355018790cdc12251534c8f184b" kindref="member">SilKit_FlexrayController_Configure()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="585" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_flexray_8h_1a60d5e7d564e77d27f143fd8e0d8a647b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_FlexrayController_UpdateTxBuffer</definition>
        <argsstring>(SilKit_FlexrayController *controller, const SilKit_FlexrayTxBufferUpdate *update)</argsstring>
        <name>SilKit_FlexrayController_UpdateTxBuffer</name>
        <param>
          <type><ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref> *</type>
          <declname>controller</declname>
        </param>
        <param>
          <type>const <ref refid="struct_sil_kit___flexray_tx_buffer_update" kindref="compound">SilKit_FlexrayTxBufferUpdate</ref> *</type>
          <declname>update</declname>
        </param>
        <briefdescription>
<para>Update the content of a previously configured TX buffer. </para>        </briefdescription>
        <detaileddescription>
<para>A FlexRay message will be sent at the time matching the configured Slot ID. If the buffer was configured with FlexrayTransmissionMode::SingleShot, the content is sent exactly once. If it is configured as FlexrayTransmissionMode::Continuous, the content is sent repeatedly according to the offset and repetition configuration.</para><para><simplesect kind="see"><para>SilKit_FlexrayController_Configure(const FlexrayControllerConfig&amp;) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="598" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_flexray_8h_1a8f26f5d773e471ac5213f399775cac86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_FlexrayController_ExecuteCmd</definition>
        <argsstring>(SilKit_FlexrayController *controller, SilKit_FlexrayChiCommand cmd)</argsstring>
        <name>SilKit_FlexrayController_ExecuteCmd</name>
        <param>
          <type><ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref> *</type>
          <declname>controller</declname>
        </param>
        <param>
          <type><ref refid="_flexray_8h_1a306020a22fe79c789db0e3647ae532b3" kindref="member">SilKit_FlexrayChiCommand</ref></type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
<para>Send the given FlexrayChiCommand. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="603" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_flexray_8h_1a39e9a52ba8569a5be78c3098e0f590ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_FlexrayController_AddFrameHandler</definition>
        <argsstring>(SilKit_FlexrayController *controller, void *context, SilKit_FlexrayFrameHandler_t handler, SilKit_HandlerId *outHandlerId)</argsstring>
        <name>SilKit_FlexrayController_AddFrameHandler</name>
        <param>
          <type><ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref> *</type>
          <declname>controller</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="_flexray_8h_1a065a6feeaf48b1e3fcb23e2e2c5f3d88" kindref="member">SilKit_FlexrayFrameHandler_t</ref></type>
          <declname>handler</declname>
        </param>
        <param>
          <type><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref> *</type>
          <declname>outHandlerId</declname>
        </param>
        <briefdescription>
<para>Receive a FlexRay message from the given controller. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controller</parametername>
</parameternamelist>
<parameterdescription>
<para>The FlexRay controller for which the callback should be registered. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The user provided context pointer, that is reobtained in the callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler to be called. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outHandlerId</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler identifier that can be used to remove the callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="614" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_flexray_8h_1a66275e4992a481d50ca7e01481263905" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_FlexrayController_RemoveFrameHandler</definition>
        <argsstring>(SilKit_FlexrayController *controller, SilKit_HandlerId handlerId)</argsstring>
        <name>SilKit_FlexrayController_RemoveFrameHandler</name>
        <param>
          <type><ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref> *</type>
          <declname>controller</declname>
        </param>
        <param>
          <type><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref></type>
          <declname>handlerId</declname>
        </param>
        <briefdescription>
<para>Remove a <ref refid="_flexray_8h_1a065a6feeaf48b1e3fcb23e2e2c5f3d88" kindref="member">SilKit_FlexrayFrameHandler_t</ref> by SilKit_HandlerId on this controller. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controller</parametername>
</parameternamelist>
<parameterdescription>
<para>The FlexRay controller for which the callback should be removed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handlerId</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier of the callback to be removed. Obtained upon adding to respective handler. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="627" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_flexray_8h_1a684b5f161a423d6c296e7efa68b52739" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_FlexrayController_AddFrameTransmitHandler</definition>
        <argsstring>(SilKit_FlexrayController *controller, void *context, SilKit_FlexrayFrameTransmitHandler_t handler, SilKit_HandlerId *outHandlerId)</argsstring>
        <name>SilKit_FlexrayController_AddFrameTransmitHandler</name>
        <param>
          <type><ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref> *</type>
          <declname>controller</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="_flexray_8h_1ad043cc2f412ce76404c5b38af8d9b687" kindref="member">SilKit_FlexrayFrameTransmitHandler_t</ref></type>
          <declname>handler</declname>
        </param>
        <param>
          <type><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref> *</type>
          <declname>outHandlerId</declname>
        </param>
        <briefdescription>
<para>Notification that a FlexRay message has been successfully sent. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controller</parametername>
</parameternamelist>
<parameterdescription>
<para>The FlexRay controller for which the callback should be registered. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The user provided context pointer, that is reobtained in the callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler to be called. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outHandlerId</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler identifier that can be used to remove the callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="640" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_flexray_8h_1a190518e974da3b3f6974b5a81b61b3c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_FlexrayController_RemoveFrameTransmitHandler</definition>
        <argsstring>(SilKit_FlexrayController *controller, SilKit_HandlerId handlerId)</argsstring>
        <name>SilKit_FlexrayController_RemoveFrameTransmitHandler</name>
        <param>
          <type><ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref> *</type>
          <declname>controller</declname>
        </param>
        <param>
          <type><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref></type>
          <declname>handlerId</declname>
        </param>
        <briefdescription>
<para>Remove a <ref refid="_flexray_8h_1ad043cc2f412ce76404c5b38af8d9b687" kindref="member">SilKit_FlexrayFrameTransmitHandler_t</ref> by SilKit_HandlerId on this controller. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controller</parametername>
</parameternamelist>
<parameterdescription>
<para>The FlexRay controller for which the callback should be removed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handlerId</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier of the callback to be removed. Obtained upon adding to respective handler. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="655" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_flexray_8h_1aac57918f29e98dccc3be2dacd9404a1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_FlexrayController_AddWakeupHandler</definition>
        <argsstring>(SilKit_FlexrayController *controller, void *context, SilKit_FlexrayWakeupHandler_t handler, SilKit_HandlerId *outHandlerId)</argsstring>
        <name>SilKit_FlexrayController_AddWakeupHandler</name>
        <param>
          <type><ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref> *</type>
          <declname>controller</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="_flexray_8h_1ab387bcb89722e17c27a2ce8d9207c1df" kindref="member">SilKit_FlexrayWakeupHandler_t</ref></type>
          <declname>handler</declname>
        </param>
        <param>
          <type><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref> *</type>
          <declname>outHandlerId</declname>
        </param>
        <briefdescription>
<para>Notification that a wakeup has been received. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controller</parametername>
</parameternamelist>
<parameterdescription>
<para>The FlexRay controller for which the callback should be registered. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The user provided context pointer, that is reobtained in the callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler to be called. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outHandlerId</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler identifier that can be used to remove the callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="668" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_flexray_8h_1aceea43c31e61fbfa475310f7d2a49498" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_FlexrayController_RemoveWakeupHandler</definition>
        <argsstring>(SilKit_FlexrayController *controller, SilKit_HandlerId handlerId)</argsstring>
        <name>SilKit_FlexrayController_RemoveWakeupHandler</name>
        <param>
          <type><ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref> *</type>
          <declname>controller</declname>
        </param>
        <param>
          <type><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref></type>
          <declname>handlerId</declname>
        </param>
        <briefdescription>
<para>Remove a <ref refid="_flexray_8h_1ab387bcb89722e17c27a2ce8d9207c1df" kindref="member">SilKit_FlexrayWakeupHandler_t</ref> by SilKit_HandlerId on this controller. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controller</parametername>
</parameternamelist>
<parameterdescription>
<para>The FlexRay controller for which the callback should be removed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handlerId</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier of the callback to be removed. Obtained upon adding to respective handler. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="681" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_flexray_8h_1a8fde9117d34500d35cc341aca91a27f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_FlexrayController_AddPocStatusHandler</definition>
        <argsstring>(SilKit_FlexrayController *controller, void *context, SilKit_FlexrayPocStatusHandler_t handler, SilKit_HandlerId *outHandlerId)</argsstring>
        <name>SilKit_FlexrayController_AddPocStatusHandler</name>
        <param>
          <type><ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref> *</type>
          <declname>controller</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="_flexray_8h_1aa2e4fb6cf3cd1e2d6db69d950a70b781" kindref="member">SilKit_FlexrayPocStatusHandler_t</ref></type>
          <declname>handler</declname>
        </param>
        <param>
          <type><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref> *</type>
          <declname>outHandlerId</declname>
        </param>
        <briefdescription>
<para>Notification that the POC status has changed. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controller</parametername>
</parameternamelist>
<parameterdescription>
<para>The FlexRay controller for which the callback should be registered. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The user provided context pointer, that is reobtained in the callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler to be called. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outHandlerId</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler identifier that can be used to remove the callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="694" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_flexray_8h_1a20262656de2deaf99b08ed711cc10817" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_FlexrayController_RemovePocStatusHandler</definition>
        <argsstring>(SilKit_FlexrayController *controller, SilKit_HandlerId handlerId)</argsstring>
        <name>SilKit_FlexrayController_RemovePocStatusHandler</name>
        <param>
          <type><ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref> *</type>
          <declname>controller</declname>
        </param>
        <param>
          <type><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref></type>
          <declname>handlerId</declname>
        </param>
        <briefdescription>
<para>Remove a <ref refid="_flexray_8h_1aa2e4fb6cf3cd1e2d6db69d950a70b781" kindref="member">SilKit_FlexrayPocStatusHandler_t</ref> by SilKit_HandlerId on this controller. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controller</parametername>
</parameternamelist>
<parameterdescription>
<para>The FlexRay controller for which the callback should be removed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handlerId</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier of the callback to be removed. Obtained upon adding to respective handler. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="708" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_flexray_8h_1adeea5dc3408705337098e86456373687" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_FlexrayController_AddSymbolHandler</definition>
        <argsstring>(SilKit_FlexrayController *controller, void *context, SilKit_FlexraySymbolHandler_t handler, SilKit_HandlerId *outHandlerId)</argsstring>
        <name>SilKit_FlexrayController_AddSymbolHandler</name>
        <param>
          <type><ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref> *</type>
          <declname>controller</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="_flexray_8h_1a0fe135e178fcfc33e0f88ae27cac1228" kindref="member">SilKit_FlexraySymbolHandler_t</ref></type>
          <declname>handler</declname>
        </param>
        <param>
          <type><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref> *</type>
          <declname>outHandlerId</declname>
        </param>
        <briefdescription>
<para>Notification that the controller has received a symbol. </para>        </briefdescription>
        <detaileddescription>
<para>The symbols relevant for interaction trigger also an additional callback, e.g., <ref refid="_flexray_8h_1ab387bcb89722e17c27a2ce8d9207c1df" kindref="member">SilKit_FlexrayWakeupHandler_t</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controller</parametername>
</parameternamelist>
<parameterdescription>
<para>The FlexRay controller for which the callback should be registered. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The user provided context pointer, that is reobtained in the callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler to be called. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outHandlerId</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler identifier that can be used to remove the callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="724" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_flexray_8h_1a83822ceb92b25203ba93d2f0c1131689" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_FlexrayController_RemoveSymbolHandler</definition>
        <argsstring>(SilKit_FlexrayController *controller, SilKit_HandlerId handlerId)</argsstring>
        <name>SilKit_FlexrayController_RemoveSymbolHandler</name>
        <param>
          <type><ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref> *</type>
          <declname>controller</declname>
        </param>
        <param>
          <type><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref></type>
          <declname>handlerId</declname>
        </param>
        <briefdescription>
<para>Remove a <ref refid="_flexray_8h_1a0fe135e178fcfc33e0f88ae27cac1228" kindref="member">SilKit_FlexraySymbolHandler_t</ref> by SilKit_HandlerId on this controller. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controller</parametername>
</parameternamelist>
<parameterdescription>
<para>The FlexRay controller for which the callback should be removed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handlerId</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier of the callback to be removed. Obtained upon adding to respective handler. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="737" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_flexray_8h_1af9420e7a973056f12554928d3d4fe8ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_FlexrayController_AddSymbolTransmitHandler</definition>
        <argsstring>(SilKit_FlexrayController *controller, void *context, SilKit_FlexraySymbolTransmitHandler_t handler, SilKit_HandlerId *outHandlerId)</argsstring>
        <name>SilKit_FlexrayController_AddSymbolTransmitHandler</name>
        <param>
          <type><ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref> *</type>
          <declname>controller</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="_flexray_8h_1adcadcfe65a3dd32aab92de696ef9c8a1" kindref="member">SilKit_FlexraySymbolTransmitHandler_t</ref></type>
          <declname>handler</declname>
        </param>
        <param>
          <type><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref> *</type>
          <declname>outHandlerId</declname>
        </param>
        <briefdescription>
<para>Notification that the controller has sent a symbol. </para>        </briefdescription>
        <detaileddescription>
<para>Currently, the following SymbolPatterns can occur:<itemizedlist>
<listitem><para>Wakeup() will cause sending the FlexraySymbolPattern::Wus if the bus is idle.</para></listitem><listitem><para>Run() will cause the transmission of FlexraySymbolPattern::CasMts if configured to coldstart the bus.</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controller</parametername>
</parameternamelist>
<parameterdescription>
<para>The FlexRay controller for which the callback should be registered. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The user provided context pointer, that is reobtained in the callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler to be called. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outHandlerId</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler identifier that can be used to remove the callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="755" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_flexray_8h_1acdcd871ec2b119ff8be4d9bb836004c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_FlexrayController_RemoveSymbolTransmitHandler</definition>
        <argsstring>(SilKit_FlexrayController *controller, SilKit_HandlerId handlerId)</argsstring>
        <name>SilKit_FlexrayController_RemoveSymbolTransmitHandler</name>
        <param>
          <type><ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref> *</type>
          <declname>controller</declname>
        </param>
        <param>
          <type><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref></type>
          <declname>handlerId</declname>
        </param>
        <briefdescription>
<para>Remove a <ref refid="_flexray_8h_1adcadcfe65a3dd32aab92de696ef9c8a1" kindref="member">SilKit_FlexraySymbolTransmitHandler_t</ref> by SilKit_HandlerId on this controller. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controller</parametername>
</parameternamelist>
<parameterdescription>
<para>The FlexRay controller for which the callback should be removed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handlerId</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier of the callback to be removed. Obtained upon adding to respective handler. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="768" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_flexray_8h_1a66c2459e67315a0b8d36fdd9ab9cf030" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_FlexrayController_AddCycleStartHandler</definition>
        <argsstring>(SilKit_FlexrayController *controller, void *context, SilKit_FlexrayCycleStartHandler_t handler, SilKit_HandlerId *outHandlerId)</argsstring>
        <name>SilKit_FlexrayController_AddCycleStartHandler</name>
        <param>
          <type><ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref> *</type>
          <declname>controller</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="_flexray_8h_1a1b92575bf688256bf4824063e6cc7e49" kindref="member">SilKit_FlexrayCycleStartHandler_t</ref></type>
          <declname>handler</declname>
        </param>
        <param>
          <type><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref> *</type>
          <declname>outHandlerId</declname>
        </param>
        <briefdescription>
<para>Notification that a new FlexRay cycle did start. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controller</parametername>
</parameternamelist>
<parameterdescription>
<para>The FlexRay controller for which the callback should be registered. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>The user provided context pointer, that is reobtained in the callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler to be called. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outHandlerId</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler identifier that can be used to remove the callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="781" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_flexray_8h_1a572ce944121129628d24300a81269a6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></type>
        <definition>SilKit_ReturnCode SilKit_FlexrayController_RemoveCycleStartHandler</definition>
        <argsstring>(SilKit_FlexrayController *controller, SilKit_HandlerId handlerId)</argsstring>
        <name>SilKit_FlexrayController_RemoveCycleStartHandler</name>
        <param>
          <type><ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref> *</type>
          <declname>controller</declname>
        </param>
        <param>
          <type><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref></type>
          <declname>handlerId</declname>
        </param>
        <briefdescription>
<para>Remove a <ref refid="_flexray_8h_1a1b92575bf688256bf4824063e6cc7e49" kindref="member">SilKit_FlexrayCycleStartHandler_t</ref> by SilKit_HandlerId on this controller. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controller</parametername>
</parameternamelist>
<parameterdescription>
<para>The FlexRay controller for which the callback should be removed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handlerId</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier of the callback to be removed. Obtained upon adding to respective handler. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h" line="796" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Copyright<sp/>(c)<sp/>2022<sp/>Vector<sp/>Informatik<sp/>GmbH</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="4"><highlight class="comment">a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the</highlight></codeline>
<codeline lineno="5"><highlight class="comment">&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including</highlight></codeline>
<codeline lineno="6"><highlight class="comment">without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,</highlight></codeline>
<codeline lineno="7"><highlight class="comment">distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="8"><highlight class="comment">permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to</highlight></codeline>
<codeline lineno="9"><highlight class="comment">the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment">The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="12"><highlight class="comment">included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="17"><highlight class="comment">NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE</highlight></codeline>
<codeline lineno="18"><highlight class="comment">LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION</highlight></codeline>
<codeline lineno="19"><highlight class="comment">OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="20"><highlight class="comment">WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_sil_kit_macros_8h" kindref="compound">silkit/capi/SilKitMacros.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_types_8h" kindref="compound">silkit/capi/Types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_interface_identifiers_8h" kindref="compound">silkit/capi/InterfaceIdentifiers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(push)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a4029ba13647be387d1d38057b99c7612" kindref="member">SILKIT_BEGIN_DECLS</ref></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="_flexray_8h_1aa2f0693e875b3c8a204d648693616612" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="_flexray_8h_1aa2f0693e875b3c8a204d648693616612" kindref="member">SilKit_FlexrayMicroTick</ref>;</highlight></codeline>
<codeline lineno="38" refid="_flexray_8h_1aa57139970fae812879b83c845f928dfb" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="_flexray_8h_1aa57139970fae812879b83c845f928dfb" kindref="member">SilKit_FlexrayMacroTick</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="_flexray_8h_1a7f5c9f146f6a2edd0ba9b06e65f544b7" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="_flexray_8h_1a7f5c9f146f6a2edd0ba9b06e65f544b7" kindref="member">SilKit_FlexrayChannel</ref>;</highlight></codeline>
<codeline lineno="42" refid="_flexray_8h_1a18cb3b37c8e2db26fb679ed0588f231b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayChannel_None<sp/>((SilKit_FlexrayChannel)0x00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="_flexray_8h_1aaef97939041af9e4032e7faec20fb88f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayChannel_A<sp/><sp/><sp/><sp/>((SilKit_FlexrayChannel)0x01)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="_flexray_8h_1aef0b89d7292dec1768ffe9917f28a1a5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayChannel_B<sp/><sp/><sp/><sp/>((SilKit_FlexrayChannel)0x02)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="_flexray_8h_1ad64b8ebd2e7ad27287f16168e713d734" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayChannel_AB<sp/><sp/><sp/>((SilKit_FlexrayChannel)0x03)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="_flexray_8h_1a7f7a0bfb08236938fe1fd46089770976" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="_flexray_8h_1a7f7a0bfb08236938fe1fd46089770976" kindref="member">SilKit_FlexrayClockPeriod</ref>;</highlight></codeline>
<codeline lineno="50" refid="_flexray_8h_1aff844203582a8fa1e47e89621a9f6263" refkind="member"><highlight class="preprocessor">#define<sp/>SilKit_FlexrayClockPeriod_T12_5NS<sp/>((SilKit_FlexrayClockPeriod)1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayClockPeriod_T25NS<sp/><sp/><sp/>((SilKit_FlexrayClockPeriod)2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayClockPeriod_T50NS<sp/><sp/><sp/>((SilKit_FlexrayClockPeriod)3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="struct_sil_kit___flexray_cluster_parameters" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit___flexray_cluster_parameters" kindref="compound">SilKit_FlexrayClusterParameters</ref></highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64" refid="struct_sil_kit___flexray_cluster_parameters_1aca24e9cdc8283dc6dfb5ed21b56c0159" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_sil_kit___struct_header" kindref="compound">SilKit_StructHeader</ref><sp/><ref refid="struct_sil_kit___flexray_cluster_parameters_1aca24e9cdc8283dc6dfb5ed21b56c0159" kindref="member">structHeader</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="struct_sil_kit___flexray_cluster_parameters_1af04600e2990b7ced2479efd6eb7468b0" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_sil_kit___flexray_cluster_parameters_1af04600e2990b7ced2479efd6eb7468b0" kindref="member">gColdstartAttempts</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="struct_sil_kit___flexray_cluster_parameters_1ac987d77107b1b35631238bddaaac94b5" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_sil_kit___flexray_cluster_parameters_1ac987d77107b1b35631238bddaaac94b5" kindref="member">gCycleCountMax</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="struct_sil_kit___flexray_cluster_parameters_1a57e7aebfca0456f86219d6fea7f54644" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_sil_kit___flexray_cluster_parameters_1a57e7aebfca0456f86219d6fea7f54644" kindref="member">gdActionPointOffset</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>gdCASRxLowMax</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="struct_sil_kit___flexray_cluster_parameters_1ab309b8470e432d1e00f2f12561a85b9c" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_sil_kit___flexray_cluster_parameters_1ab309b8470e432d1e00f2f12561a85b9c" kindref="member">gdDynamicSlotIdlePhase</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>gdIgnoreAfterTx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="struct_sil_kit___flexray_cluster_parameters_1a3053960e256b9c45c5cbd5de710ca105" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_sil_kit___flexray_cluster_parameters_1a3053960e256b9c45c5cbd5de710ca105" kindref="member">gdMiniSlot</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="struct_sil_kit___flexray_cluster_parameters_1aeac8336d74589b87530aeed0af00c525" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_sil_kit___flexray_cluster_parameters_1aeac8336d74589b87530aeed0af00c525" kindref="member">gdMiniSlotActionPointOffset</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="struct_sil_kit___flexray_cluster_parameters_1a404b04740bdba9784a168a7098ba0ec0" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_sil_kit___flexray_cluster_parameters_1a404b04740bdba9784a168a7098ba0ec0" kindref="member">gdStaticSlot</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="struct_sil_kit___flexray_cluster_parameters_1a8853b562cbf119c138eaddd9cfb8ae97" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_sil_kit___flexray_cluster_parameters_1a8853b562cbf119c138eaddd9cfb8ae97" kindref="member">gdSymbolWindow</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="struct_sil_kit___flexray_cluster_parameters_1a3164528026cb92f7f9b0181320fc3983" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_sil_kit___flexray_cluster_parameters_1a3164528026cb92f7f9b0181320fc3983" kindref="member">gdSymbolWindowActionPointOffset</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="struct_sil_kit___flexray_cluster_parameters_1a87db5b60d66435ed27177ebf2dece27a" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_sil_kit___flexray_cluster_parameters_1a87db5b60d66435ed27177ebf2dece27a" kindref="member">gdTSSTransmitter</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>gdWakeupRxIdle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>gdWakeupRxLow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>gdWakeupRxWindow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="struct_sil_kit___flexray_cluster_parameters_1a835b3630f54bd74eb338910bb55f84c2" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_sil_kit___flexray_cluster_parameters_1a835b3630f54bd74eb338910bb55f84c2" kindref="member">gdWakeupTxActive</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="struct_sil_kit___flexray_cluster_parameters_1a2b58dcc438d89281fc90d96fef4e1451" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_sil_kit___flexray_cluster_parameters_1a2b58dcc438d89281fc90d96fef4e1451" kindref="member">gdWakeupTxIdle</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="struct_sil_kit___flexray_cluster_parameters_1a4bb5415a397788bfbbe2fe387f8bb4b2" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_sil_kit___flexray_cluster_parameters_1a4bb5415a397788bfbbe2fe387f8bb4b2" kindref="member">gListenNoise</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="struct_sil_kit___flexray_cluster_parameters_1a3bbe3b02cd91b39dc146a3ca4dcfc514" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_sil_kit___flexray_cluster_parameters_1a3bbe3b02cd91b39dc146a3ca4dcfc514" kindref="member">gMacroPerCycle</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="struct_sil_kit___flexray_cluster_parameters_1ab3bd7bfd73272826d51f08c20dda1fb6" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_sil_kit___flexray_cluster_parameters_1ab3bd7bfd73272826d51f08c20dda1fb6" kindref="member">gMaxWithoutClockCorrectionFatal</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="struct_sil_kit___flexray_cluster_parameters_1a9ef63f19880995177b175b9914cba4bf" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_sil_kit___flexray_cluster_parameters_1a9ef63f19880995177b175b9914cba4bf" kindref="member">gMaxWithoutClockCorrectionPassive</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="struct_sil_kit___flexray_cluster_parameters_1a547bc5004d11154ff5105a3894d0f828" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_sil_kit___flexray_cluster_parameters_1a547bc5004d11154ff5105a3894d0f828" kindref="member">gNumberOfMiniSlots</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="struct_sil_kit___flexray_cluster_parameters_1a95fd6b16eba9ca9ef7b3f6cf63aa1c34" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_sil_kit___flexray_cluster_parameters_1a95fd6b16eba9ca9ef7b3f6cf63aa1c34" kindref="member">gNumberOfStaticSlots</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="struct_sil_kit___flexray_cluster_parameters_1a5de6f07b30d533a81072625294907063" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_sil_kit___flexray_cluster_parameters_1a5de6f07b30d533a81072625294907063" kindref="member">gPayloadLengthStatic</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="struct_sil_kit___flexray_cluster_parameters_1aca0fa59c09394c08c71610a1999ba371" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_sil_kit___flexray_cluster_parameters_1aca0fa59c09394c08c71610a1999ba371" kindref="member">gSyncFrameIDCountMax</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">};</highlight></codeline>
<codeline lineno="144" refid="_flexray_8h_1afaacf999e45b74eae4d9dca7b3eaf385" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit___flexray_cluster_parameters" kindref="compound">SilKit_FlexrayClusterParameters</ref><sp/><ref refid="struct_sil_kit___flexray_cluster_parameters" kindref="compound">SilKit_FlexrayClusterParameters</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="struct_sil_kit___flexray_node_parameters" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit___flexray_node_parameters" kindref="compound">SilKit_FlexrayNodeParameters</ref></highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154" refid="struct_sil_kit___flexray_node_parameters_1a7b4eb1646bdbb5b8d478d19049f0deb1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_sil_kit___struct_header" kindref="compound">SilKit_StructHeader</ref><sp/><ref refid="struct_sil_kit___flexray_node_parameters_1a7b4eb1646bdbb5b8d478d19049f0deb1" kindref="member">structHeader</ref>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameters<sp/>according<sp/>to<sp/>B.3.2.1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="struct_sil_kit___flexray_node_parameters_1aa17d570a91f35f0ba81b736c66d64ca7" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_sil_kit___flexray_node_parameters_1aa17d570a91f35f0ba81b736c66d64ca7" kindref="member">pAllowHaltDueToClock</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="struct_sil_kit___flexray_node_parameters_1a45deda10bc98531aa969e96c92cbfab7" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_sil_kit___flexray_node_parameters_1a45deda10bc98531aa969e96c92cbfab7" kindref="member">pAllowPassiveToActive</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="struct_sil_kit___flexray_node_parameters_1a957da3b91437adb1b8e3d8cd3b85a663" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_flexray_8h_1a7f5c9f146f6a2edd0ba9b06e65f544b7" kindref="member">SilKit_FlexrayChannel</ref><sp/><ref refid="struct_sil_kit___flexray_node_parameters_1a957da3b91437adb1b8e3d8cd3b85a663" kindref="member">pChannels</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="struct_sil_kit___flexray_node_parameters_1a4775e81ff63d7dfda5854657cb881634" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_sil_kit___flexray_node_parameters_1a4775e81ff63d7dfda5854657cb881634" kindref="member">pClusterDriftDamping</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="struct_sil_kit___flexray_node_parameters_1aeee94c24befbcfe21bf942e142a897db" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_flexray_8h_1aa2f0693e875b3c8a204d648693616612" kindref="member">SilKit_FlexrayMicroTick</ref><sp/><ref refid="struct_sil_kit___flexray_node_parameters_1aeee94c24befbcfe21bf942e142a897db" kindref="member">pdAcceptedStartupRange</ref>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pDecodingCorrection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pDelayCompensationA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pDelayCompensationB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="struct_sil_kit___flexray_node_parameters_1a975c4e2046d1f43ad68ea54714f8188a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_flexray_8h_1aa2f0693e875b3c8a204d648693616612" kindref="member">SilKit_FlexrayMicroTick</ref><sp/><ref refid="struct_sil_kit___flexray_node_parameters_1a975c4e2046d1f43ad68ea54714f8188a" kindref="member">pdListenTimeout</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pExternalSync</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pExternOffsetCorrection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pExternRateCorrection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pFallBackInternal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="struct_sil_kit___flexray_node_parameters_1ad506f147d0650f4e50f788b0d9aafeaf" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_sil_kit___flexray_node_parameters_1ad506f147d0650f4e50f788b0d9aafeaf" kindref="member">pKeySlotId</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="struct_sil_kit___flexray_node_parameters_1aca561fa5dd7cb39b026eda18562482c5" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_sil_kit___flexray_node_parameters_1aca561fa5dd7cb39b026eda18562482c5" kindref="member">pKeySlotOnlyEnabled</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="struct_sil_kit___flexray_node_parameters_1a118eb6e1a19831bb8deb4d65d9ca583b" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_sil_kit___flexray_node_parameters_1a118eb6e1a19831bb8deb4d65d9ca583b" kindref="member">pKeySlotUsedForStartup</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="struct_sil_kit___flexray_node_parameters_1a9877adb3d981cfa528b1f27001bd93ee" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_sil_kit___flexray_node_parameters_1a9877adb3d981cfa528b1f27001bd93ee" kindref="member">pKeySlotUsedForSync</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="struct_sil_kit___flexray_node_parameters_1a84710f14f7e976cdef2c12a763e8dd6b" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_sil_kit___flexray_node_parameters_1a84710f14f7e976cdef2c12a763e8dd6b" kindref="member">pLatestTx</ref>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="struct_sil_kit___flexray_node_parameters_1af02e554d2c76135887b1ca8b1a6aaaf9" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_sil_kit___flexray_node_parameters_1af02e554d2c76135887b1ca8b1a6aaaf9" kindref="member">pMacroInitialOffsetA</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="struct_sil_kit___flexray_node_parameters_1a8c8990dd31280ed442db16b89b8a6f16" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_sil_kit___flexray_node_parameters_1a8c8990dd31280ed442db16b89b8a6f16" kindref="member">pMacroInitialOffsetB</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="struct_sil_kit___flexray_node_parameters_1a0e908cc1e57011fba44ba8e7f8c2b5f4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_flexray_8h_1aa2f0693e875b3c8a204d648693616612" kindref="member">SilKit_FlexrayMicroTick</ref><sp/><ref refid="struct_sil_kit___flexray_node_parameters_1a0e908cc1e57011fba44ba8e7f8c2b5f4" kindref="member">pMicroInitialOffsetA</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="struct_sil_kit___flexray_node_parameters_1a73614a2711d0d9518c4ffe0869b750ff" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_flexray_8h_1aa2f0693e875b3c8a204d648693616612" kindref="member">SilKit_FlexrayMicroTick</ref><sp/><ref refid="struct_sil_kit___flexray_node_parameters_1a73614a2711d0d9518c4ffe0869b750ff" kindref="member">pMicroInitialOffsetB</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="struct_sil_kit___flexray_node_parameters_1a6a154bbe8a3ffed39597bf1469d619ce" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_flexray_8h_1aa2f0693e875b3c8a204d648693616612" kindref="member">SilKit_FlexrayMicroTick</ref><sp/><ref refid="struct_sil_kit___flexray_node_parameters_1a6a154bbe8a3ffed39597bf1469d619ce" kindref="member">pMicroPerCycle</ref>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="struct_sil_kit___flexray_node_parameters_1a7dd5878f392346a80a054a5abc721d97" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_flexray_8h_1aa2f0693e875b3c8a204d648693616612" kindref="member">SilKit_FlexrayMicroTick</ref><sp/><ref refid="struct_sil_kit___flexray_node_parameters_1a7dd5878f392346a80a054a5abc721d97" kindref="member">pOffsetCorrectionOut</ref>;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="struct_sil_kit___flexray_node_parameters_1a60d4895d1fd51fb4e41d9e94f2e54d7e" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_sil_kit___flexray_node_parameters_1a60d4895d1fd51fb4e41d9e94f2e54d7e" kindref="member">pOffsetCorrectionStart</ref>;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="struct_sil_kit___flexray_node_parameters_1a359045ef752013da9f9000912d4437e3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_flexray_8h_1aa2f0693e875b3c8a204d648693616612" kindref="member">SilKit_FlexrayMicroTick</ref><sp/><ref refid="struct_sil_kit___flexray_node_parameters_1a359045ef752013da9f9000912d4437e3" kindref="member">pRateCorrectionOut</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pSecondKeySlotID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pTwoKeySlotMode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="struct_sil_kit___flexray_node_parameters_1aa757c05b8978aabafbdefccec2486785" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_flexray_8h_1a7f5c9f146f6a2edd0ba9b06e65f544b7" kindref="member">SilKit_FlexrayChannel</ref><sp/><ref refid="struct_sil_kit___flexray_node_parameters_1aa757c05b8978aabafbdefccec2486785" kindref="member">pWakeupChannel</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="struct_sil_kit___flexray_node_parameters_1abaa0e70ecc84e6d7f29dd91addfe20c4" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_sil_kit___flexray_node_parameters_1abaa0e70ecc84e6d7f29dd91addfe20c4" kindref="member">pWakeupPattern</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Parameters<sp/>according<sp/>to<sp/>B.3.2.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="struct_sil_kit___flexray_node_parameters_1a203f4c93a9f107680275612980ba11e3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_flexray_8h_1a7f7a0bfb08236938fe1fd46089770976" kindref="member">SilKit_FlexrayClockPeriod</ref><sp/><ref refid="struct_sil_kit___flexray_node_parameters_1a203f4c93a9f107680275612980ba11e3" kindref="member">pdMicrotick</ref>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pNMVectorEarlyUpdate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pPayloadLengthDynMax</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="struct_sil_kit___flexray_node_parameters_1af87b307507cb738051a9e65e3e68142c" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_sil_kit___flexray_node_parameters_1af87b307507cb738051a9e65e3e68142c" kindref="member">pSamplesPerMicrotick</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal">};</highlight></codeline>
<codeline lineno="264" refid="_flexray_8h_1a6b92c31717dd1131be096f45d2244bf4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit___flexray_node_parameters" kindref="compound">SilKit_FlexrayNodeParameters</ref><sp/><ref refid="struct_sil_kit___flexray_node_parameters" kindref="compound">SilKit_FlexrayNodeParameters</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="_flexray_8h_1a5edf815b586688837a63f9a8131a9136" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="_flexray_8h_1a5edf815b586688837a63f9a8131a9136" kindref="member">SilKit_FlexrayTransmissionMode</ref>;</highlight></codeline>
<codeline lineno="268" refid="_flexray_8h_1a1745731bee47cd0542595843e05f4aaf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayTransmissionMode_SingleShot<sp/>((SilKit_FlexrayTransmissionMode)0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="_flexray_8h_1a429a62e577ee95536b99f2241132c481" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayTransmissionMode_Continuous<sp/>((SilKit_FlexrayTransmissionMode)1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="struct_sil_kit___flexray_tx_buffer_config" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit___flexray_tx_buffer_config" kindref="compound">SilKit_FlexrayTxBufferConfig</ref></highlight></codeline>
<codeline lineno="273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="275" refid="struct_sil_kit___flexray_tx_buffer_config_1aff22e8e6666f12798a3ee8a7327a9e71" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_sil_kit___struct_header" kindref="compound">SilKit_StructHeader</ref><sp/><ref refid="struct_sil_kit___flexray_tx_buffer_config_1aff22e8e6666f12798a3ee8a7327a9e71" kindref="member">structHeader</ref>;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="struct_sil_kit___flexray_tx_buffer_config_1a0b25447998a3f41216f7b61d11b0befc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_flexray_8h_1a7f5c9f146f6a2edd0ba9b06e65f544b7" kindref="member">SilKit_FlexrayChannel</ref><sp/><ref refid="struct_sil_kit___flexray_tx_buffer_config_1a0b25447998a3f41216f7b61d11b0befc" kindref="member">channels</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="struct_sil_kit___flexray_tx_buffer_config_1a316ea8969167bbb7301325930a07c2b6" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_sil_kit___flexray_tx_buffer_config_1a316ea8969167bbb7301325930a07c2b6" kindref="member">slotId</ref>;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="struct_sil_kit___flexray_tx_buffer_config_1a77288a5a0e70403080225c14d71afc76" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_sil_kit___flexray_tx_buffer_config_1a77288a5a0e70403080225c14d71afc76" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="struct_sil_kit___flexray_tx_buffer_config_1a2e5fb3e9d2b74f65365f7347760d869b" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_sil_kit___flexray_tx_buffer_config_1a2e5fb3e9d2b74f65365f7347760d869b" kindref="member">repetition</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="struct_sil_kit___flexray_tx_buffer_config_1ab284299398dccedaa1178701d8dc4ba8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_types_8h_1acd67002df70237d213b7773b26891fcc" kindref="member">SilKit_Bool</ref><sp/><ref refid="struct_sil_kit___flexray_tx_buffer_config_1ab284299398dccedaa1178701d8dc4ba8" kindref="member">hasPayloadPreambleIndicator</ref>;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="293" refid="struct_sil_kit___flexray_tx_buffer_config_1a9ffb91dc58de04dc435ff3f56a5480a7" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_sil_kit___flexray_tx_buffer_config_1a9ffb91dc58de04dc435ff3f56a5480a7" kindref="member">headerCrc</ref>;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="struct_sil_kit___flexray_tx_buffer_config_1aeb41dc33c317059b6553efe1cef05e60" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_flexray_8h_1a5edf815b586688837a63f9a8131a9136" kindref="member">SilKit_FlexrayTransmissionMode</ref><sp/><ref refid="struct_sil_kit___flexray_tx_buffer_config_1aeb41dc33c317059b6553efe1cef05e60" kindref="member">transmissionMode</ref>;</highlight></codeline>
<codeline lineno="297"><highlight class="normal">};</highlight></codeline>
<codeline lineno="298" refid="_flexray_8h_1afa9d3cbee15fc0a9457533705cffc143" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit___flexray_tx_buffer_config" kindref="compound">SilKit_FlexrayTxBufferConfig</ref><sp/><ref refid="struct_sil_kit___flexray_tx_buffer_config" kindref="compound">SilKit_FlexrayTxBufferConfig</ref>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="struct_sil_kit___flexray_controller_config" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit___flexray_controller_config" kindref="compound">SilKit_FlexrayControllerConfig</ref></highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="304" refid="struct_sil_kit___flexray_controller_config_1a7438fd260cbede4eff9a3907818c4d07" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_sil_kit___struct_header" kindref="compound">SilKit_StructHeader</ref><sp/><ref refid="struct_sil_kit___flexray_controller_config_1a7438fd260cbede4eff9a3907818c4d07" kindref="member">structHeader</ref>;</highlight></codeline>
<codeline lineno="306" refid="struct_sil_kit___flexray_controller_config_1ac7fcab7532a8bcddd1a1f08fcc9f716a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_sil_kit___flexray_cluster_parameters" kindref="compound">SilKit_FlexrayClusterParameters</ref>*<sp/><ref refid="struct_sil_kit___flexray_controller_config_1ac7fcab7532a8bcddd1a1f08fcc9f716a" kindref="member">clusterParams</ref>;</highlight></codeline>
<codeline lineno="308" refid="struct_sil_kit___flexray_controller_config_1a767c04e49e446bb4fec264731c77661a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_sil_kit___flexray_node_parameters" kindref="compound">SilKit_FlexrayNodeParameters</ref>*<sp/><ref refid="struct_sil_kit___flexray_controller_config_1a767c04e49e446bb4fec264731c77661a" kindref="member">nodeParams</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="struct_sil_kit___flexray_controller_config_1ac9e185aa13161796303c4bbc017b82b6" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sil_kit___flexray_controller_config_1ac9e185aa13161796303c4bbc017b82b6" kindref="member">numBufferConfigs</ref>;</highlight></codeline>
<codeline lineno="312" refid="struct_sil_kit___flexray_controller_config_1aab794d4408790156b25c643336cdaaf3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_sil_kit___flexray_tx_buffer_config" kindref="compound">SilKit_FlexrayTxBufferConfig</ref>*<sp/><ref refid="struct_sil_kit___flexray_controller_config_1aab794d4408790156b25c643336cdaaf3" kindref="member">bufferConfigs</ref>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal">};</highlight></codeline>
<codeline lineno="314" refid="_flexray_8h_1afe826cd5ab35714073d6892c0b86418d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit___flexray_controller_config" kindref="compound">SilKit_FlexrayControllerConfig</ref><sp/><ref refid="struct_sil_kit___flexray_controller_config" kindref="compound">SilKit_FlexrayControllerConfig</ref>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="struct_sil_kit___flexray_tx_buffer_update" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit___flexray_tx_buffer_update" kindref="compound">SilKit_FlexrayTxBufferUpdate</ref></highlight></codeline>
<codeline lineno="318"><highlight class="normal">{</highlight></codeline>
<codeline lineno="320" refid="struct_sil_kit___flexray_tx_buffer_update_1a5f87ae7f4ca54c4e6b1cf71a36b56721" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_sil_kit___struct_header" kindref="compound">SilKit_StructHeader</ref><sp/><ref refid="struct_sil_kit___flexray_tx_buffer_update_1a5f87ae7f4ca54c4e6b1cf71a36b56721" kindref="member">structHeader</ref>;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="struct_sil_kit___flexray_tx_buffer_update_1ab058b0979704dbb778c83c052e34773d" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_sil_kit___flexray_tx_buffer_update_1ab058b0979704dbb778c83c052e34773d" kindref="member">txBufferIndex</ref>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="struct_sil_kit___flexray_tx_buffer_update_1a46168e80edd3504b06d911be7b3b2ea5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_types_8h_1acd67002df70237d213b7773b26891fcc" kindref="member">SilKit_Bool</ref><sp/><ref refid="struct_sil_kit___flexray_tx_buffer_update_1a46168e80edd3504b06d911be7b3b2ea5" kindref="member">payloadDataValid</ref>;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="329" refid="struct_sil_kit___flexray_tx_buffer_update_1a06f209ebac8df203c01cb5e50d064fdf" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_sil_kit___byte_vector" kindref="compound">SilKit_ByteVector</ref><sp/><ref refid="struct_sil_kit___flexray_tx_buffer_update_1a06f209ebac8df203c01cb5e50d064fdf" kindref="member">payload</ref>;</highlight></codeline>
<codeline lineno="330"><highlight class="normal">};</highlight></codeline>
<codeline lineno="331" refid="_flexray_8h_1afd4b71886d044e71ce68fe2d1e07a35d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit___flexray_tx_buffer_update" kindref="compound">SilKit_FlexrayTxBufferUpdate</ref><sp/><ref refid="struct_sil_kit___flexray_tx_buffer_update" kindref="compound">SilKit_FlexrayTxBufferUpdate</ref>;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="334" refid="_flexray_8h_1a306020a22fe79c789db0e3647ae532b3" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="_flexray_8h_1a306020a22fe79c789db0e3647ae532b3" kindref="member">SilKit_FlexrayChiCommand</ref>;</highlight></codeline>
<codeline lineno="335" refid="_flexray_8h_1a337a994647a5c8c33e8f7567cf4d02c6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayChiCommand_RUN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_FlexrayChiCommand)0x00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="_flexray_8h_1ad432481cce02627649dfb63fc99d71db" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayChiCommand_DEFERRED_HALT<sp/><sp/><sp/>((SilKit_FlexrayChiCommand)0x01)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="_flexray_8h_1a8b5a79b405ddeb1bb6e138679d142c28" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayChiCommand_FREEZE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_FlexrayChiCommand)0x02)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="_flexray_8h_1a415e253ef5816ab177b0051965bf3e79" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayChiCommand_ALLOW_COLDSTART<sp/>((SilKit_FlexrayChiCommand)0x03)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339" refid="_flexray_8h_1a1991f8d1943a415e66a837fca59ce98d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayChiCommand_ALL_SLOTS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_FlexrayChiCommand)0x04)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="_flexray_8h_1a0d667f963495dfd69ad5eafb723a849a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayChiCommand_WAKEUP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_FlexrayChiCommand)0x05)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342" refid="_flexray_8h_1af07541bbc6465d3fbe10f85fe014ae74" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="_flexray_8h_1af07541bbc6465d3fbe10f85fe014ae74" kindref="member">SilKit_FlexrayHeader_Flag</ref>;</highlight></codeline>
<codeline lineno="343" refid="_flexray_8h_1acf8e2cb5d7a7233aff71c11f0df07425" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayHeader_SuFIndicator<sp/>((SilKit_FlexrayHeader_Flag)0x01)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="_flexray_8h_1a2dd4cd67983c0baebcf7710ea18aeb64" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayHeader_SyFIndicator<sp/>((SilKit_FlexrayHeader_Flag)0x02)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="_flexray_8h_1a35e8487c85606e1fcb3bf2138d1b07f0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayHeader_NFIndicator<sp/><sp/>((SilKit_FlexrayHeader_Flag)0x04)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="_flexray_8h_1a4ca4a36861a20657a5d481efce10b51c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayHeader_PPIndicator<sp/><sp/>((SilKit_FlexrayHeader_Flag)0x08)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="struct_sil_kit___flexray_header" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit___flexray_header" kindref="compound">SilKit_FlexrayHeader</ref></highlight></codeline>
<codeline lineno="349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="350" refid="struct_sil_kit___flexray_header_1a92af16b6e43ea3ccb3ed56b9aafb9889" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_sil_kit___struct_header" kindref="compound">SilKit_StructHeader</ref><sp/><ref refid="struct_sil_kit___flexray_header_1a92af16b6e43ea3ccb3ed56b9aafb9889" kindref="member">structHeader</ref>;<sp/></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="struct_sil_kit___flexray_header_1a90519971b7e504149e8c5694bd6a5c29" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><sp/><ref refid="struct_sil_kit___flexray_header_1a90519971b7e504149e8c5694bd6a5c29" kindref="member">flags</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="struct_sil_kit___flexray_header_1a18c4c77fef8bef13d04d21f8b8cc69f4" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_sil_kit___flexray_header_1a18c4c77fef8bef13d04d21f8b8cc69f4" kindref="member">frameId</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>=<sp/>0;<sp/>//!&lt;<sp/>Slot<sp/>ID<sp/>in<sp/>which<sp/>the<sp/>frame<sp/>was<sp/>sent:<sp/>1<sp/>-<sp/>2047</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="struct_sil_kit___flexray_header_1aaec5733d839c9b824aa9d07519833d43" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><sp/><ref refid="struct_sil_kit___flexray_header_1aaec5733d839c9b824aa9d07519833d43" kindref="member">payloadLength</ref>;<sp/></highlight><highlight class="comment">//<sp/><sp/>=<sp/>0;<sp/>//!&lt;<sp/>Payload<sp/>length,<sp/>7<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363" refid="struct_sil_kit___flexray_header_1a9fb450cd31a522ec568ea724cef8ffab" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><ref refid="struct_sil_kit___flexray_header_1a9fb450cd31a522ec568ea724cef8ffab" kindref="member">headerCrc</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>=<sp/>0;<sp/>//!&lt;<sp/>Header<sp/>CRC,<sp/>11<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="struct_sil_kit___flexray_header_1a482318469bb6c9ea1e0118c17451e773" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><sp/><ref refid="struct_sil_kit___flexray_header_1a482318469bb6c9ea1e0118c17451e773" kindref="member">cycleCount</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>=<sp/>0;<sp/>//!&lt;<sp/>Cycle<sp/>in<sp/>which<sp/>the<sp/>frame<sp/>was<sp/>sent:<sp/>0<sp/>-<sp/>63</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal">};</highlight></codeline>
<codeline lineno="366" refid="_flexray_8h_1a5ef2f975f2fa41c19c266cc37ea374ec" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit___flexray_header" kindref="compound">SilKit_FlexrayHeader</ref><sp/><ref refid="struct_sil_kit___flexray_header" kindref="compound">SilKit_FlexrayHeader</ref>;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="struct_sil_kit___flexray_frame" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit___flexray_frame" kindref="compound">SilKit_FlexrayFrame</ref></highlight></codeline>
<codeline lineno="369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="370" refid="struct_sil_kit___flexray_frame_1a3b2683c859440e7de02a6f6d0e37d198" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_sil_kit___struct_header" kindref="compound">SilKit_StructHeader</ref><sp/><ref refid="struct_sil_kit___flexray_frame_1a3b2683c859440e7de02a6f6d0e37d198" kindref="member">structHeader</ref>;<sp/></highlight></codeline>
<codeline lineno="371" refid="struct_sil_kit___flexray_frame_1aab782642778dc01faacc0e07da96ce53" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_sil_kit___flexray_header" kindref="compound">SilKit_FlexrayHeader</ref>*<sp/><ref refid="struct_sil_kit___flexray_frame_1aab782642778dc01faacc0e07da96ce53" kindref="member">header</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="372" refid="struct_sil_kit___flexray_frame_1a4ca89177352f566b06500091eaa2602b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_sil_kit___byte_vector" kindref="compound">SilKit_ByteVector</ref><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sil_kit___flexray_frame_1a4ca89177352f566b06500091eaa2602b" kindref="member">payload</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal">};</highlight></codeline>
<codeline lineno="374" refid="_flexray_8h_1a8ff09469fc50356f867705103a2b37da" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit___flexray_frame" kindref="compound">SilKit_FlexrayFrame</ref><sp/><ref refid="struct_sil_kit___flexray_frame" kindref="compound">SilKit_FlexrayFrame</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376" refid="struct_sil_kit___flexray_frame_event" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit___flexray_frame_event" kindref="compound">SilKit_FlexrayFrameEvent</ref></highlight></codeline>
<codeline lineno="377"><highlight class="normal">{</highlight></codeline>
<codeline lineno="378" refid="struct_sil_kit___flexray_frame_event_1a44d8579c304609ec9ea3ba306c364dd2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_sil_kit___struct_header" kindref="compound">SilKit_StructHeader</ref><sp/><ref refid="struct_sil_kit___flexray_frame_event_1a44d8579c304609ec9ea3ba306c364dd2" kindref="member">structHeader</ref>;<sp/></highlight></codeline>
<codeline lineno="379" refid="struct_sil_kit___flexray_frame_event_1ac0f2debb4583e6610568cf4e79c096ef" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_orchestration_8h_1a4a5c030b6c22d0228bad174647d4b7fd" kindref="member">SilKit_NanosecondsTime</ref><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sil_kit___flexray_frame_event_1ac0f2debb4583e6610568cf4e79c096ef" kindref="member">timestamp</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="380" refid="struct_sil_kit___flexray_frame_event_1a78def78372403f4c333c77e0bb80739c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_flexray_8h_1a7f5c9f146f6a2edd0ba9b06e65f544b7" kindref="member">SilKit_FlexrayChannel</ref><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sil_kit___flexray_frame_event_1a78def78372403f4c333c77e0bb80739c" kindref="member">channel</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="381" refid="struct_sil_kit___flexray_frame_event_1aacb43388a5c92fd55077ab5a00b014f4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_sil_kit___flexray_frame" kindref="compound">SilKit_FlexrayFrame</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sil_kit___flexray_frame_event_1aacb43388a5c92fd55077ab5a00b014f4" kindref="member">frame</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="382"><highlight class="normal">};</highlight></codeline>
<codeline lineno="383" refid="_flexray_8h_1a2f7d2981bc1958f86fe73c0f40001342" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit___flexray_frame_event" kindref="compound">SilKit_FlexrayFrameEvent</ref><sp/><ref refid="struct_sil_kit___flexray_frame_event" kindref="compound">SilKit_FlexrayFrameEvent</ref>;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="388" refid="struct_sil_kit___flexray_frame_transmit_event" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit___flexray_frame_transmit_event" kindref="compound">SilKit_FlexrayFrameTransmitEvent</ref></highlight></codeline>
<codeline lineno="389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="390" refid="struct_sil_kit___flexray_frame_transmit_event_1a2be1e7e5054f1822cd6dea57cb9f40a0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_sil_kit___struct_header" kindref="compound">SilKit_StructHeader</ref><sp/><ref refid="struct_sil_kit___flexray_frame_transmit_event_1a2be1e7e5054f1822cd6dea57cb9f40a0" kindref="member">structHeader</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="391" refid="struct_sil_kit___flexray_frame_transmit_event_1ad3055a3d077707b85ae7a00747147bfd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_orchestration_8h_1a4a5c030b6c22d0228bad174647d4b7fd" kindref="member">SilKit_NanosecondsTime</ref><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sil_kit___flexray_frame_transmit_event_1ad3055a3d077707b85ae7a00747147bfd" kindref="member">timestamp</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="392" refid="struct_sil_kit___flexray_frame_transmit_event_1a13d08866a17fd10e7a5b8493c659c776" refkind="member"><highlight class="normal"><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sil_kit___flexray_frame_transmit_event_1a13d08866a17fd10e7a5b8493c659c776" kindref="member">txBufferIndex</ref>;<sp/></highlight></codeline>
<codeline lineno="393" refid="struct_sil_kit___flexray_frame_transmit_event_1a0531810c496fcfe16ef7b2b30d04774a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_flexray_8h_1a7f5c9f146f6a2edd0ba9b06e65f544b7" kindref="member">SilKit_FlexrayChannel</ref><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sil_kit___flexray_frame_transmit_event_1a0531810c496fcfe16ef7b2b30d04774a" kindref="member">channel</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="394" refid="struct_sil_kit___flexray_frame_transmit_event_1a67e6f4eb2a4320836d457216cf4fdcae" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_sil_kit___flexray_frame" kindref="compound">SilKit_FlexrayFrame</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sil_kit___flexray_frame_transmit_event_1a67e6f4eb2a4320836d457216cf4fdcae" kindref="member">frame</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="395"><highlight class="normal">};</highlight></codeline>
<codeline lineno="396" refid="_flexray_8h_1aa5f3455e372058ff79fbfd0d449c40d1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit___flexray_frame_transmit_event" kindref="compound">SilKit_FlexrayFrameTransmitEvent</ref><sp/><ref refid="struct_sil_kit___flexray_frame_transmit_event" kindref="compound">SilKit_FlexrayFrameTransmitEvent</ref>;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="401" refid="_flexray_8h_1aa09783dbc288ffdd566ba0b094c0d40f" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="_flexray_8h_1aa09783dbc288ffdd566ba0b094c0d40f" kindref="member">SilKit_FlexraySymbolPattern</ref>;</highlight></codeline>
<codeline lineno="403" refid="_flexray_8h_1ae07923747105840109c87e52d0a0ae21" refkind="member"><highlight class="preprocessor">#define<sp/>SilKit_FlexraySymbolPattern_CasMts<sp/>((SilKit_FlexraySymbolPattern)0x00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexraySymbolPattern_Wus<sp/><sp/><sp/><sp/>((SilKit_FlexraySymbolPattern)0x01)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexraySymbolPattern_Wudop<sp/><sp/>((SilKit_FlexraySymbolPattern)0x02)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="412" refid="struct_sil_kit___flexray_symbol_event" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit___flexray_symbol_event" kindref="compound">SilKit_FlexraySymbolEvent</ref></highlight></codeline>
<codeline lineno="413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="414" refid="struct_sil_kit___flexray_symbol_event_1a0b02ffc789f0ecf47367ea6188b2eb65" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_sil_kit___struct_header" kindref="compound">SilKit_StructHeader</ref><sp/><ref refid="struct_sil_kit___flexray_symbol_event_1a0b02ffc789f0ecf47367ea6188b2eb65" kindref="member">structHeader</ref>;<sp/></highlight></codeline>
<codeline lineno="415" refid="struct_sil_kit___flexray_symbol_event_1a54f5329091c0977ec8d161c4225ffcef" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_orchestration_8h_1a4a5c030b6c22d0228bad174647d4b7fd" kindref="member">SilKit_NanosecondsTime</ref><sp/><ref refid="struct_sil_kit___flexray_symbol_event_1a54f5329091c0977ec8d161c4225ffcef" kindref="member">timestamp</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="416" refid="struct_sil_kit___flexray_symbol_event_1a9db20ca9965da9f25c894d233cc51143" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_flexray_8h_1a7f5c9f146f6a2edd0ba9b06e65f544b7" kindref="member">SilKit_FlexrayChannel</ref><sp/><ref refid="struct_sil_kit___flexray_symbol_event_1a9db20ca9965da9f25c894d233cc51143" kindref="member">channel</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="417" refid="struct_sil_kit___flexray_symbol_event_1a7b4994144ccd71abece9c9917489bbb8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_flexray_8h_1aa09783dbc288ffdd566ba0b094c0d40f" kindref="member">SilKit_FlexraySymbolPattern</ref><sp/><ref refid="struct_sil_kit___flexray_symbol_event_1a7b4994144ccd71abece9c9917489bbb8" kindref="member">pattern</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="418"><highlight class="normal">};</highlight></codeline>
<codeline lineno="419" refid="_flexray_8h_1ad7efc21c3e05abc53a3efa4e770ee991" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit___flexray_symbol_event" kindref="compound">SilKit_FlexraySymbolEvent</ref><sp/><ref refid="struct_sil_kit___flexray_symbol_event" kindref="compound">SilKit_FlexraySymbolEvent</ref>;</highlight></codeline>
<codeline lineno="420" refid="_flexray_8h_1a63b20a22232afe724c1ded4980226ab2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit___flexray_symbol_event" kindref="compound">SilKit_FlexraySymbolEvent</ref><sp/><ref refid="struct_sil_kit___flexray_symbol_event" kindref="compound">SilKit_FlexraySymbolTransmitEvent</ref>;</highlight></codeline>
<codeline lineno="421" refid="_flexray_8h_1a41a386db0ac179ab3de42b7524e8d2e6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit___flexray_symbol_event" kindref="compound">SilKit_FlexraySymbolEvent</ref><sp/><ref refid="struct_sil_kit___flexray_symbol_event" kindref="compound">SilKit_FlexrayWakeupEvent</ref>;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="426" refid="struct_sil_kit___flexray_cycle_start_event" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit___flexray_cycle_start_event" kindref="compound">SilKit_FlexrayCycleStartEvent</ref></highlight></codeline>
<codeline lineno="427"><highlight class="normal">{</highlight></codeline>
<codeline lineno="428" refid="struct_sil_kit___flexray_cycle_start_event_1a3155079e807a30f5cb54363930953403" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_sil_kit___struct_header" kindref="compound">SilKit_StructHeader</ref><sp/><ref refid="struct_sil_kit___flexray_cycle_start_event_1a3155079e807a30f5cb54363930953403" kindref="member">structHeader</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="429" refid="struct_sil_kit___flexray_cycle_start_event_1a97535d6616743b504ac3d79e6569e7f9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_orchestration_8h_1a4a5c030b6c22d0228bad174647d4b7fd" kindref="member">SilKit_NanosecondsTime</ref><sp/><ref refid="struct_sil_kit___flexray_cycle_start_event_1a97535d6616743b504ac3d79e6569e7f9" kindref="member">timestamp</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="430" refid="struct_sil_kit___flexray_cycle_start_event_1a035383f33dd3fd2c236b0b9b316ca5e6" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="struct_sil_kit___flexray_cycle_start_event_1a035383f33dd3fd2c236b0b9b316ca5e6" kindref="member">cycleCounter</ref>;<sp/></highlight></codeline>
<codeline lineno="431"><highlight class="normal">};</highlight></codeline>
<codeline lineno="432" refid="_flexray_8h_1aeb4bfef7e1c7ffe808d402ba84e3c3ff" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit___flexray_cycle_start_event" kindref="compound">SilKit_FlexrayCycleStartEvent</ref><sp/><ref refid="struct_sil_kit___flexray_cycle_start_event" kindref="compound">SilKit_FlexrayCycleStartEvent</ref>;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="438" refid="_flexray_8h_1abb26a80ffcd11513c43a41b52ea9fa5f" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="_flexray_8h_1abb26a80ffcd11513c43a41b52ea9fa5f" kindref="member">SilKit_FlexrayPocState</ref>;</highlight></codeline>
<codeline lineno="440" refid="_flexray_8h_1a55d0b8b7eeaa1d66ad9d155aec87d3b6" refkind="member"><highlight class="preprocessor">#define<sp/>SilKit_FlexrayPocState_DefaultConfig<sp/>((SilKit_FlexrayPocState)0x00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayPocState_Config<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_FlexrayPocState)0x01)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayPocState_Ready<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_FlexrayPocState)0x02)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayPocState_Startup<sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_FlexrayPocState)0x03)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayPocState_Wakeup<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_FlexrayPocState)0x04)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayPocState_NormalActive<sp/><sp/>((SilKit_FlexrayPocState)0x05)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayPocState_NormalPassive<sp/>((SilKit_FlexrayPocState)0x06)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayPocState_Halt<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_FlexrayPocState)0x07)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="460" refid="_flexray_8h_1a515ebbcc19b1336dce05d4b53284a4bf" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="_flexray_8h_1a515ebbcc19b1336dce05d4b53284a4bf" kindref="member">SilKit_FlexraySlotModeType</ref>;</highlight></codeline>
<codeline lineno="461" refid="_flexray_8h_1a4d96606fecf8cb337767e7ed0b7cd579" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexraySlotModeType_KeySlot<sp/><sp/><sp/><sp/>((SilKit_FlexraySlotModeType)0x00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462" refid="_flexray_8h_1a7951522d0fc7890de5016a8f47756a6a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexraySlotModeType_AllPending<sp/>((SilKit_FlexraySlotModeType)0x01)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463" refid="_flexray_8h_1a45c0f86bdb889d6baebd2ecbbd810d4e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexraySlotModeType_All<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_FlexraySlotModeType)0x02)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="469" refid="_flexray_8h_1a6cdc8fcf6f2c624256dd3572001dcfec" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="_flexray_8h_1a6cdc8fcf6f2c624256dd3572001dcfec" kindref="member">SilKit_FlexrayErrorModeType</ref>;</highlight></codeline>
<codeline lineno="470" refid="_flexray_8h_1ad2738f76cde7e133454c4534fddda84d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayErrorModeType_Active<sp/><sp/><sp/>((SilKit_FlexrayErrorModeType)0x00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471" refid="_flexray_8h_1a39daf060d2668a6430e50e797869c647" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayErrorModeType_Passive<sp/><sp/>((SilKit_FlexrayErrorModeType)0x01)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472" refid="_flexray_8h_1a9a1cdfb70acba829cff18c42094223f7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayErrorModeType_CommHalt<sp/>((SilKit_FlexrayErrorModeType)0x02)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="478" refid="_flexray_8h_1ac86794dad89cd36f7646ac29d4d4fd29" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="_flexray_8h_1ac86794dad89cd36f7646ac29d4d4fd29" kindref="member">SilKit_FlexrayStartupStateType</ref>;</highlight></codeline>
<codeline lineno="479" refid="_flexray_8h_1aab43d0c2710f900ca4c26f54a153c1b0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayStartupStateType_Undefined<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_FlexrayStartupStateType)0x00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="_flexray_8h_1a8f57d4ae498897720a574a6862b125d2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayStartupStateType_ColdStartListen<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_FlexrayStartupStateType)0x01)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481" refid="_flexray_8h_1aa7925473ed405d07b19455b6c668739b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayStartupStateType_IntegrationColdstartCheck<sp/><sp/><sp/><sp/>((SilKit_FlexrayStartupStateType)0x02)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482" refid="_flexray_8h_1af347bb2f743f1575742ffe554f3c5025" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayStartupStateType_ColdStartJoin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_FlexrayStartupStateType)0x03)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483" refid="_flexray_8h_1a7a03fa41f7e8edf1c95847e895eb97da" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayStartupStateType_ColdStartCollisionResolution<sp/>((SilKit_FlexrayStartupStateType)0x04)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484" refid="_flexray_8h_1aabc13741c69ded44180e96d2adf2a764" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayStartupStateType_ColdStartConsistencyCheck<sp/><sp/><sp/><sp/>((SilKit_FlexrayStartupStateType)0x05)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485" refid="_flexray_8h_1a436a99049d3953132ee4103f8250d0b5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayStartupStateType_IntegrationListen<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_FlexrayStartupStateType)0x06)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486" refid="_flexray_8h_1a5e98b3c9c6d901faaac8b478ed186364" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayStartupStateType_InitializeSchedule<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_FlexrayStartupStateType)0x07)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487" refid="_flexray_8h_1a931245cc7af46f2884cd5b62cc42cf93" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayStartupStateType_IntegrationConsistencyCheck<sp/><sp/>((SilKit_FlexrayStartupStateType)0x08)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488" refid="_flexray_8h_1a718a191cadb72d00aa4c35710801d489" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayStartupStateType_ColdStartGap<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_FlexrayStartupStateType)0x09)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489" refid="_flexray_8h_1adb7ca1dc0294b5de34bb8084c3143f29" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayStartupStateType_ExternalStartup<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_FlexrayStartupStateType)0x0A)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="495" refid="_flexray_8h_1ae839a3b09d6f0ca2e72b22cd34da2c9e" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="_flexray_8h_1ae839a3b09d6f0ca2e72b22cd34da2c9e" kindref="member">SilKit_FlexrayWakeupStatusType</ref>;</highlight></codeline>
<codeline lineno="496" refid="_flexray_8h_1abe7feee8ca6a523f7e3cf4507d57c4a4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayWakeupStatusType_Undefined<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_FlexrayWakeupStatusType)0x00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497" refid="_flexray_8h_1aaeca2aab79dfb29fce126c5fd60080ed" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayWakeupStatusType_ReceivedHeader<sp/><sp/><sp/>((SilKit_FlexrayWakeupStatusType)0x01)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498" refid="_flexray_8h_1a4edbdd63c79b154e9ff3fe3c2ef9c1a0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayWakeupStatusType_ReceivedWup<sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_FlexrayWakeupStatusType)0x02)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499" refid="_flexray_8h_1a41c509dff825e9d354b3afd330f90bb7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayWakeupStatusType_CollisionHeader<sp/><sp/>((SilKit_FlexrayWakeupStatusType)0x03)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500" refid="_flexray_8h_1aac940ad6b11e60122fd54930ea87e7ec" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayWakeupStatusType_CollisionWup<sp/><sp/><sp/><sp/><sp/>((SilKit_FlexrayWakeupStatusType)0x04)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501" refid="_flexray_8h_1a39d710ac8e731c7172afbc4c730c68a2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayWakeupStatusType_CollisionUnknown<sp/>((SilKit_FlexrayWakeupStatusType)0x05)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502" refid="_flexray_8h_1aad61877352d8fec232df628fdcfdca4c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SilKit_FlexrayWakeupStatusType_Transmitted<sp/><sp/><sp/><sp/><sp/><sp/>((SilKit_FlexrayWakeupStatusType)0x06)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="513" refid="struct_sil_kit___flexray_poc_status_event" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit___flexray_poc_status_event" kindref="compound">SilKit_FlexrayPocStatusEvent</ref></highlight></codeline>
<codeline lineno="514"><highlight class="normal">{</highlight></codeline>
<codeline lineno="515" refid="struct_sil_kit___flexray_poc_status_event_1a5ef76b7e09367c59a7e0bde229518749" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_sil_kit___struct_header" kindref="compound">SilKit_StructHeader</ref><sp/><ref refid="struct_sil_kit___flexray_poc_status_event_1a5ef76b7e09367c59a7e0bde229518749" kindref="member">structHeader</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="516" refid="struct_sil_kit___flexray_poc_status_event_1a3602eb9d3a6adc3b21c804940ec848d4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_orchestration_8h_1a4a5c030b6c22d0228bad174647d4b7fd" kindref="member">SilKit_NanosecondsTime</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sil_kit___flexray_poc_status_event_1a3602eb9d3a6adc3b21c804940ec848d4" kindref="member">timestamp</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="517" refid="struct_sil_kit___flexray_poc_status_event_1a08e8553530a23ad19a3082ef680ad46f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_flexray_8h_1abb26a80ffcd11513c43a41b52ea9fa5f" kindref="member">SilKit_FlexrayPocState</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sil_kit___flexray_poc_status_event_1a08e8553530a23ad19a3082ef680ad46f" kindref="member">state</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>=<sp/>SilKit_FlexrayPocState_DefaultConfig;<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="518" refid="struct_sil_kit___flexray_poc_status_event_1a601a957d48352315a5aa7f048e70e9b8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_types_8h_1acd67002df70237d213b7773b26891fcc" kindref="member">SilKit_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sil_kit___flexray_poc_status_event_1a601a957d48352315a5aa7f048e70e9b8" kindref="member">chiHaltRequest</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>=<sp/>false;<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="519" refid="struct_sil_kit___flexray_poc_status_event_1a878957546d3336a796a961b4103feb9b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_types_8h_1acd67002df70237d213b7773b26891fcc" kindref="member">SilKit_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sil_kit___flexray_poc_status_event_1a878957546d3336a796a961b4103feb9b" kindref="member">coldstartNoise</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>=<sp/>false;<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="520" refid="struct_sil_kit___flexray_poc_status_event_1ab87f4044b1689979014ab96763c944cc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_types_8h_1acd67002df70237d213b7773b26891fcc" kindref="member">SilKit_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sil_kit___flexray_poc_status_event_1ab87f4044b1689979014ab96763c944cc" kindref="member">freeze</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>=<sp/>false;<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="521" refid="struct_sil_kit___flexray_poc_status_event_1adeb8fe8b9118fd7189f02c5ba288cc19" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_types_8h_1acd67002df70237d213b7773b26891fcc" kindref="member">SilKit_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sil_kit___flexray_poc_status_event_1adeb8fe8b9118fd7189f02c5ba288cc19" kindref="member">chiReadyRequest</ref>;<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>false;<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="522" refid="struct_sil_kit___flexray_poc_status_event_1a3ba4551943b30caa6b4e8987cdf902bd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_flexray_8h_1a6cdc8fcf6f2c624256dd3572001dcfec" kindref="member">SilKit_FlexrayErrorModeType</ref><sp/><sp/><sp/><sp/><ref refid="struct_sil_kit___flexray_poc_status_event_1a3ba4551943b30caa6b4e8987cdf902bd" kindref="member">errorMode</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>=<sp/>SilKit_FlexrayErrorModeType_Active;<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="523" refid="struct_sil_kit___flexray_poc_status_event_1adc77a9b9d95fc32c59459ebe26d2fef9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_flexray_8h_1a515ebbcc19b1336dce05d4b53284a4bf" kindref="member">SilKit_FlexraySlotModeType</ref><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sil_kit___flexray_poc_status_event_1adc77a9b9d95fc32c59459ebe26d2fef9" kindref="member">slotMode</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>=<sp/>SilKit_FlexraySlotModeType_KeySlot;<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="524" refid="struct_sil_kit___flexray_poc_status_event_1adf7cd274782838a540f85891e53a5266" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_flexray_8h_1ac86794dad89cd36f7646ac29d4d4fd29" kindref="member">SilKit_FlexrayStartupStateType</ref><sp/><ref refid="struct_sil_kit___flexray_poc_status_event_1adf7cd274782838a540f85891e53a5266" kindref="member">startupState</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>=<sp/>SilKit_FlexrayStartupStateType_Undefined;<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="525" refid="struct_sil_kit___flexray_poc_status_event_1a2ee08464a880e8130e9b7d2d5c98c3f2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_flexray_8h_1ae839a3b09d6f0ca2e72b22cd34da2c9e" kindref="member">SilKit_FlexrayWakeupStatusType</ref><sp/><ref refid="struct_sil_kit___flexray_poc_status_event_1a2ee08464a880e8130e9b7d2d5c98c3f2" kindref="member">wakeupStatus</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>=<sp/>SilKit_FlexrayWakeupStatusType_Undefined;<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="526"><highlight class="normal">};</highlight></codeline>
<codeline lineno="527" refid="_flexray_8h_1a11c2077bbaa462e2cbe329911f93e572" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit___flexray_poc_status_event" kindref="compound">SilKit_FlexrayPocStatusEvent</ref><sp/><ref refid="struct_sil_kit___flexray_poc_status_event" kindref="compound">SilKit_FlexrayPocStatusEvent</ref>;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="531" refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="536" refid="_flexray_8h_1a065a6feeaf48b1e3fcb23e2e2c5f3d88" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_flexray_8h_1a065a6feeaf48b1e3fcb23e2e2c5f3d88" kindref="member">SilKit_FlexrayFrameHandler_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit___flexray_frame_event" kindref="compound">SilKit_FlexrayFrameEvent</ref>*<sp/>message);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="541" refid="_flexray_8h_1ad043cc2f412ce76404c5b38af8d9b687" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_flexray_8h_1ad043cc2f412ce76404c5b38af8d9b687" kindref="member">SilKit_FlexrayFrameTransmitHandler_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit___flexray_frame_transmit_event" kindref="compound">SilKit_FlexrayFrameTransmitEvent</ref>*<sp/>acknowledge);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="546" refid="_flexray_8h_1ab387bcb89722e17c27a2ce8d9207c1df" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_flexray_8h_1ab387bcb89722e17c27a2ce8d9207c1df" kindref="member">SilKit_FlexrayWakeupHandler_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit___flexray_symbol_event" kindref="compound">SilKit_FlexrayWakeupEvent</ref>*<sp/>symbol);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="551" refid="_flexray_8h_1aa2e4fb6cf3cd1e2d6db69d950a70b781" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_flexray_8h_1aa2e4fb6cf3cd1e2d6db69d950a70b781" kindref="member">SilKit_FlexrayPocStatusHandler_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit___flexray_poc_status_event" kindref="compound">SilKit_FlexrayPocStatusEvent</ref>*<sp/>status);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="556" refid="_flexray_8h_1a0fe135e178fcfc33e0f88ae27cac1228" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_flexray_8h_1a0fe135e178fcfc33e0f88ae27cac1228" kindref="member">SilKit_FlexraySymbolHandler_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit___flexray_symbol_event" kindref="compound">SilKit_FlexraySymbolEvent</ref>*<sp/>symbol);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="561" refid="_flexray_8h_1adcadcfe65a3dd32aab92de696ef9c8a1" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_flexray_8h_1adcadcfe65a3dd32aab92de696ef9c8a1" kindref="member">SilKit_FlexraySymbolTransmitHandler_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit___flexray_symbol_event" kindref="compound">SilKit_FlexraySymbolTransmitEvent</ref>*<sp/>acknowledge);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="566" refid="_flexray_8h_1a1b92575bf688256bf4824063e6cc7e49" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_flexray_8h_1a1b92575bf688256bf4824063e6cc7e49" kindref="member">SilKit_FlexrayCycleStartHandler_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,<sp/><ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit___flexray_cycle_start_event" kindref="compound">SilKit_FlexrayCycleStartEvent</ref>*<sp/>cycleStart);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>!<sp/>\brief<sp/>Create<sp/>a<sp/>FlexRay<sp/>controller<sp/>with<sp/>the<sp/>given<sp/>name.</highlight></codeline>
<codeline lineno="569"><highlight class="comment"><sp/>*<sp/>!<sp/>\note<sp/>The<sp/>object<sp/>returned<sp/>must<sp/>not<sp/>be<sp/>deallocated<sp/>using<sp/>free()!</highlight></codeline>
<codeline lineno="570"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_flexray_8h_1ae0d1d466847d5006bd7ee48baa12f53e" kindref="member">SilKit_FlexrayController_Create</ref>(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>**<sp/>outController,</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1ad68cbbe03eb41e3b5683b5422e3cb9ae" kindref="member">SilKit_Participant</ref>*<sp/>participant,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>network);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575" refid="_flexray_8h_1a552b5a47323b2ab1439beb8b5316dc45" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_flexray_8h_1a552b5a47323b2ab1439beb8b5316dc45" kindref="member">SilKit_FlexrayController_Create_t</ref>)(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>**<sp/>outController,</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1ad68cbbe03eb41e3b5683b5422e3cb9ae" kindref="member">SilKit_Participant</ref>*<sp/>participant,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>network);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_flexray_8h_1aad6d1355018790cdc12251534c8f184b" kindref="member">SilKit_FlexrayController_Configure</ref>(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit___flexray_controller_config" kindref="compound">SilKit_FlexrayControllerConfig</ref>*<sp/>config);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582" refid="_flexray_8h_1a5a82eadbdefddea685f7284942b23050" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_flexray_8h_1a5a82eadbdefddea685f7284942b23050" kindref="member">SilKit_FlexrayController_Configure_t</ref>)(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit___flexray_controller_config" kindref="compound">SilKit_FlexrayControllerConfig</ref>*<sp/>config);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_flexray_8h_1ac1d05e319366a0e902ffb76436b42b25" kindref="member">SilKit_FlexrayController_ReconfigureTxBuffer</ref>(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,<sp/>uint16_t<sp/>txBufferIdx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit___flexray_tx_buffer_config" kindref="compound">SilKit_FlexrayTxBufferConfig</ref>*<sp/>config);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587" refid="_flexray_8h_1ad82e6252dd86d3ebf8a7f7cdfc89def6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_flexray_8h_1ad82e6252dd86d3ebf8a7f7cdfc89def6" kindref="member">SilKit_FlexrayController_ReconfigureTxBuffer_t</ref>)(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,<sp/>uint16_t<sp/>txBufferIdx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit___flexray_tx_buffer_config" kindref="compound">SilKit_FlexrayTxBufferConfig</ref>*<sp/>config);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_flexray_8h_1a60d5e7d564e77d27f143fd8e0d8a647b" kindref="member">SilKit_FlexrayController_UpdateTxBuffer</ref>(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit___flexray_tx_buffer_update" kindref="compound">SilKit_FlexrayTxBufferUpdate</ref>*<sp/>update);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600" refid="_flexray_8h_1a1606a6d9640429f6a072cc277d45f874" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_flexray_8h_1a1606a6d9640429f6a072cc277d45f874" kindref="member">SilKit_FlexrayController_UpdateTxBuffer_t</ref>)(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit___flexray_tx_buffer_update" kindref="compound">SilKit_FlexrayTxBufferUpdate</ref>*<sp/>update);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_flexray_8h_1a8f26f5d773e471ac5213f399775cac86" kindref="member">SilKit_FlexrayController_ExecuteCmd</ref>(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,<sp/><ref refid="_flexray_8h_1a306020a22fe79c789db0e3647ae532b3" kindref="member">SilKit_FlexrayChiCommand</ref><sp/>cmd);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605" refid="_flexray_8h_1a18c8485de5c3deb98f2f79acefa3d841" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_flexray_8h_1a18c8485de5c3deb98f2f79acefa3d841" kindref="member">SilKit_FlexrayController_ExecuteCmd_t</ref>)(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,<sp/><ref refid="_flexray_8h_1a306020a22fe79c789db0e3647ae532b3" kindref="member">SilKit_FlexrayChiCommand</ref><sp/>cmd);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_flexray_8h_1a39e9a52ba8569a5be78c3098e0f590ce" kindref="member">SilKit_FlexrayController_AddFrameHandler</ref>(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_flexray_8h_1a065a6feeaf48b1e3fcb23e2e2c5f3d88" kindref="member">SilKit_FlexrayFrameHandler_t</ref><sp/>handler,</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref>*<sp/>outHandlerId);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618" refid="_flexray_8h_1a9976158be75dfd99538aa1a65bba5c75" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_flexray_8h_1a9976158be75dfd99538aa1a65bba5c75" kindref="member">SilKit_FlexrayController_AddFrameHandler_t</ref>)(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_flexray_8h_1a065a6feeaf48b1e3fcb23e2e2c5f3d88" kindref="member">SilKit_FlexrayFrameHandler_t</ref><sp/>handler,</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref>*<sp/>outHandlerId);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_flexray_8h_1a66275e4992a481d50ca7e01481263905" kindref="member">SilKit_FlexrayController_RemoveFrameHandler</ref>(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref><sp/>handlerId);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630" refid="_flexray_8h_1a046c42fef068ec6dcafea89517e3c77f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_flexray_8h_1a046c42fef068ec6dcafea89517e3c77f" kindref="member">SilKit_FlexrayController_RemoveFrameHandler_t</ref>)(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref><sp/>handlerId);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_flexray_8h_1a684b5f161a423d6c296e7efa68b52739" kindref="member">SilKit_FlexrayController_AddFrameTransmitHandler</ref>(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_flexray_8h_1ad043cc2f412ce76404c5b38af8d9b687" kindref="member">SilKit_FlexrayFrameTransmitHandler_t</ref><sp/>handler,</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref>*<sp/>outHandlerId);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645" refid="_flexray_8h_1a00865570228cad99c9b3644b40ed85e8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_flexray_8h_1a00865570228cad99c9b3644b40ed85e8" kindref="member">SilKit_FlexrayController_AddFrameTransmitHandler_t</ref>)(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_flexray_8h_1ad043cc2f412ce76404c5b38af8d9b687" kindref="member">SilKit_FlexrayFrameTransmitHandler_t</ref><sp/>handler,</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref>*<sp/>outHandlerId);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_flexray_8h_1a190518e974da3b3f6974b5a81b61b3c3" kindref="member">SilKit_FlexrayController_RemoveFrameTransmitHandler</ref>(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref><sp/>handlerId);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658" refid="_flexray_8h_1a1946b8da8ab076a396c06c9d2c38ed02" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_flexray_8h_1a1946b8da8ab076a396c06c9d2c38ed02" kindref="member">SilKit_FlexrayController_RemoveFrameTransmitHandler_t</ref>)(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref><sp/>handlerId);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_flexray_8h_1aac57918f29e98dccc3be2dacd9404a1a" kindref="member">SilKit_FlexrayController_AddWakeupHandler</ref>(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_flexray_8h_1ab387bcb89722e17c27a2ce8d9207c1df" kindref="member">SilKit_FlexrayWakeupHandler_t</ref><sp/>handler,</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref>*<sp/>outHandlerId);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672" refid="_flexray_8h_1a8582a7609bef2bacdf9c6cf4dcf20b9a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_flexray_8h_1a8582a7609bef2bacdf9c6cf4dcf20b9a" kindref="member">SilKit_FlexrayController_AddWakeupHandler_t</ref>)(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_flexray_8h_1ab387bcb89722e17c27a2ce8d9207c1df" kindref="member">SilKit_FlexrayWakeupHandler_t</ref><sp/>handler,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref>*<sp/>outHandlerId);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_flexray_8h_1aceea43c31e61fbfa475310f7d2a49498" kindref="member">SilKit_FlexrayController_RemoveWakeupHandler</ref>(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref><sp/>handlerId);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684" refid="_flexray_8h_1a670d3556718067261cf6d743d2524b0f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_flexray_8h_1a670d3556718067261cf6d743d2524b0f" kindref="member">SilKit_FlexrayController_RemoveWakeupHandler_t</ref>)(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref><sp/>handlerId);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_flexray_8h_1a8fde9117d34500d35cc341aca91a27f8" kindref="member">SilKit_FlexrayController_AddPocStatusHandler</ref>(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_flexray_8h_1aa2e4fb6cf3cd1e2d6db69d950a70b781" kindref="member">SilKit_FlexrayPocStatusHandler_t</ref><sp/>handler,</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref>*<sp/>outHandlerId);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699" refid="_flexray_8h_1acf8d0d2f1f9f4dc9deceed0a58991e8f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_flexray_8h_1acf8d0d2f1f9f4dc9deceed0a58991e8f" kindref="member">SilKit_FlexrayController_AddPocStatusHandler_t</ref>)(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_flexray_8h_1aa2e4fb6cf3cd1e2d6db69d950a70b781" kindref="member">SilKit_FlexrayPocStatusHandler_t</ref><sp/>handler,</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref>*<sp/>outHandlerId);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_flexray_8h_1a20262656de2deaf99b08ed711cc10817" kindref="member">SilKit_FlexrayController_RemovePocStatusHandler</ref>(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref><sp/>handlerId);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711" refid="_flexray_8h_1aa15e41831e30c017bab00530a1c0d99c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_flexray_8h_1aa15e41831e30c017bab00530a1c0d99c" kindref="member">SilKit_FlexrayController_RemovePocStatusHandler_t</ref>)(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref><sp/>handlerId);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_flexray_8h_1adeea5dc3408705337098e86456373687" kindref="member">SilKit_FlexrayController_AddSymbolHandler</ref>(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_flexray_8h_1a0fe135e178fcfc33e0f88ae27cac1228" kindref="member">SilKit_FlexraySymbolHandler_t</ref><sp/>handler,</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref>*<sp/>outHandlerId);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728" refid="_flexray_8h_1ab2811d173364dd731a03b0c055ac5702" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_flexray_8h_1ab2811d173364dd731a03b0c055ac5702" kindref="member">SilKit_FlexrayController_AddSymbolHandler_t</ref>)(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_flexray_8h_1a0fe135e178fcfc33e0f88ae27cac1228" kindref="member">SilKit_FlexraySymbolHandler_t</ref><sp/>handler,</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref>*<sp/>outHandlerId);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_flexray_8h_1a83822ceb92b25203ba93d2f0c1131689" kindref="member">SilKit_FlexrayController_RemoveSymbolHandler</ref>(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref><sp/>handlerId);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740" refid="_flexray_8h_1a0aba40c1f44421e10dec2718f759131f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_flexray_8h_1a0aba40c1f44421e10dec2718f759131f" kindref="member">SilKit_FlexrayController_RemoveSymbolHandler_t</ref>)(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref><sp/>handlerId);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_flexray_8h_1af9420e7a973056f12554928d3d4fe8ce" kindref="member">SilKit_FlexrayController_AddSymbolTransmitHandler</ref>(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_flexray_8h_1adcadcfe65a3dd32aab92de696ef9c8a1" kindref="member">SilKit_FlexraySymbolTransmitHandler_t</ref><sp/>handler,<sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref>*<sp/>outHandlerId);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758" refid="_flexray_8h_1a806390b1c3cbadadb042f2b656ce0682" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_flexray_8h_1a806390b1c3cbadadb042f2b656ce0682" kindref="member">SilKit_FlexrayController_AddSymbolTransmitHandler_t</ref>)(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_flexray_8h_1adcadcfe65a3dd32aab92de696ef9c8a1" kindref="member">SilKit_FlexraySymbolTransmitHandler_t</ref><sp/>handler,</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref>*<sp/>outHandlerId);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_flexray_8h_1acdcd871ec2b119ff8be4d9bb836004c8" kindref="member">SilKit_FlexrayController_RemoveSymbolTransmitHandler</ref>(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref><sp/>handlerId);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771" refid="_flexray_8h_1a3a0beb2bb2d9a834032c5d715fa19c51" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_flexray_8h_1a3a0beb2bb2d9a834032c5d715fa19c51" kindref="member">SilKit_FlexrayController_RemoveSymbolTransmitHandler_t</ref>)(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref><sp/>handlerId);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_flexray_8h_1a66c2459e67315a0b8d36fdd9ab9cf030" kindref="member">SilKit_FlexrayController_AddCycleStartHandler</ref>(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_flexray_8h_1a1b92575bf688256bf4824063e6cc7e49" kindref="member">SilKit_FlexrayCycleStartHandler_t</ref><sp/>handler,</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref>*<sp/>outHandlerId);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786" refid="_flexray_8h_1a1b611906e3a28329fbdf39c443da93c4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_flexray_8h_1a1b611906e3a28329fbdf39c443da93c4" kindref="member">SilKit_FlexrayController_AddCycleStartHandler_t</ref>)(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>context,</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_flexray_8h_1a1b92575bf688256bf4824063e6cc7e49" kindref="member">SilKit_FlexrayCycleStartHandler_t</ref><sp/>handler,</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref>*<sp/>outHandlerId);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a6c783a5df2fdc1a6777798aa74bc18db" kindref="member">SilKitAPI</ref><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/><ref refid="_sil_kit_macros_8h_1a8e740e5d771d74a1b81bc77dc5f91bf7" kindref="member">SilKitCALL</ref><sp/><ref refid="_flexray_8h_1a572ce944121129628d24300a81269a6f" kindref="member">SilKit_FlexrayController_RemoveCycleStartHandler</ref>(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref><sp/>handlerId);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799" refid="_flexray_8h_1af02e9e5b719f45195793e7958378e64d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_types_8h_1ae1af4b9fe1bfb867bcd4c2fa51d0d095" kindref="member">SilKit_ReturnCode</ref><sp/>(<ref refid="_sil_kit_macros_8h_1a92a6b92be098c8cd9b45677658c8174f" kindref="member">SilKitFPTR</ref><sp/>*<ref refid="_flexray_8h_1af02e9e5b719f45195793e7958378e64d" kindref="member">SilKit_FlexrayController_RemoveCycleStartHandler_t</ref>)(<ref refid="_flexray_8h_1a677751fbb737199e5b4a2c4f8d806ec0" kindref="member">SilKit_FlexrayController</ref>*<sp/>controller,</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_types_8h_1af09d37734982b9f2d7331a22744d9895" kindref="member">SilKit_HandlerId</ref><sp/>handlerId);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><ref refid="_sil_kit_macros_8h_1a04b5ec616ea8e67360a3930e4cf5d2fb" kindref="member">SILKIT_END_DECLS</ref></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(pop)</highlight></codeline>
    </programlisting>
    <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/capi/Flexray.h"/>
  </compounddef>
</doxygen>
