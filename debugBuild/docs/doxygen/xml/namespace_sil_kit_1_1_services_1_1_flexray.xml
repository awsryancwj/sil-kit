<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespace_sil_kit_1_1_services_1_1_flexray" kind="namespace" language="C++">
    <compoundname>SilKit::Services::Flexray</compoundname>
    <innerclass refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_cluster_parameters" prot="public">SilKit::Services::Flexray::FlexrayClusterParameters</innerclass>
    <innerclass refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_controller_config" prot="public">SilKit::Services::Flexray::FlexrayControllerConfig</innerclass>
    <innerclass refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_cycle_start_event" prot="public">SilKit::Services::Flexray::FlexrayCycleStartEvent</innerclass>
    <innerclass refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_frame" prot="public">SilKit::Services::Flexray::FlexrayFrame</innerclass>
    <innerclass refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_frame_event" prot="public">SilKit::Services::Flexray::FlexrayFrameEvent</innerclass>
    <innerclass refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_frame_transmit_event" prot="public">SilKit::Services::Flexray::FlexrayFrameTransmitEvent</innerclass>
    <innerclass refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_header" prot="public">SilKit::Services::Flexray::FlexrayHeader</innerclass>
    <innerclass refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_node_parameters" prot="public">SilKit::Services::Flexray::FlexrayNodeParameters</innerclass>
    <innerclass refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_poc_status_event" prot="public">SilKit::Services::Flexray::FlexrayPocStatusEvent</innerclass>
    <innerclass refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_symbol_event" prot="public">SilKit::Services::Flexray::FlexraySymbolEvent</innerclass>
    <innerclass refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_symbol_transmit_event" prot="public">SilKit::Services::Flexray::FlexraySymbolTransmitEvent</innerclass>
    <innerclass refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_tx_buffer_config" prot="public">SilKit::Services::Flexray::FlexrayTxBufferConfig</innerclass>
    <innerclass refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_tx_buffer_update" prot="public">SilKit::Services::Flexray::FlexrayTxBufferUpdate</innerclass>
    <innerclass refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_wakeup_event" prot="public">SilKit::Services::Flexray::FlexrayWakeupEvent</innerclass>
    <innerclass refid="class_sil_kit_1_1_services_1_1_flexray_1_1_i_flexray_controller" prot="public">SilKit::Services::Flexray::IFlexrayController</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespace_sil_kit_1_1_services_1_1_flexray_1a084b0a4ebb46865320b7d20af801a13c" prot="public" static="no">
        <name>FlexrayChannel</name>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1a084b0a4ebb46865320b7d20af801a13ca6adf97f83acf6453d4a6a4b1070f3754" prot="public">
          <name>None</name>
          <initializer>= SilKit_FlexrayChannel_None</initializer>
          <briefdescription>
<para>Invalid Channel. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1a084b0a4ebb46865320b7d20af801a13ca7fc56270e7a70fa81a5935b72eacbe29" prot="public">
          <name>A</name>
          <initializer>= SilKit_FlexrayChannel_A</initializer>
          <briefdescription>
<para>Channel A. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1a084b0a4ebb46865320b7d20af801a13ca9d5ed678fe57bcca610140957afab571" prot="public">
          <name>B</name>
          <initializer>= SilKit_FlexrayChannel_B</initializer>
          <briefdescription>
<para>Channel B. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1a084b0a4ebb46865320b7d20af801a13cab86fc6b051f63d73de262d4c34e3a0a9" prot="public">
          <name>AB</name>
          <initializer>= SilKit_FlexrayChannel_AB</initializer>
          <briefdescription>
<para>Channel AB. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Type and constants for the FlexRay channel parameter A, B, or AB. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/FlexrayDatatypes.hpp" line="43" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/FlexrayDatatypes.hpp" bodystart="42" bodyend="48"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_sil_kit_1_1_services_1_1_flexray_1ad5775fcd0e1962216e248ed5ec488fb3" prot="public" static="no">
        <name>FlexrayClockPeriod</name>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1ad5775fcd0e1962216e248ed5ec488fb3a0e5ca757c90961f5d3cb397288e4da8a" prot="public">
          <name>T12_5NS</name>
          <initializer>= SilKit_FlexrayClockPeriod_T12_5NS</initializer>
          <briefdescription>
<para>12.5ns / 80MHz </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1ad5775fcd0e1962216e248ed5ec488fb3ac4fb21962fc14ecd7df8a019e9575534" prot="public">
          <name>T25NS</name>
          <initializer>= SilKit_FlexrayClockPeriod_T25NS</initializer>
          <briefdescription>
<para>25ns / 40MHz </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1ad5775fcd0e1962216e248ed5ec488fb3a320baeb1f59a9fa7af20add5c065c07d" prot="public">
          <name>T50NS</name>
          <initializer>= SilKit_FlexrayClockPeriod_T50NS</initializer>
          <briefdescription>
<para>50ns / 20MHz </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Period of the clock (used for micro tick period and sample clock period). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/FlexrayDatatypes.hpp" line="52" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/FlexrayDatatypes.hpp" bodystart="51" bodyend="56"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_sil_kit_1_1_services_1_1_flexray_1aec9ccca44578af9b0290b7b4d9f1ef67" prot="public" static="no">
        <name>FlexrayTransmissionMode</name>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1aec9ccca44578af9b0290b7b4d9f1ef67ac65ff9bc152122c76b6f5fbb742ed27e" prot="public">
          <name>SingleShot</name>
          <initializer>= SilKit_FlexrayTransmissionMode_SingleShot</initializer>
          <briefdescription>
<para>Send TX Buffer only once. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1aec9ccca44578af9b0290b7b4d9f1ef67a535863a82f163709557e59e2eb8139a7" prot="public">
          <name>Continuous</name>
          <initializer>= SilKit_FlexrayTransmissionMode_Continuous</initializer>
          <briefdescription>
<para>Send TX Buffer repeatedly. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Transmission mode for FlexRay Tx-Buffer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/FlexrayDatatypes.hpp" line="262" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/FlexrayDatatypes.hpp" bodystart="261" bodyend="265"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_sil_kit_1_1_services_1_1_flexray_1a0adde59b7a2e64533d4332980494e1af" prot="public" static="no">
        <name>FlexraySymbolPattern</name>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1a0adde59b7a2e64533d4332980494e1afaa5cc832aef0982df4d2583cf608ecbb1" prot="public">
          <name>CasMts</name>
          <initializer>= SilKit_FlexraySymbolPattern_CasMts</initializer>
          <briefdescription>
<para>Collision avoidance symbol (CAS) OR media access test symbol (MTS). </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1a0adde59b7a2e64533d4332980494e1afa9dbcbcead02b7110e39cfa53f091b5fb" prot="public">
          <name>Wus</name>
          <initializer>= SilKit_FlexraySymbolPattern_Wus</initializer>
          <briefdescription>
<para>Wakeup symbol (WUS). </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1a0adde59b7a2e64533d4332980494e1afa7b6a1af552e89810bcc96599f0c0fa4d" prot="public">
          <name>Wudop</name>
          <initializer>= SilKit_FlexraySymbolPattern_Wudop</initializer>
          <briefdescription>
<para>Wakeup During Operation Pattern (WUDOP). </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>FlexRay symbols patterns. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/FlexrayDatatypes.hpp" line="375" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/FlexrayDatatypes.hpp" bodystart="374" bodyend="379"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_sil_kit_1_1_services_1_1_flexray_1abd6966ebd54ac7a849ef1a561a97b4e0" prot="public" static="no">
        <name>FlexrayPocState</name>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1abd6966ebd54ac7a849ef1a561a97b4e0aaffe1f8a0a0d5fca3b7ce96cb3c2d163" prot="public">
          <name>DefaultConfig</name>
          <initializer>= SilKit_FlexrayPocState_DefaultConfig</initializer>
          <briefdescription>
<para>CC expects configuration. Initial state after reset. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1abd6966ebd54ac7a849ef1a561a97b4e0afa535ffb25e1fd20341652f9be21e06e" prot="public">
          <name>Config</name>
          <initializer>= SilKit_FlexrayPocState_Config</initializer>
          <briefdescription>
<para>CC is in configuration mode for setting communication parameters. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1abd6966ebd54ac7a849ef1a561a97b4e0ae7d31fc0602fb2ede144d18cdffd816b" prot="public">
          <name>Ready</name>
          <initializer>= SilKit_FlexrayPocState_Ready</initializer>
          <briefdescription>
<para>intermediate state for initialization process (after <ref refid="namespace_sil_kit_1_1_config" kindref="compound">Config</ref>). </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1abd6966ebd54ac7a849ef1a561a97b4e0a13e685964c2548aa748f7ea263bad4e5" prot="public">
          <name>Startup</name>
          <initializer>= SilKit_FlexrayPocState_Startup</initializer>
          <briefdescription>
<para>FlexRay startup phase. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1abd6966ebd54ac7a849ef1a561a97b4e0a02ac42188f861fc49cf6623936c6a587" prot="public">
          <name>Wakeup</name>
          <initializer>= SilKit_FlexrayPocState_Wakeup</initializer>
          <briefdescription>
<para>FlexRay wakeup phase. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1abd6966ebd54ac7a849ef1a561a97b4e0ad33bf362b58f5472bd90eda9e3dded28" prot="public">
          <name>NormalActive</name>
          <initializer>= SilKit_FlexrayPocState_NormalActive</initializer>
          <briefdescription>
<para>Normal operating mode. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1abd6966ebd54ac7a849ef1a561a97b4e0a6b7ede7f10df52730b24af5ea7e279f1" prot="public">
          <name>NormalPassive</name>
          <initializer>= SilKit_FlexrayPocState_NormalPassive</initializer>
          <briefdescription>
<para>Operating mode with transient or tolerable errors. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1abd6966ebd54ac7a849ef1a561a97b4e0a4558f7fa8f5356a88a53347ad89babde" prot="public">
          <name>Halt</name>
          <initializer>= SilKit_FlexrayPocState_Halt</initializer>
          <briefdescription>
<para>CC is halted (caused by the application (FlexrayChiCommand::DEFERRED_HALT) or by a fatal error). </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Protocol Operation Control (POC) state of the FlexRay communication controller <emphasis>AUTOSAR Name:</emphasis> Fr_POCStateType. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/FlexrayDatatypes.hpp" line="423" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/FlexrayDatatypes.hpp" bodystart="422" bodyend="432"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_sil_kit_1_1_services_1_1_flexray_1adf7c613d338dd8fac8f5e8bab15fe4b1" prot="public" static="no">
        <name>FlexraySlotModeType</name>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1adf7c613d338dd8fac8f5e8bab15fe4b1ad3969acc5435819e2eaca9dde6430249" prot="public">
          <name>KeySlot</name>
          <initializer>= SilKit_FlexraySlotModeType_KeySlot</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1adf7c613d338dd8fac8f5e8bab15fe4b1a305da1e7f4f8e417889bf0f0eb35d44e" prot="public">
          <name>AllPending</name>
          <initializer>= SilKit_FlexraySlotModeType_AllPending</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1adf7c613d338dd8fac8f5e8bab15fe4b1ab1c94ca2fbc3e78fc30069c8d0f01680" prot="public">
          <name>All</name>
          <initializer>= SilKit_FlexraySlotModeType_All</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Indicates what slot mode the POC is in. <emphasis>AUTOSAR Name:</emphasis> Fr_SlotModeType. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/FlexrayDatatypes.hpp" line="439" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/FlexrayDatatypes.hpp" bodystart="438" bodyend="443"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_sil_kit_1_1_services_1_1_flexray_1a4002591e02c65546bae34d8073ee44a8" prot="public" static="no">
        <name>FlexrayErrorModeType</name>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1a4002591e02c65546bae34d8073ee44a8a4d3d769b812b6faa6b76e1a8abaece2d" prot="public">
          <name>Active</name>
          <initializer>= SilKit_FlexrayErrorModeType_Active</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1a4002591e02c65546bae34d8073ee44a8af80bc338b6146b566004a046f8137c85" prot="public">
          <name>Passive</name>
          <initializer>= SilKit_FlexrayErrorModeType_Passive</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1a4002591e02c65546bae34d8073ee44a8a0a6b837a27ddef7250be2b9682e9fb50" prot="public">
          <name>CommHalt</name>
          <initializer>= SilKit_FlexrayErrorModeType_CommHalt</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Indicates what error mode the POC is in. <emphasis>AUTOSAR Name:</emphasis> Fr_ErrorModeType. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/FlexrayDatatypes.hpp" line="450" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/FlexrayDatatypes.hpp" bodystart="449" bodyend="454"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_sil_kit_1_1_services_1_1_flexray_1ae104dbd9a36cba45431b07ac2c212e08" prot="public" static="no">
        <name>FlexrayStartupStateType</name>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1ae104dbd9a36cba45431b07ac2c212e08aec0fc0100c4fc1ce4eea230c3dc10360" prot="public">
          <name>Undefined</name>
          <initializer>= SilKit_FlexrayStartupStateType_Undefined</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1ae104dbd9a36cba45431b07ac2c212e08ab60b7769c0e46ec92682a34d145f8545" prot="public">
          <name>ColdStartListen</name>
          <initializer>= SilKit_FlexrayStartupStateType_ColdStartListen</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1ae104dbd9a36cba45431b07ac2c212e08aded7e286234673277c89914a9f0ff096" prot="public">
          <name>IntegrationColdstartCheck</name>
          <initializer>= SilKit_FlexrayStartupStateType_IntegrationColdstartCheck</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1ae104dbd9a36cba45431b07ac2c212e08ae19fd3c34032ee35344db92799f4addb" prot="public">
          <name>ColdStartJoin</name>
          <initializer>= SilKit_FlexrayStartupStateType_ColdStartJoin</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1ae104dbd9a36cba45431b07ac2c212e08a60d6d720ac1e4a92a056c38bfded3cd9" prot="public">
          <name>ColdStartCollisionResolution</name>
          <initializer>= SilKit_FlexrayStartupStateType_ColdStartCollisionResolution</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1ae104dbd9a36cba45431b07ac2c212e08a199ebc472f8aa76266497b6428d80045" prot="public">
          <name>ColdStartConsistencyCheck</name>
          <initializer>= SilKit_FlexrayStartupStateType_ColdStartConsistencyCheck</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1ae104dbd9a36cba45431b07ac2c212e08a18a06c93c53680feddd29d9f09557f6a" prot="public">
          <name>IntegrationListen</name>
          <initializer>= SilKit_FlexrayStartupStateType_IntegrationListen</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1ae104dbd9a36cba45431b07ac2c212e08ad5e42eb8744ee83ae76a9c948539000e" prot="public">
          <name>InitializeSchedule</name>
          <initializer>= SilKit_FlexrayStartupStateType_InitializeSchedule</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1ae104dbd9a36cba45431b07ac2c212e08ac41a5b8bd1a4990064c822e49a21fd0e" prot="public">
          <name>IntegrationConsistencyCheck</name>
          <initializer>= SilKit_FlexrayStartupStateType_IntegrationConsistencyCheck</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1ae104dbd9a36cba45431b07ac2c212e08aabbbcd50e873ad9d17c1d694d1035e94" prot="public">
          <name>ColdStartGap</name>
          <initializer>= SilKit_FlexrayStartupStateType_ColdStartGap</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1ae104dbd9a36cba45431b07ac2c212e08a46c28564e17910401a79c339ff1e2a0b" prot="public">
          <name>ExternalStartup</name>
          <initializer>= SilKit_FlexrayStartupStateType_ExternalStartup</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Indicates the current substate in the startup procedure. <emphasis>AUTOSAR Name:</emphasis> Fr_StartupStateType. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/FlexrayDatatypes.hpp" line="462" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/FlexrayDatatypes.hpp" bodystart="461" bodyend="474"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_sil_kit_1_1_services_1_1_flexray_1a0c4249a5d93006ba8b6e21a83def1564" prot="public" static="no">
        <name>FlexrayWakeupStatusType</name>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1a0c4249a5d93006ba8b6e21a83def1564aec0fc0100c4fc1ce4eea230c3dc10360" prot="public">
          <name>Undefined</name>
          <initializer>= SilKit_FlexrayWakeupStatusType_Undefined</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1a0c4249a5d93006ba8b6e21a83def1564a2855fc8ecb116f85a4b09600fd1cd75f" prot="public">
          <name>ReceivedHeader</name>
          <initializer>= SilKit_FlexrayWakeupStatusType_ReceivedHeader</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1a0c4249a5d93006ba8b6e21a83def1564a620a0f265f25d0daed63e847af84b885" prot="public">
          <name>ReceivedWup</name>
          <initializer>= SilKit_FlexrayWakeupStatusType_ReceivedWup</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1a0c4249a5d93006ba8b6e21a83def1564af5160af4ff711d72b1a9b1ebd64feb19" prot="public">
          <name>CollisionHeader</name>
          <initializer>= SilKit_FlexrayWakeupStatusType_CollisionHeader</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1a0c4249a5d93006ba8b6e21a83def1564af95e45c576e573aa6b2fe675ee71c5de" prot="public">
          <name>CollisionWup</name>
          <initializer>= SilKit_FlexrayWakeupStatusType_CollisionWup</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1a0c4249a5d93006ba8b6e21a83def1564aa1c54500d73ae93b5b0de74dd4f0f26a" prot="public">
          <name>CollisionUnknown</name>
          <initializer>= SilKit_FlexrayWakeupStatusType_CollisionUnknown</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_flexray_1a0c4249a5d93006ba8b6e21a83def1564aa5b0d6c4be9dd1b8b05c4146fce1b2e1" prot="public">
          <name>Transmitted</name>
          <initializer>= SilKit_FlexrayWakeupStatusType_Transmitted</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Indicates the outcome of the wake-up mechanism. <emphasis>AUTOSAR Name:</emphasis> Fr_WakeupStateType. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/FlexrayDatatypes.hpp" line="481" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/FlexrayDatatypes.hpp" bodystart="480" bodyend="489"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespace_sil_kit_1_1_services_1_1_flexray_1ae3ec65955d5118feb01710993b8bd0b4" prot="public" static="no">
        <type><ref refid="_flexray_8h_1aa2f0693e875b3c8a204d648693616612" kindref="member">SilKit_FlexrayMicroTick</ref></type>
        <definition>using SilKit::Services::Flexray::FlexrayMicroTick = typedef SilKit_FlexrayMicroTick</definition>
        <argsstring></argsstring>
        <name>FlexrayMicroTick</name>
        <briefdescription>
<para>FlexRay micro tick. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/FlexrayDatatypes.hpp" line="36" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/FlexrayDatatypes.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1af54f89e6bff739706797dce4134a008f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SilKit::Services::Flexray::operator==</definition>
        <argsstring>(const FlexrayClusterParameters &amp;lhs, const FlexrayClusterParameters &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_cluster_parameters" kindref="compound">FlexrayClusterParameters</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_cluster_parameters" kindref="compound">FlexrayClusterParameters</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/FlexrayDatatypes.hpp" line="519" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/FlexrayDatatypes.hpp" bodystart="519" bodyend="541"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1a071cb074f25bb59b72b76430df9c5b10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SilKit::Services::Flexray::operator==</definition>
        <argsstring>(const FlexrayNodeParameters &amp;lhs, const FlexrayNodeParameters &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_node_parameters" kindref="compound">FlexrayNodeParameters</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_node_parameters" kindref="compound">FlexrayNodeParameters</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/FlexrayDatatypes.hpp" line="543" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/FlexrayDatatypes.hpp" bodystart="543" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1a5da27b6f1af83536f416faa4e3096ca0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool SilKit::Services::Flexray::operator==</definition>
        <argsstring>(const FlexrayTxBufferConfig &amp;lhs, const FlexrayTxBufferConfig &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_tx_buffer_config" kindref="compound">FlexrayTxBufferConfig</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_tx_buffer_config" kindref="compound">FlexrayTxBufferConfig</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/FlexrayDatatypes.hpp" line="570" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/FlexrayDatatypes.hpp" bodystart="570" bodyend="579"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SilKit::Services::Flexray::to_string</definition>
        <argsstring>(FlexrayChannel channel)</argsstring>
        <name>to_string</name>
        <param>
          <type><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a084b0a4ebb46865320b7d20af801a13c" kindref="member">FlexrayChannel</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="36" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="81" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1a8ed70359c19f93665870f4210806dc15" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SilKit::Services::Flexray::to_string</definition>
        <argsstring>(FlexrayClockPeriod period)</argsstring>
        <name>to_string</name>
        <param>
          <type><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1ad5775fcd0e1962216e248ed5ec488fb3" kindref="member">FlexrayClockPeriod</ref></type>
          <declname>period</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="37" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="88" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1a88befcf2894cb7b4421460aa3e3c29e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SilKit::Services::Flexray::to_string</definition>
        <argsstring>(FlexrayTransmissionMode mode)</argsstring>
        <name>to_string</name>
        <param>
          <type><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1aec9ccca44578af9b0290b7b4d9f1ef67" kindref="member">FlexrayTransmissionMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="38" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="102" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1af40c5aea4a135ad4c41a235dadf5e329" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SilKit::Services::Flexray::to_string</definition>
        <argsstring>(FlexraySymbolPattern pattern)</argsstring>
        <name>to_string</name>
        <param>
          <type><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a0adde59b7a2e64533d4332980494e1af" kindref="member">FlexraySymbolPattern</ref></type>
          <declname>pattern</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="39" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="114" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1aeb90ecb06b03efaab348da0cfcfaa36e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SilKit::Services::Flexray::to_string</definition>
        <argsstring>(FlexrayPocState state)</argsstring>
        <name>to_string</name>
        <param>
          <type><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1abd6966ebd54ac7a849ef1a561a97b4e0" kindref="member">FlexrayPocState</ref></type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="40" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="121" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1a1235e7bd6749f262c9c00832a0b79491" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SilKit::Services::Flexray::to_string</definition>
        <argsstring>(const FlexrayHeader &amp;header)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_header" kindref="compound">FlexrayHeader</ref> &amp;</type>
          <declname>header</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="41" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="145" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1ad104dae2532385e356fb8da996b9806e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SilKit::Services::Flexray::to_string</definition>
        <argsstring>(const FlexraySymbolEvent &amp;symbol)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_symbol_event" kindref="compound">FlexraySymbolEvent</ref> &amp;</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="42" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="152" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1a4dc78667d9613bc4d071078422a8a1aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SilKit::Services::Flexray::to_string</definition>
        <argsstring>(const FlexraySymbolTransmitEvent &amp;symbol)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_symbol_transmit_event" kindref="compound">FlexraySymbolTransmitEvent</ref> &amp;</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="43" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="159" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1ad8c058325268eaa60a9573ca53d8ff89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SilKit::Services::Flexray::to_string</definition>
        <argsstring>(const FlexrayCycleStartEvent &amp;cycleStart)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_cycle_start_event" kindref="compound">FlexrayCycleStartEvent</ref> &amp;</type>
          <declname>cycleStart</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="44" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="166" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1ac657e310d64bd72ae0b063254d24a1d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SilKit::Services::Flexray::to_string</definition>
        <argsstring>(const FlexrayFrameEvent &amp;msg)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_frame_event" kindref="compound">FlexrayFrameEvent</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="45" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="173" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1a01b2aebb5fe24d45467b56c333730190" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SilKit::Services::Flexray::to_string</definition>
        <argsstring>(const FlexrayFrameTransmitEvent &amp;msg)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_frame_transmit_event" kindref="compound">FlexrayFrameTransmitEvent</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="46" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="180" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1aa11abcc04e97d7fb51986219e8514a87" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SilKit::Services::Flexray::to_string</definition>
        <argsstring>(const FlexrayControllerConfig &amp;msg)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_controller_config" kindref="compound">FlexrayControllerConfig</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="47" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="187" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1a3395f482a961d77e1f0807ace1d48815" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SilKit::Services::Flexray::to_string</definition>
        <argsstring>(const FlexrayTxBufferConfig &amp;msg)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_tx_buffer_config" kindref="compound">FlexrayTxBufferConfig</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="48" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="194" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1a55f5864020bad6226e3552704f173214" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SilKit::Services::Flexray::to_string</definition>
        <argsstring>(const FlexrayTxBufferUpdate &amp;msg)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_tx_buffer_update" kindref="compound">FlexrayTxBufferUpdate</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="49" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="201" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1a035658130232e4a1e7e3c2821306ea52" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SilKit::Services::Flexray::to_string</definition>
        <argsstring>(const FlexrayPocStatusEvent &amp;msg)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_poc_status_event" kindref="compound">FlexrayPocStatusEvent</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="50" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="208" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1a433c5f6e9f076df775b133c75d2e421a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SilKit::Services::Flexray::to_string</definition>
        <argsstring>(FlexraySlotModeType msg)</argsstring>
        <name>to_string</name>
        <param>
          <type><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf7c613d338dd8fac8f5e8bab15fe4b1" kindref="member">FlexraySlotModeType</ref></type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="51" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="215" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1aac99ee894b6d8634125852e32a0ce51d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SilKit::Services::Flexray::to_string</definition>
        <argsstring>(FlexrayErrorModeType msg)</argsstring>
        <name>to_string</name>
        <param>
          <type><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a4002591e02c65546bae34d8073ee44a8" kindref="member">FlexrayErrorModeType</ref></type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="52" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="222" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1a878d1eb47c2006a84d35f0d0de09f604" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SilKit::Services::Flexray::to_string</definition>
        <argsstring>(FlexrayStartupStateType msg)</argsstring>
        <name>to_string</name>
        <param>
          <type><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1ae104dbd9a36cba45431b07ac2c212e08" kindref="member">FlexrayStartupStateType</ref></type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="53" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="229" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1a7f1f513daacb58081377871d8ca0f3b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SilKit::Services::Flexray::to_string</definition>
        <argsstring>(FlexrayWakeupStatusType msg)</argsstring>
        <name>to_string</name>
        <param>
          <type><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a0c4249a5d93006ba8b6e21a83def1564" kindref="member">FlexrayWakeupStatusType</ref></type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="54" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="236" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; SilKit::Services::Flexray::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, FlexrayChannel channel)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a084b0a4ebb46865320b7d20af801a13c" kindref="member">FlexrayChannel</ref></type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="56" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="243" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1a0600b10d35056af1d809f0e3599faa53" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; SilKit::Services::Flexray::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, FlexrayClockPeriod period)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1ad5775fcd0e1962216e248ed5ec488fb3" kindref="member">FlexrayClockPeriod</ref></type>
          <declname>period</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="57" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="259" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1a576a6df1f9753d0b8f52c6f269e6f335" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; SilKit::Services::Flexray::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, FlexrayTransmissionMode mode)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1aec9ccca44578af9b0290b7b4d9f1ef67" kindref="member">FlexrayTransmissionMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="58" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="263" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1a882d87d25ee303a1bb47de115731edf6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; SilKit::Services::Flexray::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, FlexraySymbolPattern pattern)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a0adde59b7a2e64533d4332980494e1af" kindref="member">FlexraySymbolPattern</ref></type>
          <declname>pattern</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="59" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="267" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1a471715fad8415fe907b43fb329c39a85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; SilKit::Services::Flexray::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, FlexrayPocState state)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1abd6966ebd54ac7a849ef1a561a97b4e0" kindref="member">FlexrayPocState</ref></type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="60" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="281" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1ae0c44c618884af85a8566e151837803c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; SilKit::Services::Flexray::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const FlexrayHeader &amp;header)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_header" kindref="compound">FlexrayHeader</ref> &amp;</type>
          <declname>header</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="62" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="285" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1a39393d59127e7f766df85d0cc8df3a77" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; SilKit::Services::Flexray::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const FlexraySymbolEvent &amp;symbol)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_symbol_event" kindref="compound">FlexraySymbolEvent</ref> &amp;</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="63" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="301" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1a0832f612d1b5c8bc375bf18fd1a932b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; SilKit::Services::Flexray::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const FlexraySymbolTransmitEvent &amp;symbol)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_symbol_transmit_event" kindref="compound">FlexraySymbolTransmitEvent</ref> &amp;</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="64" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="310" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1af1e3de9cf9fca7ba6afa67c3d4a94988" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; SilKit::Services::Flexray::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const FlexrayCycleStartEvent &amp;cycleStart)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_cycle_start_event" kindref="compound">FlexrayCycleStartEvent</ref> &amp;</type>
          <declname>cycleStart</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="65" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="319" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1abe2bbec05798809bb91302d22fa22f3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; SilKit::Services::Flexray::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const FlexrayFrameEvent &amp;msg)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_frame_event" kindref="compound">FlexrayFrameEvent</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="66" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="328" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1a03619d3e18577b5c559b4ad47d9cb537" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; SilKit::Services::Flexray::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const FlexrayFrameTransmitEvent &amp;msg)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_frame_transmit_event" kindref="compound">FlexrayFrameTransmitEvent</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="67" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="344" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1a4869f6567d1cd595ef9393b200f2c98e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; SilKit::Services::Flexray::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const FlexrayControllerConfig &amp;msg)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_controller_config" kindref="compound">FlexrayControllerConfig</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="68" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="354" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1a3040693ee279965cd38e6f7a15cf4046" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; SilKit::Services::Flexray::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const FlexrayTxBufferConfig &amp;msg)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_tx_buffer_config" kindref="compound">FlexrayTxBufferConfig</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="69" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="359" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1a3a1806309ca7c41e28793aa076e499c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; SilKit::Services::Flexray::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const FlexrayTxBufferUpdate &amp;msg)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_tx_buffer_update" kindref="compound">FlexrayTxBufferUpdate</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="70" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="372" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1a7283ac3c469c58f8ed3839b4efdda8f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; SilKit::Services::Flexray::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const FlexrayPocStatusEvent &amp;msg)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_poc_status_event" kindref="compound">FlexrayPocStatusEvent</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="71" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="391" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1aba100a331f8126e8b98b65fe6d26e70e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; SilKit::Services::Flexray::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, FlexraySlotModeType msg)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf7c613d338dd8fac8f5e8bab15fe4b1" kindref="member">FlexraySlotModeType</ref></type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="72" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="400" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1ae2f697bf367e26fb5854507ca9c99df2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; SilKit::Services::Flexray::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, FlexrayErrorModeType msg)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a4002591e02c65546bae34d8073ee44a8" kindref="member">FlexrayErrorModeType</ref></type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="73" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="419" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1a0e4876de63cf29d881eb5cbb819b0920" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; SilKit::Services::Flexray::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, FlexrayStartupStateType msg)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1ae104dbd9a36cba45431b07ac2c212e08" kindref="member">FlexrayStartupStateType</ref></type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="74" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="439" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_flexray_1a8d9d60c3ac60877a061a4fc19a253f98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; SilKit::Services::Flexray::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, FlexrayWakeupStatusType msg)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a0c4249a5d93006ba8b6e21a83def1564" kindref="member">FlexrayWakeupStatusType</ref></type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" line="75" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp" bodystart="483" bodyend="512"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/FlexrayDatatypes.hpp" line="34" column="1"/>
  </compounddef>
</doxygen>
