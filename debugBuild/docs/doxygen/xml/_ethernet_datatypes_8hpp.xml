<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_ethernet_datatypes_8hpp" kind="file" language="C++">
    <compoundname>EthernetDatatypes.hpp</compoundname>
    <includes local="no">array</includes>
    <includes local="no">chrono</includes>
    <includes refid="_sil_kit_macros_8hpp" local="yes">silkit/SilKitMacros.hpp</includes>
    <includes refid="datatypes_8hpp" local="yes">silkit/services/datatypes.hpp</includes>
    <includes refid="_span_8hpp" local="yes">silkit/util/Span.hpp</includes>
    <includes refid="_ethernet_8h" local="yes">silkit/capi/Ethernet.h</includes>
    <includedby refid="services_2ethernet_2all_8hpp" local="yes">/home/ubuntu/sil-kit/SilKit/include/silkit/services/ethernet/all.hpp</includedby>
    <includedby refid="_i_ethernet_controller_8hpp" local="yes">/home/ubuntu/sil-kit/SilKit/include/silkit/services/ethernet/IEthernetController.hpp</includedby>
    <includedby refid="services_2ethernet_2string__utils_8hpp" local="yes">/home/ubuntu/sil-kit/SilKit/include/silkit/services/ethernet/string_utils.hpp</includedby>
    <incdepgraph>
      <node id="1262">
        <label>/home/ubuntu/sil-kit/SilKit/include/silkit/services/ethernet/EthernetDatatypes.hpp</label>
        <link refid="_ethernet_datatypes_8hpp"/>
        <childnode refid="1263" relation="include">
        </childnode>
        <childnode refid="1264" relation="include">
        </childnode>
        <childnode refid="1265" relation="include">
        </childnode>
        <childnode refid="1268" relation="include">
        </childnode>
        <childnode refid="1271" relation="include">
        </childnode>
        <childnode refid="1280" relation="include">
        </childnode>
      </node>
      <node id="1267">
        <label>cstdint</label>
      </node>
      <node id="1277">
        <label>stdint.h</label>
      </node>
      <node id="1268">
        <label>silkit/services/datatypes.hpp</label>
        <link refid="datatypes_8hpp"/>
        <childnode refid="1267" relation="include">
        </childnode>
        <childnode refid="1269" relation="include">
        </childnode>
        <childnode refid="1270" relation="include">
        </childnode>
      </node>
      <node id="1279">
        <label>silkit/participant/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="1274" relation="include">
        </childnode>
        <childnode refid="1269" relation="include">
        </childnode>
      </node>
      <node id="1274">
        <label>stdexcept</label>
      </node>
      <node id="1269">
        <label>string</label>
      </node>
      <node id="1280">
        <label>silkit/capi/Ethernet.h</label>
        <link refid="_ethernet_8h"/>
        <childnode refid="1277" relation="include">
        </childnode>
        <childnode refid="1266" relation="include">
        </childnode>
        <childnode refid="1276" relation="include">
        </childnode>
        <childnode refid="1281" relation="include">
        </childnode>
      </node>
      <node id="1278">
        <label>stddef.h</label>
      </node>
      <node id="1283">
        <label>memory.h</label>
      </node>
      <node id="1282">
        <label>limits.h</label>
      </node>
      <node id="1266">
        <label>capi/SilKitMacros.h</label>
        <link refid="_sil_kit_macros_8h"/>
        <childnode refid="1267" relation="include">
        </childnode>
      </node>
      <node id="1273">
        <label>vector</label>
      </node>
      <node id="1270">
        <label>silkit/util/HandlerId.hpp</label>
        <link refid="_handler_id_8hpp"/>
        <childnode refid="1267" relation="include">
        </childnode>
      </node>
      <node id="1263">
        <label>array</label>
      </node>
      <node id="1265">
        <label>silkit/SilKitMacros.hpp</label>
        <link refid="_sil_kit_macros_8hpp"/>
        <childnode refid="1266" relation="include">
        </childnode>
      </node>
      <node id="1271">
        <label>silkit/util/Span.hpp</label>
        <link refid="_span_8hpp"/>
        <childnode refid="1272" relation="include">
        </childnode>
        <childnode refid="1273" relation="include">
        </childnode>
        <childnode refid="1263" relation="include">
        </childnode>
        <childnode refid="1269" relation="include">
        </childnode>
        <childnode refid="1274" relation="include">
        </childnode>
        <childnode refid="1275" relation="include">
        </childnode>
        <childnode refid="1276" relation="include">
        </childnode>
        <childnode refid="1279" relation="include">
        </childnode>
      </node>
      <node id="1264">
        <label>chrono</label>
      </node>
      <node id="1281">
        <label>silkit/capi/InterfaceIdentifiers.h</label>
        <link refid="_interface_identifiers_8h"/>
        <childnode refid="1282" relation="include">
        </childnode>
        <childnode refid="1277" relation="include">
        </childnode>
        <childnode refid="1283" relation="include">
        </childnode>
        <childnode refid="1266" relation="include">
        </childnode>
        <childnode refid="1276" relation="include">
        </childnode>
      </node>
      <node id="1275">
        <label>type_traits</label>
      </node>
      <node id="1272">
        <label>algorithm</label>
      </node>
      <node id="1276">
        <label>silkit/capi/Types.h</label>
        <link refid="_types_8h"/>
        <childnode refid="1277" relation="include">
        </childnode>
        <childnode refid="1278" relation="include">
        </childnode>
        <childnode refid="1266" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1285">
        <label>/home/ubuntu/sil-kit/SilKit/include/silkit/services/ethernet/all.hpp</label>
        <link refid="services_2ethernet_2all_8hpp"/>
        <childnode refid="1286" relation="include">
        </childnode>
      </node>
      <node id="1284">
        <label>/home/ubuntu/sil-kit/SilKit/include/silkit/services/ethernet/EthernetDatatypes.hpp</label>
        <link refid="_ethernet_datatypes_8hpp"/>
        <childnode refid="1285" relation="include">
        </childnode>
        <childnode refid="1287" relation="include">
        </childnode>
        <childnode refid="1288" relation="include">
        </childnode>
      </node>
      <node id="1287">
        <label>/home/ubuntu/sil-kit/SilKit/include/silkit/services/ethernet/IEthernetController.hpp</label>
        <link refid="_i_ethernet_controller_8hpp"/>
        <childnode refid="1285" relation="include">
        </childnode>
      </node>
      <node id="1286">
        <label>/home/ubuntu/sil-kit/SilKit/include/silkit/services/all.hpp</label>
        <link refid="services_2all_8hpp"/>
      </node>
      <node id="1288">
        <label>/home/ubuntu/sil-kit/SilKit/include/silkit/services/ethernet/string_utils.hpp</label>
        <link refid="services_2ethernet_2string__utils_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_frame" prot="public">SilKit::Services::Ethernet::EthernetFrame</innerclass>
    <innerclass refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_frame_event" prot="public">SilKit::Services::Ethernet::EthernetFrameEvent</innerclass>
    <innerclass refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_frame_transmit_event" prot="public">SilKit::Services::Ethernet::EthernetFrameTransmitEvent</innerclass>
    <innerclass refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_state_change_event" prot="public">SilKit::Services::Ethernet::EthernetStateChangeEvent</innerclass>
    <innerclass refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_bitrate_change_event" prot="public">SilKit::Services::Ethernet::EthernetBitrateChangeEvent</innerclass>
    <innernamespace refid="namespace_sil_kit">SilKit</innernamespace>
    <innernamespace refid="namespace_sil_kit_1_1_services">SilKit::Services</innernamespace>
    <innernamespace refid="namespace_sil_kit_1_1_services_1_1_ethernet">SilKit::Services::Ethernet</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Copyright<sp/>(c)<sp/>2022<sp/>Vector<sp/>Informatik<sp/>GmbH</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="4"><highlight class="comment">a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the</highlight></codeline>
<codeline lineno="5"><highlight class="comment">&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including</highlight></codeline>
<codeline lineno="6"><highlight class="comment">without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,</highlight></codeline>
<codeline lineno="7"><highlight class="comment">distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="8"><highlight class="comment">permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to</highlight></codeline>
<codeline lineno="9"><highlight class="comment">the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment">The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="12"><highlight class="comment">included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="17"><highlight class="comment">NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE</highlight></codeline>
<codeline lineno="18"><highlight class="comment">LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION</highlight></codeline>
<codeline lineno="19"><highlight class="comment">OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="20"><highlight class="comment">WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_sil_kit_macros_8hpp" kindref="compound">silkit/SilKitMacros.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="datatypes_8hpp" kindref="compound">silkit/services/datatypes.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_span_8hpp" kindref="compound">silkit/util/Span.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_ethernet_8h" kindref="compound">silkit/capi/Ethernet.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>================================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Ethernet<sp/>specific<sp/>data<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>================================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_sil_kit" kindref="compound">SilKit</ref><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Services<sp/>{</highlight></codeline>
<codeline lineno="39" refid="namespace_sil_kit_1_1_services_1_1_ethernet" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Ethernet<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="namespace_sil_kit_1_1_services_1_1_ethernet_1a6f058f0bc3d58fb927569b568ff3178d" refkind="member"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_ethernet_1a6f058f0bc3d58fb927569b568ff3178d" kindref="member">EthernetBitrate</ref><sp/>=<sp/>uint32_t;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_frame" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_frame" kindref="compound">EthernetFrame</ref></highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47" refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_frame_1a40559fd602814306e5813f6d08a49623" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sil_kit_1_1_util_1_1_span" kindref="compound">Util::Span&lt;const uint8_t&gt;</ref><sp/><ref refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_frame_1a40559fd602814306e5813f6d08a49623" kindref="member">raw</ref>;<sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal">};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_frame_event" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_frame_event" kindref="compound">EthernetFrameEvent</ref></highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53" refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_frame_event_1a239322709e27501d3c8b944a94ae6e8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::chrono::nanoseconds<sp/><ref refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_frame_event_1a239322709e27501d3c8b944a94ae6e8e" kindref="member">timestamp</ref>;<sp/></highlight></codeline>
<codeline lineno="54" refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_frame_event_1a10487ac5a2be1590effae3eff379d5d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_frame" kindref="compound">EthernetFrame</ref><sp/><ref refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_frame_event_1a10487ac5a2be1590effae3eff379d5d8" kindref="member">frame</ref>;<sp/></highlight></codeline>
<codeline lineno="55" refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_frame_event_1a7800f79a0f621afa58552dfd3ecd778f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_sil_kit_1_1_services_1aa5a31d6e49bc06fab1273a5235445531" kindref="member">TransmitDirection</ref><sp/><ref refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_frame_event_1a7800f79a0f621afa58552dfd3ecd778f" kindref="member">direction</ref>;<sp/></highlight></codeline>
<codeline lineno="56" refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_frame_event_1ae561a05342fddfe37909c7a3b12e9cd3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_frame_event_1ae561a05342fddfe37909c7a3b12e9cd3" kindref="member">userContext</ref>;<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal">};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="namespace_sil_kit_1_1_services_1_1_ethernet_1abfd0dc9eb121d83e39e1f60258e90e31" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_ethernet_1abfd0dc9eb121d83e39e1f60258e90e31" kindref="member">EthernetTransmitStatusMask</ref><sp/>=<sp/><ref refid="_ethernet_8h_1ac01f1737e7c6a07fec8d8e0c0a5f1d0f" kindref="member">SilKit_EthernetTransmitStatus</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="namespace_sil_kit_1_1_services_1_1_ethernet_1abc4119554b7926d385cfe9443c1c6124" refkind="member"><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_ethernet_1abc4119554b7926d385cfe9443c1c6124" kindref="member">EthernetTransmitStatus</ref><sp/>:<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_ethernet_1abfd0dc9eb121d83e39e1f60258e90e31" kindref="member">EthernetTransmitStatusMask</ref></highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_ethernet_1abc4119554b7926d385cfe9443c1c6124aa5b0d6c4be9dd1b8b05c4146fce1b2e1" kindref="member">Transmitted</ref><sp/>=<sp/><ref refid="_ethernet_8h_1aa977a43b58fdef250234618e5597131c" kindref="member">SilKit_EthernetTransmitStatus_Transmitted</ref>,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_ethernet_1abc4119554b7926d385cfe9443c1c6124a071681df2702c521bdf3f86d5dd067ad" kindref="member">ControllerInactive</ref><sp/>=<sp/><ref refid="_ethernet_8h_1ad4a070e0a993c598b1b21d4ce435f96e" kindref="member">SilKit_EthernetTransmitStatus_ControllerInactive</ref>,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_ethernet_1abc4119554b7926d385cfe9443c1c6124aed24adca6bafecf505ccfec607baae60" kindref="member">LinkDown</ref><sp/>=<sp/><ref refid="_ethernet_8h_1a2d87233ee5b75fbdebd0b1ad3917c746" kindref="member">SilKit_EthernetTransmitStatus_LinkDown</ref>,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_ethernet_1abc4119554b7926d385cfe9443c1c6124a74339e8d9916761b9b69183a081076c6" kindref="member">Dropped</ref><sp/>=<sp/><ref refid="_ethernet_8h_1a72d71b32cecbcf50d2968bda52ff73aa" kindref="member">SilKit_EthernetTransmitStatus_Dropped</ref>,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_ethernet_1abc4119554b7926d385cfe9443c1c6124a55e32de6901e8afadbea93439c764118" kindref="member">InvalidFrameFormat</ref><sp/>=<sp/><ref refid="_ethernet_8h_1af39aae60679c5fb0d07e0679bbaf69f4" kindref="member">SilKit_EthernetTransmitStatus_InvalidFrameFormat</ref>,</highlight></codeline>
<codeline lineno="78"><highlight class="normal">};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_frame_transmit_event" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_frame_transmit_event" kindref="compound">EthernetFrameTransmitEvent</ref></highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83" refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_frame_transmit_event_1a6c6f1f20c251232f0f0bc46d7a66ccf9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::chrono::nanoseconds<sp/><ref refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_frame_transmit_event_1a6c6f1f20c251232f0f0bc46d7a66ccf9" kindref="member">timestamp</ref>;<sp/></highlight></codeline>
<codeline lineno="84" refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_frame_transmit_event_1a6e8adba75b2b576f5c86bd8e7aac5079" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_ethernet_1abc4119554b7926d385cfe9443c1c6124" kindref="member">EthernetTransmitStatus</ref><sp/><ref refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_frame_transmit_event_1a6e8adba75b2b576f5c86bd8e7aac5079" kindref="member">status</ref>;<sp/></highlight></codeline>
<codeline lineno="85" refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_frame_transmit_event_1a51e2aaa47ddb49bb9fe78f42c1e608c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_frame_transmit_event_1a51e2aaa47ddb49bb9fe78f42c1e608c4" kindref="member">userContext</ref>;<sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal">};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="namespace_sil_kit_1_1_services_1_1_ethernet_1a10a56ade778c751ce52749d8bcecb147" refkind="member"><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_ethernet_1a10a56ade778c751ce52749d8bcecb147" kindref="member">EthernetState</ref><sp/>:<sp/><ref refid="_ethernet_8h_1a410841cd46540ba5a8e3b7e6548ec41a" kindref="member">SilKit_EthernetState</ref></highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_ethernet_1a10a56ade778c751ce52749d8bcecb147a3cab03c00dbd11bc3569afa0748013f0" kindref="member">Inactive</ref><sp/>=<sp/><ref refid="_ethernet_8h_1a616ae0d32aeabd3414d52bfc52eedb04" kindref="member">SilKit_EthernetState_Inactive</ref>,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_ethernet_1abc4119554b7926d385cfe9443c1c6124aed24adca6bafecf505ccfec607baae60" kindref="member">LinkDown</ref><sp/>=<sp/><ref refid="_ethernet_8h_1aa8bc65a47bacd73b35a0866e47662b8d" kindref="member">SilKit_EthernetState_LinkDown</ref>,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_ethernet_1a10a56ade778c751ce52749d8bcecb147a8d95de9e9f0ffbdc9901ee31aa38b3a4" kindref="member">LinkUp</ref><sp/>=<sp/><ref refid="_ethernet_8h_1a7c813e503139bd0e2c8bcdaac849cb8f" kindref="member">SilKit_EthernetState_LinkUp</ref>,</highlight></codeline>
<codeline lineno="97"><highlight class="normal">};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_state_change_event" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_state_change_event" kindref="compound">EthernetStateChangeEvent</ref></highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102" refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_state_change_event_1aea2e5c20dac93ca0c20c5f40f14be3bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::chrono::nanoseconds<sp/><ref refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_state_change_event_1aea2e5c20dac93ca0c20c5f40f14be3bc" kindref="member">timestamp</ref>;<sp/></highlight></codeline>
<codeline lineno="103" refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_state_change_event_1afc89bf9d584a2052bd550bb13958af7e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_ethernet_1a10a56ade778c751ce52749d8bcecb147" kindref="member">EthernetState</ref><sp/><ref refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_state_change_event_1afc89bf9d584a2052bd550bb13958af7e" kindref="member">state</ref>;<sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal">};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_bitrate_change_event" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_bitrate_change_event" kindref="compound">EthernetBitrateChangeEvent</ref></highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109" refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_bitrate_change_event_1a2617143ce68f79d787d1ea8939e6e30e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::chrono::nanoseconds<sp/><ref refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_bitrate_change_event_1a2617143ce68f79d787d1ea8939e6e30e" kindref="member">timestamp</ref>;<sp/></highlight></codeline>
<codeline lineno="110" refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_bitrate_change_event_1a629e93960d3429152690f380e954bb28" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_ethernet_1a6f058f0bc3d58fb927569b568ff3178d" kindref="member">EthernetBitrate</ref><sp/><ref refid="struct_sil_kit_1_1_services_1_1_ethernet_1_1_ethernet_bitrate_change_event_1a629e93960d3429152690f380e954bb28" kindref="member">bitrate</ref>;<sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal">};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ethernet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Services</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>SilKit</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/ethernet/EthernetDatatypes.hpp"/>
  </compounddef>
</doxygen>
