<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespace_sil_kit_1_1_services_1_1_can" kind="namespace" language="C++">
    <compoundname>SilKit::Services::Can</compoundname>
    <innerclass refid="struct_sil_kit_1_1_services_1_1_can_1_1_can_error_state_change_event" prot="public">SilKit::Services::Can::CanErrorStateChangeEvent</innerclass>
    <innerclass refid="struct_sil_kit_1_1_services_1_1_can_1_1_can_frame" prot="public">SilKit::Services::Can::CanFrame</innerclass>
    <innerclass refid="struct_sil_kit_1_1_services_1_1_can_1_1_can_frame_event" prot="public">SilKit::Services::Can::CanFrameEvent</innerclass>
    <innerclass refid="struct_sil_kit_1_1_services_1_1_can_1_1_can_frame_transmit_event" prot="public">SilKit::Services::Can::CanFrameTransmitEvent</innerclass>
    <innerclass refid="struct_sil_kit_1_1_services_1_1_can_1_1_can_state_change_event" prot="public">SilKit::Services::Can::CanStateChangeEvent</innerclass>
    <innerclass refid="class_sil_kit_1_1_services_1_1_can_1_1_i_can_controller" prot="public">SilKit::Services::Can::ICanController</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespace_sil_kit_1_1_services_1_1_can_1ad171974695333e4327afb48e26f7f356" prot="public" static="no">
        <name>CanFrameFlag</name>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_can_1ad171974695333e4327afb48e26f7f356a378243333caebe1ecb16d2e4b8996a9c" prot="public">
          <name>Ide</name>
          <initializer>= SilKit_CanFrameFlag_ide</initializer>
          <briefdescription>
<para>Identifier Extension. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_can_1ad171974695333e4327afb48e26f7f356a6b5922e20ef20dc5f12fa998f0fedca1" prot="public">
          <name>Rtr</name>
          <initializer>= SilKit_CanFrameFlag_rtr</initializer>
          <briefdescription>
<para>Remote Transmission Request. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_can_1ad171974695333e4327afb48e26f7f356afd7932561d405a7a6f2ca2342b56be6d" prot="public">
          <name>Fdf</name>
          <initializer>= SilKit_CanFrameFlag_fdf</initializer>
          <briefdescription>
<para>FD Format Indicator. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_can_1ad171974695333e4327afb48e26f7f356a3e4da7809e076a0ddacc3dec79af169d" prot="public">
          <name>Brs</name>
          <initializer>= SilKit_CanFrameFlag_brs</initializer>
          <briefdescription>
<para>Bit Rate Switch (for FD Format only) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_can_1ad171974695333e4327afb48e26f7f356a4a6610a1a3fd1e3da5d765e587a3066d" prot="public">
          <name>Esi</name>
          <initializer>= SilKit_CanFrameFlag_esi</initializer>
          <briefdescription>
<para>Error State indicator (for FD Format only) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_can_1ad171974695333e4327afb48e26f7f356af67a5d685b81a666263385ad71bb1089" prot="public">
          <name>Xlf</name>
          <initializer>= SilKit_CanFrameFlag_xlf</initializer>
          <briefdescription>
<para>XL Format Indicator. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_can_1ad171974695333e4327afb48e26f7f356a2d5cc554c126edb041901fa7d79b558b" prot="public">
          <name>Sec</name>
          <initializer>= SilKit_CanFrameFlag_sec</initializer>
          <briefdescription>
<para>Simple Extended Content (for XL Format only) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/CanDatatypes.hpp" line="42" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/CanDatatypes.hpp" bodystart="41" bodyend="50"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_sil_kit_1_1_services_1_1_can_1a21e629b81cad63b6c793ee9819bd73d7" prot="public" static="no">
        <name>CanControllerState</name>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_can_1a21e629b81cad63b6c793ee9819bd73d7aa9176fac65b988c524c84dee7aa2935a" prot="public">
          <name>Uninit</name>
          <initializer>= SilKit_CanControllerState_Uninit</initializer>
          <briefdescription>
<para>CAN controller is not initialized (initial state after reset). </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_can_1a21e629b81cad63b6c793ee9819bd73d7ac23e2b09ebe6bf4cb5e2a9abe85c0be2" prot="public">
          <name>Stopped</name>
          <initializer>= SilKit_CanControllerState_Stopped</initializer>
          <briefdescription>
<para>CAN controller is initialized but does not participate on the CAN bus. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_can_1a21e629b81cad63b6c793ee9819bd73d7a8428552d86c0d262a542a528af490afa" prot="public">
          <name>Started</name>
          <initializer>= SilKit_CanControllerState_Started</initializer>
          <briefdescription>
<para>CAN controller is in normal operation mode. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_can_1a21e629b81cad63b6c793ee9819bd73d7a243924bfd56a682be235638b53961e09" prot="public">
          <name>Sleep</name>
          <initializer>= SilKit_CanControllerState_Sleep</initializer>
          <briefdescription>
<para>CAN controller is in sleep mode which is similar to the Stopped state. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>CAN Controller state according to AUTOSAR specification AUTOSAR_SWS_CANDriver 4.3.1. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/CanDatatypes.hpp" line="82" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/CanDatatypes.hpp" bodystart="81" bodyend="94"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_sil_kit_1_1_services_1_1_can_1ad9d1311bcfce1b8adb40c0393fa170b9" prot="public" static="no">
        <name>CanErrorState</name>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_can_1ad9d1311bcfce1b8adb40c0393fa170b9a534ceac854da4ba59c4dc41b7ab732dc" prot="public">
          <name>NotAvailable</name>
          <initializer>= SilKit_CanErrorState_NotAvailable</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Error State is Not Available, because CAN controller is in state Uninit.</para><para><emphasis>AUTOSAR Doc:</emphasis> Successful transmission. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_can_1ad9d1311bcfce1b8adb40c0393fa170b9a5e9d039add1e7f63119eb7f36b83fb1f" prot="public">
          <name>ErrorActive</name>
          <initializer>= SilKit_CanErrorState_ErrorActive</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Error Active Mode, the CAN controller is allowed to send messages and active error flags. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_can_1ad9d1311bcfce1b8adb40c0393fa170b9af2dddaa52fc350a733bae4d166aed1fe" prot="public">
          <name>ErrorPassive</name>
          <initializer>= SilKit_CanErrorState_ErrorPassive</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Error Passive Mode, the CAN controller is still allowed to send messages, but must not send active error flags. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_can_1ad9d1311bcfce1b8adb40c0393fa170b9a500e9a516ef13e69f9ee4052b0b63b0a" prot="public">
          <name>BusOff</name>
          <initializer>= SilKit_CanErrorState_BusOff</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>(currently not in use)</para><para><emphasis>AUTOSAR Doc:</emphasis> Bus Off Mode, the CAN controller does not take part in communication. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Error state of a CAN node according to CAN specification. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/CanDatatypes.hpp" line="100" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/CanDatatypes.hpp" bodystart="99" bodyend="120"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_sil_kit_1_1_services_1_1_can_1a10d52346781096c205cdde8c8bab65f0" prot="public" static="no">
        <name>CanTransmitStatus</name>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_can_1a10d52346781096c205cdde8c8bab65f0aa5b0d6c4be9dd1b8b05c4146fce1b2e1" prot="public">
          <name>Transmitted</name>
          <initializer>= SilKit_CanTransmitStatus_Transmitted</initializer>
          <briefdescription>
<para>The message was successfully transmitted on the CAN bus. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_can_1a10d52346781096c205cdde8c8bab65f0a0e22fe7d45f8e5632a4abf369b24e29c" prot="public">
          <name>Canceled</name>
          <initializer>= SilKit_CanTransmitStatus_Canceled</initializer>
          <briefdescription>
<para>The transmit queue was reset. (currently not in use) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_sil_kit_1_1_services_1_1_can_1a10d52346781096c205cdde8c8bab65f0a1afd52738a7ac3372eb4d1dbf4b9bd36" prot="public">
          <name>TransmitQueueFull</name>
          <initializer>= SilKit_CanTransmitStatus_TransmitQueueFull</initializer>
          <briefdescription>
<para>The transmit request was rejected, because the transmit queue is full. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Transfer status of a CAN node according to CAN specification. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/CanDatatypes.hpp" line="127" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/CanDatatypes.hpp" bodystart="126" bodyend="136"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespace_sil_kit_1_1_services_1_1_can_1a3b4f281a5acd29786834878d516d0184" prot="public" static="no">
        <type><ref refid="_can_8h_1a1b2fa7ad68009b3514d76713d951f07b" kindref="member">SilKit_CanFrameFlag</ref></type>
        <definition>using SilKit::Services::Can::CanFrameFlagMask = typedef SilKit_CanFrameFlag</definition>
        <argsstring></argsstring>
        <name>CanFrameFlagMask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/CanDatatypes.hpp" line="39" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/CanDatatypes.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_sil_kit_1_1_services_1_1_can_1a51c6f952dd7d7bd8b7dcfc9a7c6b23ec" prot="public" static="no">
        <type><ref refid="_can_8h_1a4dc3752e5fa4daa30e09ac36925a890d" kindref="member">SilKit_CanTransmitStatus</ref></type>
        <definition>using SilKit::Services::Can::CanTransmitStatusMask = typedef SilKit_CanTransmitStatus</definition>
        <argsstring></argsstring>
        <name>CanTransmitStatusMask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/CanDatatypes.hpp" line="122" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/CanDatatypes.hpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_can_1ae1c3e54169ac0396f5703b952a370d27" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SilKit::Services::Can::to_string</definition>
        <argsstring>(CanFrameFlag flags)</argsstring>
        <name>to_string</name>
        <param>
          <type><ref refid="namespace_sil_kit_1_1_services_1_1_can_1ad171974695333e4327afb48e26f7f356" kindref="member">CanFrameFlag</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/string_utils.hpp" line="37" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/string_utils.hpp" bodystart="59" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_can_1a80e6382ea34472c52d16d2eac45af036" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SilKit::Services::Can::to_string</definition>
        <argsstring>(CanControllerState state)</argsstring>
        <name>to_string</name>
        <param>
          <type><ref refid="namespace_sil_kit_1_1_services_1_1_can_1a21e629b81cad63b6c793ee9819bd73d7" kindref="member">CanControllerState</ref></type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/string_utils.hpp" line="38" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/string_utils.hpp" bodystart="66" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_can_1a2a510cc37f1f4d605ac88f12fe01d4e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SilKit::Services::Can::to_string</definition>
        <argsstring>(CanErrorState state)</argsstring>
        <name>to_string</name>
        <param>
          <type><ref refid="namespace_sil_kit_1_1_services_1_1_can_1ad9d1311bcfce1b8adb40c0393fa170b9" kindref="member">CanErrorState</ref></type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/string_utils.hpp" line="39" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/string_utils.hpp" bodystart="82" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_can_1a544847138d5f7b6f6f2ab85273a1e07d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SilKit::Services::Can::to_string</definition>
        <argsstring>(CanTransmitStatus status)</argsstring>
        <name>to_string</name>
        <param>
          <type><ref refid="namespace_sil_kit_1_1_services_1_1_can_1a10d52346781096c205cdde8c8bab65f0" kindref="member">CanTransmitStatus</ref></type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/string_utils.hpp" line="40" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/string_utils.hpp" bodystart="98" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_can_1a66b9f1f7e740130c3a9b4c54e554254d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SilKit::Services::Can::to_string</definition>
        <argsstring>(const CanFrame &amp;msg)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="struct_sil_kit_1_1_services_1_1_can_1_1_can_frame" kindref="compound">CanFrame</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/string_utils.hpp" line="42" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/string_utils.hpp" bodystart="112" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_can_1a2568009c22d7adff7056ed83adf5ab1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SilKit::Services::Can::to_string</definition>
        <argsstring>(const CanFrameEvent &amp;msg)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="struct_sil_kit_1_1_services_1_1_can_1_1_can_frame_event" kindref="compound">CanFrameEvent</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/string_utils.hpp" line="43" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/string_utils.hpp" bodystart="119" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_can_1a0cff7d8337d557112d6d5fffda91774b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string SilKit::Services::Can::to_string</definition>
        <argsstring>(const CanFrameTransmitEvent &amp;ack)</argsstring>
        <name>to_string</name>
        <param>
          <type>const <ref refid="struct_sil_kit_1_1_services_1_1_can_1_1_can_frame_transmit_event" kindref="compound">CanFrameTransmitEvent</ref> &amp;</type>
          <declname>ack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/string_utils.hpp" line="44" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/string_utils.hpp" bodystart="126" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_can_1ac38c8e2369c8b035a9ed72e743ef4cc8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; SilKit::Services::Can::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, CanFrameFlag flag)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="namespace_sil_kit_1_1_services_1_1_can_1ad171974695333e4327afb48e26f7f356" kindref="member">CanFrameFlag</ref></type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/string_utils.hpp" line="46" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/string_utils.hpp" bodystart="133" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_can_1a41ba23ef02b079ac8c0ad55185bfa91e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; SilKit::Services::Can::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, CanControllerState state)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="namespace_sil_kit_1_1_services_1_1_can_1a21e629b81cad63b6c793ee9819bd73d7" kindref="member">CanControllerState</ref></type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/string_utils.hpp" line="47" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/string_utils.hpp" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_can_1a21d699e9cc02dd933245322c4fe614aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; SilKit::Services::Can::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, CanErrorState state)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="namespace_sil_kit_1_1_services_1_1_can_1ad9d1311bcfce1b8adb40c0393fa170b9" kindref="member">CanErrorState</ref></type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/string_utils.hpp" line="48" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/string_utils.hpp" bodystart="154" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_can_1a469632bfcf416495fa264fbb21a6485b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; SilKit::Services::Can::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, CanTransmitStatus status)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type><ref refid="namespace_sil_kit_1_1_services_1_1_can_1a10d52346781096c205cdde8c8bab65f0" kindref="member">CanTransmitStatus</ref></type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/string_utils.hpp" line="49" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/string_utils.hpp" bodystart="159" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_can_1aec80f59cf5adddbfb479a105a2577d91" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; SilKit::Services::Can::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const CanFrame &amp;msg)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="struct_sil_kit_1_1_services_1_1_can_1_1_can_frame" kindref="compound">CanFrame</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/string_utils.hpp" line="51" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/string_utils.hpp" bodystart="164" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_can_1a7f3dadc970f3d61a07871a5acd11ad41" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; SilKit::Services::Can::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const CanFrameEvent &amp;msg)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="struct_sil_kit_1_1_services_1_1_can_1_1_can_frame_event" kindref="compound">CanFrameEvent</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/string_utils.hpp" line="52" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/string_utils.hpp" bodystart="205" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="namespace_sil_kit_1_1_services_1_1_can_1a9ee7a9d22473b63316fca67c15add172" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; SilKit::Services::Can::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const CanFrameTransmitEvent &amp;status)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="struct_sil_kit_1_1_services_1_1_can_1_1_can_frame_transmit_event" kindref="compound">CanFrameTransmitEvent</ref> &amp;</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/string_utils.hpp" line="53" column="1" bodyfile="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/string_utils.hpp" bodystart="215" bodyend="221"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/can/CanDatatypes.hpp" line="37" column="1"/>
  </compounddef>
</doxygen>
