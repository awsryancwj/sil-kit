<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="services_2flexray_2string__utils_8hpp" kind="file" language="C++">
    <compoundname>string_utils.hpp</compoundname>
    <includes local="no">ostream</includes>
    <includes local="no">sstream</includes>
    <includes refid="exception_8hpp" local="yes">silkit/participant/exception.hpp</includes>
    <includes refid="_printable_hex_string_8hpp" local="yes">silkit/util/PrintableHexString.hpp</includes>
    <includes refid="_flexray_datatypes_8hpp" local="yes">FlexrayDatatypes.hpp</includes>
    <incdepgraph>
      <node id="845">
        <label>iomanip</label>
      </node>
      <node id="844">
        <label>limits</label>
      </node>
      <node id="852">
        <label>cstdint</label>
      </node>
      <node id="858">
        <label>stdint.h</label>
      </node>
      <node id="851">
        <label>silkit/services/datatypes.hpp</label>
        <link refid="datatypes_8hpp"/>
        <childnode refid="852" relation="include">
        </childnode>
        <childnode refid="842" relation="include">
        </childnode>
        <childnode refid="853" relation="include">
        </childnode>
      </node>
      <node id="840">
        <label>silkit/participant/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="841" relation="include">
        </childnode>
        <childnode refid="842" relation="include">
        </childnode>
      </node>
      <node id="841">
        <label>stdexcept</label>
      </node>
      <node id="842">
        <label>string</label>
      </node>
      <node id="861">
        <label>silkit/capi/Flexray.h</label>
        <link refid="_flexray_8h"/>
        <childnode refid="858" relation="include">
        </childnode>
        <childnode refid="860" relation="include">
        </childnode>
        <childnode refid="857" relation="include">
        </childnode>
        <childnode refid="862" relation="include">
        </childnode>
      </node>
      <node id="843">
        <label>silkit/util/PrintableHexString.hpp</label>
        <link refid="_printable_hex_string_8hpp"/>
        <childnode refid="844" relation="include">
        </childnode>
        <childnode refid="845" relation="include">
        </childnode>
        <childnode refid="838" relation="include">
        </childnode>
        <childnode refid="839" relation="include">
        </childnode>
        <childnode refid="846" relation="include">
        </childnode>
        <childnode refid="847" relation="include">
        </childnode>
      </node>
      <node id="859">
        <label>stddef.h</label>
      </node>
      <node id="864">
        <label>memory.h</label>
      </node>
      <node id="838">
        <label>ostream</label>
      </node>
      <node id="863">
        <label>limits.h</label>
      </node>
      <node id="860">
        <label>SilKitMacros.h</label>
        <link refid="_sil_kit_macros_8h"/>
        <childnode refid="852" relation="include">
        </childnode>
      </node>
      <node id="837">
        <label>/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp</label>
        <link refid="services_2flexray_2string__utils_8hpp"/>
        <childnode refid="838" relation="include">
        </childnode>
        <childnode refid="839" relation="include">
        </childnode>
        <childnode refid="840" relation="include">
        </childnode>
        <childnode refid="843" relation="include">
        </childnode>
        <childnode refid="848" relation="include">
        </childnode>
      </node>
      <node id="848">
        <label>FlexrayDatatypes.hpp</label>
        <link refid="_flexray_datatypes_8hpp"/>
        <childnode refid="849" relation="include">
        </childnode>
        <childnode refid="850" relation="include">
        </childnode>
        <childnode refid="851" relation="include">
        </childnode>
        <childnode refid="854" relation="include">
        </childnode>
        <childnode refid="861" relation="include">
        </childnode>
      </node>
      <node id="850">
        <label>vector</label>
      </node>
      <node id="853">
        <label>silkit/util/HandlerId.hpp</label>
        <link refid="_handler_id_8hpp"/>
        <childnode refid="852" relation="include">
        </childnode>
      </node>
      <node id="846">
        <label>utility</label>
      </node>
      <node id="855">
        <label>array</label>
      </node>
      <node id="839">
        <label>sstream</label>
      </node>
      <node id="854">
        <label>silkit/util/Span.hpp</label>
        <link refid="_span_8hpp"/>
        <childnode refid="847" relation="include">
        </childnode>
        <childnode refid="850" relation="include">
        </childnode>
        <childnode refid="855" relation="include">
        </childnode>
        <childnode refid="842" relation="include">
        </childnode>
        <childnode refid="841" relation="include">
        </childnode>
        <childnode refid="856" relation="include">
        </childnode>
        <childnode refid="857" relation="include">
        </childnode>
        <childnode refid="840" relation="include">
        </childnode>
      </node>
      <node id="849">
        <label>chrono</label>
      </node>
      <node id="862">
        <label>silkit/capi/InterfaceIdentifiers.h</label>
        <link refid="_interface_identifiers_8h"/>
        <childnode refid="863" relation="include">
        </childnode>
        <childnode refid="858" relation="include">
        </childnode>
        <childnode refid="864" relation="include">
        </childnode>
        <childnode refid="860" relation="include">
        </childnode>
        <childnode refid="857" relation="include">
        </childnode>
      </node>
      <node id="856">
        <label>type_traits</label>
      </node>
      <node id="847">
        <label>algorithm</label>
      </node>
      <node id="857">
        <label>silkit/capi/Types.h</label>
        <link refid="_types_8h"/>
        <childnode refid="858" relation="include">
        </childnode>
        <childnode refid="859" relation="include">
        </childnode>
        <childnode refid="860" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_sil_kit">SilKit</innernamespace>
    <innernamespace refid="namespace_sil_kit_1_1_services">SilKit::Services</innernamespace>
    <innernamespace refid="namespace_sil_kit_1_1_services_1_1_flexray">SilKit::Services::Flexray</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Copyright<sp/>(c)<sp/>2022<sp/>Vector<sp/>Informatik<sp/>GmbH</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="4"><highlight class="comment">a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the</highlight></codeline>
<codeline lineno="5"><highlight class="comment">&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including</highlight></codeline>
<codeline lineno="6"><highlight class="comment">without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,</highlight></codeline>
<codeline lineno="7"><highlight class="comment">distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="8"><highlight class="comment">permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to</highlight></codeline>
<codeline lineno="9"><highlight class="comment">the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment">The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="12"><highlight class="comment">included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="15"><highlight class="comment">EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="16"><highlight class="comment">MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="17"><highlight class="comment">NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE</highlight></codeline>
<codeline lineno="18"><highlight class="comment">LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION</highlight></codeline>
<codeline lineno="19"><highlight class="comment">OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="20"><highlight class="comment">WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="exception_8hpp" kindref="compound">silkit/participant/exception.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_printable_hex_string_8hpp" kindref="compound">silkit/util/PrintableHexString.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_flexray_datatypes_8hpp" kindref="compound">FlexrayDatatypes.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_sil_kit" kindref="compound">SilKit</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Services<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Flexray<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(<ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a084b0a4ebb46865320b7d20af801a13c" kindref="member">FlexrayChannel</ref><sp/>channel);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(<ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1ad5775fcd0e1962216e248ed5ec488fb3" kindref="member">FlexrayClockPeriod</ref><sp/>period);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(<ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1aec9ccca44578af9b0290b7b4d9f1ef67" kindref="member">FlexrayTransmissionMode</ref><sp/>mode);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(<ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a0adde59b7a2e64533d4332980494e1af" kindref="member">FlexraySymbolPattern</ref><sp/>pattern);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(<ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1abd6966ebd54ac7a849ef1a561a97b4e0" kindref="member">FlexrayPocState</ref><sp/>state);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FlexrayHeader&amp;<sp/>header);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FlexraySymbolEvent&amp;<sp/>symbol);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FlexraySymbolTransmitEvent&amp;<sp/>symbol);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FlexrayCycleStartEvent&amp;<sp/>cycleStart);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FlexrayFrameEvent&amp;<sp/>msg);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FlexrayFrameTransmitEvent&amp;<sp/>msg);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FlexrayControllerConfig&amp;<sp/>msg);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FlexrayTxBufferConfig&amp;<sp/>msg);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FlexrayTxBufferUpdate&amp;<sp/>msg);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FlexrayPocStatusEvent&amp;<sp/>msg);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(<ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf7c613d338dd8fac8f5e8bab15fe4b1" kindref="member">FlexraySlotModeType</ref><sp/>msg);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(<ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a4002591e02c65546bae34d8073ee44a8" kindref="member">FlexrayErrorModeType</ref><sp/>msg);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(<ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1ae104dbd9a36cba45431b07ac2c212e08" kindref="member">FlexrayStartupStateType</ref><sp/>msg);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(<ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a0c4249a5d93006ba8b6e21a83def1564" kindref="member">FlexrayWakeupStatusType</ref><sp/>msg);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a084b0a4ebb46865320b7d20af801a13c" kindref="member">FlexrayChannel</ref><sp/>channel);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1ad5775fcd0e1962216e248ed5ec488fb3" kindref="member">FlexrayClockPeriod</ref><sp/>period);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1aec9ccca44578af9b0290b7b4d9f1ef67" kindref="member">FlexrayTransmissionMode</ref><sp/>mode);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a0adde59b7a2e64533d4332980494e1af" kindref="member">FlexraySymbolPattern</ref><sp/>pattern);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1abd6966ebd54ac7a849ef1a561a97b4e0" kindref="member">FlexrayPocState</ref><sp/>state);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FlexrayHeader&amp;<sp/>header);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FlexraySymbolEvent&amp;<sp/>symbol);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FlexraySymbolTransmitEvent&amp;<sp/>symbol);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FlexrayCycleStartEvent&amp;<sp/>cycleStart);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FlexrayFrameEvent&amp;<sp/>msg);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FlexrayFrameTransmitEvent&amp;<sp/>msg);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FlexrayControllerConfig&amp;<sp/>msg);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FlexrayTxBufferConfig&amp;<sp/>msg);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FlexrayTxBufferUpdate&amp;<sp/>msg);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>FlexrayPocStatusEvent&amp;<sp/>msg);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf7c613d338dd8fac8f5e8bab15fe4b1" kindref="member">FlexraySlotModeType</ref><sp/>msg);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a4002591e02c65546bae34d8073ee44a8" kindref="member">FlexrayErrorModeType</ref><sp/>msg);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1ae104dbd9a36cba45431b07ac2c212e08" kindref="member">FlexrayStartupStateType</ref><sp/>msg);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a0c4249a5d93006ba8b6e21a83def1564" kindref="member">FlexrayWakeupStatusType</ref><sp/>msg);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/>================================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Inline<sp/>Implementations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/>================================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(<ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a084b0a4ebb46865320b7d20af801a13c" kindref="member">FlexrayChannel</ref><sp/>channel)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>out;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>channel;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.str();</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="namespace_sil_kit_1_1_services_1_1_flexray_1a8ed70359c19f93665870f4210806dc15" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(<ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1ad5775fcd0e1962216e248ed5ec488fb3" kindref="member">FlexrayClockPeriod</ref><sp/>period)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(period)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1ad5775fcd0e1962216e248ed5ec488fb3a0e5ca757c90961f5d3cb397288e4da8a" kindref="member">FlexrayClockPeriod::T12_5NS</ref>:</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;12.5ns&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1ad5775fcd0e1962216e248ed5ec488fb3ac4fb21962fc14ecd7df8a019e9575534" kindref="member">FlexrayClockPeriod::T25NS</ref>:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;25ns&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1ad5775fcd0e1962216e248ed5ec488fb3a320baeb1f59a9fa7af20add5c065c07d" kindref="member">FlexrayClockPeriod::T50NS</ref>:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;50ns&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_sil_kit_1_1_type_conversion_error" kindref="compound">SilKit::TypeConversionError</ref>{};</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="namespace_sil_kit_1_1_services_1_1_flexray_1a88befcf2894cb7b4421460aa3e3c29e2" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(<ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1aec9ccca44578af9b0290b7b4d9f1ef67" kindref="member">FlexrayTransmissionMode</ref><sp/>mode)</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mode)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1aec9ccca44578af9b0290b7b4d9f1ef67ac65ff9bc152122c76b6f5fbb742ed27e" kindref="member">FlexrayTransmissionMode::SingleShot</ref>:</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;SingleShot&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1aec9ccca44578af9b0290b7b4d9f1ef67a535863a82f163709557e59e2eb8139a7" kindref="member">FlexrayTransmissionMode::Continuous</ref>:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Continuous&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_sil_kit_1_1_type_conversion_error" kindref="compound">SilKit::TypeConversionError</ref>{};</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="namespace_sil_kit_1_1_services_1_1_flexray_1af40c5aea4a135ad4c41a235dadf5e329" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(<ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a0adde59b7a2e64533d4332980494e1af" kindref="member">FlexraySymbolPattern</ref><sp/>pattern)</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>out;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>pattern;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.str();</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="namespace_sil_kit_1_1_services_1_1_flexray_1aeb90ecb06b03efaab348da0cfcfaa36e" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(<ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1abd6966ebd54ac7a849ef1a561a97b4e0" kindref="member">FlexrayPocState</ref><sp/>state)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(state)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1abd6966ebd54ac7a849ef1a561a97b4e0aaffe1f8a0a0d5fca3b7ce96cb3c2d163" kindref="member">FlexrayPocState::DefaultConfig</ref>:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;DefaultConfig&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1abd6966ebd54ac7a849ef1a561a97b4e0afa535ffb25e1fd20341652f9be21e06e" kindref="member">FlexrayPocState::Config</ref>:</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Config&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1abd6966ebd54ac7a849ef1a561a97b4e0ae7d31fc0602fb2ede144d18cdffd816b" kindref="member">FlexrayPocState::Ready</ref>:</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Ready&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1abd6966ebd54ac7a849ef1a561a97b4e0a13e685964c2548aa748f7ea263bad4e5" kindref="member">FlexrayPocState::Startup</ref>:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Startup&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1abd6966ebd54ac7a849ef1a561a97b4e0a02ac42188f861fc49cf6623936c6a587" kindref="member">FlexrayPocState::Wakeup</ref>:</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Wakeup&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1abd6966ebd54ac7a849ef1a561a97b4e0ad33bf362b58f5472bd90eda9e3dded28" kindref="member">FlexrayPocState::NormalActive</ref>:</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;NormalActive&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1abd6966ebd54ac7a849ef1a561a97b4e0a6b7ede7f10df52730b24af5ea7e279f1" kindref="member">FlexrayPocState::NormalPassive</ref>:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;NormalPassive&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1abd6966ebd54ac7a849ef1a561a97b4e0a4558f7fa8f5356a88a53347ad89babde" kindref="member">FlexrayPocState::Halt</ref>:</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Halt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_sil_kit_1_1_type_conversion_error" kindref="compound">SilKit::TypeConversionError</ref>{};</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="namespace_sil_kit_1_1_services_1_1_flexray_1a1235e7bd6749f262c9c00832a0b79491" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_header" kindref="compound">FlexrayHeader</ref>&amp;<sp/>header)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>out;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>header;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.str();</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="namespace_sil_kit_1_1_services_1_1_flexray_1ad104dae2532385e356fb8da996b9806e" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_symbol_event" kindref="compound">FlexraySymbolEvent</ref>&amp;<sp/>symbol)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>out;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>symbol;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.str();</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="namespace_sil_kit_1_1_services_1_1_flexray_1a4dc78667d9613bc4d071078422a8a1aa" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_symbol_transmit_event" kindref="compound">FlexraySymbolTransmitEvent</ref>&amp;<sp/>symbol)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>out;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>symbol;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.str();</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="namespace_sil_kit_1_1_services_1_1_flexray_1ad8c058325268eaa60a9573ca53d8ff89" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_cycle_start_event" kindref="compound">FlexrayCycleStartEvent</ref>&amp;<sp/>cycleStart)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>out;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>cycleStart;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.str();</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="namespace_sil_kit_1_1_services_1_1_flexray_1ac657e310d64bd72ae0b063254d24a1d4" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_frame_event" kindref="compound">FlexrayFrameEvent</ref>&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>out;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>msg;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.str();</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="namespace_sil_kit_1_1_services_1_1_flexray_1a01b2aebb5fe24d45467b56c333730190" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_frame_transmit_event" kindref="compound">FlexrayFrameTransmitEvent</ref>&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>out;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>msg;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.str();</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="namespace_sil_kit_1_1_services_1_1_flexray_1aa11abcc04e97d7fb51986219e8514a87" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_controller_config" kindref="compound">FlexrayControllerConfig</ref>&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>out;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>msg;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.str();</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="namespace_sil_kit_1_1_services_1_1_flexray_1a3395f482a961d77e1f0807ace1d48815" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_tx_buffer_config" kindref="compound">FlexrayTxBufferConfig</ref>&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>out;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>msg;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.str();</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="namespace_sil_kit_1_1_services_1_1_flexray_1a55f5864020bad6226e3552704f173214" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_tx_buffer_update" kindref="compound">FlexrayTxBufferUpdate</ref>&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>out;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>msg;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.str();</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="namespace_sil_kit_1_1_services_1_1_flexray_1a035658130232e4a1e7e3c2821306ea52" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_poc_status_event" kindref="compound">FlexrayPocStatusEvent</ref>&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>out;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>msg;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.str();</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="namespace_sil_kit_1_1_services_1_1_flexray_1a433c5f6e9f076df775b133c75d2e421a" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(<ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf7c613d338dd8fac8f5e8bab15fe4b1" kindref="member">FlexraySlotModeType</ref><sp/>msg)</highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>out;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>msg;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.str();</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="namespace_sil_kit_1_1_services_1_1_flexray_1aac99ee894b6d8634125852e32a0ce51d" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(<ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a4002591e02c65546bae34d8073ee44a8" kindref="member">FlexrayErrorModeType</ref><sp/>msg)</highlight></codeline>
<codeline lineno="223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>out;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>msg;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.str();</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="namespace_sil_kit_1_1_services_1_1_flexray_1a878d1eb47c2006a84d35f0d0de09f604" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(<ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1ae104dbd9a36cba45431b07ac2c212e08" kindref="member">FlexrayStartupStateType</ref><sp/>msg)</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>out;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>msg;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.str();</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="namespace_sil_kit_1_1_services_1_1_flexray_1a7f1f513daacb58081377871d8ca0f3b2" refkind="member"><highlight class="normal">std::string<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(<ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a0c4249a5d93006ba8b6e21a83def1564" kindref="member">FlexrayWakeupStatusType</ref><sp/>msg)</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>out;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>msg;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out.str();</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a084b0a4ebb46865320b7d20af801a13c" kindref="member">FlexrayChannel</ref><sp/>channel)</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(channel)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a084b0a4ebb46865320b7d20af801a13ca7fc56270e7a70fa81a5935b72eacbe29" kindref="member">FlexrayChannel::A</ref>:</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a084b0a4ebb46865320b7d20af801a13ca9d5ed678fe57bcca610140957afab571" kindref="member">FlexrayChannel::B</ref>:</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a084b0a4ebb46865320b7d20af801a13cab86fc6b051f63d73de262d4c34e3a0a9" kindref="member">FlexrayChannel::AB</ref>:</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;AB&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a084b0a4ebb46865320b7d20af801a13ca6adf97f83acf6453d4a6a4b1070f3754" kindref="member">FlexrayChannel::None</ref>:</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;None&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;FlexrayChannel=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(channel);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259" refid="namespace_sil_kit_1_1_services_1_1_flexray_1a0600b10d35056af1d809f0e3599faa53" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1ad5775fcd0e1962216e248ed5ec488fb3" kindref="member">FlexrayClockPeriod</ref><sp/>period)</highlight></codeline>
<codeline lineno="260"><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out<sp/>&lt;&lt;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(period);</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263" refid="namespace_sil_kit_1_1_services_1_1_flexray_1a576a6df1f9753d0b8f52c6f269e6f335" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1aec9ccca44578af9b0290b7b4d9f1ef67" kindref="member">FlexrayTransmissionMode</ref><sp/>mode)</highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out<sp/>&lt;&lt;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(mode);</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267" refid="namespace_sil_kit_1_1_services_1_1_flexray_1a882d87d25ee303a1bb47de115731edf6" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a0adde59b7a2e64533d4332980494e1af" kindref="member">FlexraySymbolPattern</ref><sp/>pattern)</highlight></codeline>
<codeline lineno="268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(pattern)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a0adde59b7a2e64533d4332980494e1afaa5cc832aef0982df4d2583cf608ecbb1" kindref="member">FlexraySymbolPattern::CasMts</ref>:</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;CasMts&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a0adde59b7a2e64533d4332980494e1afa9dbcbcead02b7110e39cfa53f091b5fb" kindref="member">FlexraySymbolPattern::Wus</ref>:</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Wus&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a0adde59b7a2e64533d4332980494e1afa7b6a1af552e89810bcc96599f0c0fa4d" kindref="member">FlexraySymbolPattern::Wudop</ref>:</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Wudop&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;FlexraySymbolPattern=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pattern);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281" refid="namespace_sil_kit_1_1_services_1_1_flexray_1a471715fad8415fe907b43fb329c39a85" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1abd6966ebd54ac7a849ef1a561a97b4e0" kindref="member">FlexrayPocState</ref><sp/>state)</highlight></codeline>
<codeline lineno="282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out<sp/>&lt;&lt;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a2d1bd5416afef8d7ba145f5320d97eed" kindref="member">to_string</ref>(state);</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285" refid="namespace_sil_kit_1_1_services_1_1_flexray_1ae0c44c618884af85a8566e151837803c" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_header" kindref="compound">FlexrayHeader</ref>&amp;<sp/>header)</highlight></codeline>
<codeline lineno="286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>FlagMask<sp/>=<sp/><ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_header_1ade4e2697169f56df5a11046d990fade6" kindref="member">FlexrayHeader::FlagMask</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Flag<sp/>=<sp/><ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_header_1a48381542711a41debd83beac0133d683" kindref="member">FlexrayHeader::Flag</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Flexray::FlexrayHeader{f=[&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>((header.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_header_1adb9cd3ad3ad5b7e08fc8eeb69c7b83c6" kindref="member">flags</ref><sp/>&amp;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">FlagMask</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Flag::SuFIndicator))<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;U&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>((header.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_header_1adb9cd3ad3ad5b7e08fc8eeb69c7b83c6" kindref="member">flags</ref><sp/>&amp;<sp/>static_cast&lt;FlagMask&gt;(Flag::SyFIndicator))<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Y&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>((header.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_header_1adb9cd3ad3ad5b7e08fc8eeb69c7b83c6" kindref="member">flags</ref><sp/>&amp;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">FlagMask</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(Flag::NFIndicator))<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;N&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>((header.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_header_1adb9cd3ad3ad5b7e08fc8eeb69c7b83c6" kindref="member">flags</ref><sp/>&amp;<sp/>static_cast&lt;FlagMask&gt;(Flag::PPIndicator))<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;P&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;],s=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>header.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_header_1ad0171aca270eb508b13302d8fcb1e88b" kindref="member">frameId</ref></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,l=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(uint32_t)header.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_header_1ab2a2c224372ee7c1121d3bd65e94ccb9" kindref="member">payloadLength</ref></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,crc=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::hex<sp/>&lt;&lt;<sp/>header.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_header_1aeaa7fd0577b2f36ee0d00a678a65ab30" kindref="member">headerCrc</ref><sp/>&lt;&lt;<sp/>std::dec</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,c=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(uint32_t)header.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_header_1aee7ab6624ad41e9ca1f49aea8899c618" kindref="member">cycleCount</ref></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301" refid="namespace_sil_kit_1_1_services_1_1_flexray_1a39393d59127e7f766df85d0cc8df3a77" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_symbol_event" kindref="compound">FlexraySymbolEvent</ref>&amp;<sp/>symbol)</highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>timestamp<sp/>=<sp/>std::chrono::duration_cast&lt;std::chrono::duration&lt;double,<sp/>std::milli&gt;&gt;(symbol.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_symbol_event_1a52a26679b051410ce8befeb5b22ebc68" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Flexray::FlexraySymbolEvent{pattern=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>symbol.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_symbol_event_1aa9c2ac337ad04fbb802df5e6027eca5e" kindref="member">pattern</ref></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>channel=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>symbol.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_symbol_event_1adb23b11419a5a8306fefcd17211d5edd" kindref="member">channel</ref></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>@<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>timestamp.count()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ms}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="namespace_sil_kit_1_1_services_1_1_flexray_1a0832f612d1b5c8bc375bf18fd1a932b4" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_symbol_transmit_event" kindref="compound">FlexraySymbolTransmitEvent</ref>&amp;<sp/>symbol)</highlight></codeline>
<codeline lineno="311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>timestamp<sp/>=<sp/>std::chrono::duration_cast&lt;std::chrono::duration&lt;double,<sp/>std::milli&gt;&gt;(symbol.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_symbol_event_1a52a26679b051410ce8befeb5b22ebc68" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Flexray::FlexraySymbolTransmitEvent{pattern=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>symbol.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_symbol_event_1aa9c2ac337ad04fbb802df5e6027eca5e" kindref="member">pattern</ref></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>channel=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>symbol.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_symbol_event_1adb23b11419a5a8306fefcd17211d5edd" kindref="member">channel</ref></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>@<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>timestamp.count()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ms}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="namespace_sil_kit_1_1_services_1_1_flexray_1af1e3de9cf9fca7ba6afa67c3d4a94988" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_cycle_start_event" kindref="compound">FlexrayCycleStartEvent</ref>&amp;<sp/>cycleStart)</highlight></codeline>
<codeline lineno="320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>timestamp<sp/>=<sp/>std::chrono::duration_cast&lt;std::chrono::duration&lt;double,<sp/>std::milli&gt;&gt;(cycleStart.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_cycle_start_event_1a09732ab3685dfa58ba45f0b5c2dd4959" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Flexray::FlexrayCycleStartEvent{t=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>timestamp.count()</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ms,<sp/>cycleCounter=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cycleStart.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_cycle_start_event_1a511fd6b42302bf5e6c8e4a9b8082341c" kindref="member">cycleCounter</ref>)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="namespace_sil_kit_1_1_services_1_1_flexray_1abe2bbec05798809bb91302d22fa22f3a" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_frame_event" kindref="compound">FlexrayFrameEvent</ref>&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>timestamp<sp/>=<sp/>std::chrono::duration_cast&lt;std::chrono::duration&lt;double,<sp/>std::milli&gt;&gt;(msg.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_frame_event_1a55d36a7a0a5b3eea69332405b1297e90" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Flexray::FlexrayFrameEvent{&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ch=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_frame_event_1a10f43091fd25935040e74338f25379ed" kindref="member">channel</ref></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_frame_event_1a155655f02e1324c3b0be3c30137dcbf5" kindref="member">frame</ref>.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_frame_1adadc7b251d0cc524af4393d77e1ac4fd" kindref="member">header</ref></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>@&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>timestamp.count()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ms&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_frame_event_1a155655f02e1324c3b0be3c30137dcbf5" kindref="member">frame</ref>.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_frame_1adadc7b251d0cc524af4393d77e1ac4fd" kindref="member">header</ref>.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_header_1adb9cd3ad3ad5b7e08fc8eeb69c7b83c6" kindref="member">flags</ref><sp/>&amp;<sp/>static_cast&lt;FlexrayHeader::FlagMask&gt;(<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_header_1a48381542711a41debd83beac0133d683a09477fc6e9dfc275e6047541335370e9" kindref="member">FlexrayHeader::Flag::NFIndicator</ref>))</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>payload<sp/>is<sp/>valid,<sp/>provide<sp/>it<sp/>as<sp/>hex<sp/>dump</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>payload=&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_sil_kit_1_1_util_1a0fd44922c037ccc53a6b507432434a4e" kindref="member">Util::AsHexString</ref>(msg.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_frame_event_1a155655f02e1324c3b0be3c30137dcbf5" kindref="member">frame</ref>.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_frame_1a3a028ac2e63970784d0b9ab3d6b200b1" kindref="member">payload</ref>).WithSeparator(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">).WithMaxLength(msg.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_frame_event_1a155655f02e1324c3b0be3c30137dcbf5" kindref="member">frame</ref>.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_frame_1adadc7b251d0cc524af4393d77e1ac4fd" kindref="member">header</ref>.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_header_1ab2a2c224372ee7c1121d3bd65e94ccb9" kindref="member">payloadLength</ref>);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="namespace_sil_kit_1_1_services_1_1_flexray_1a03619d3e18577b5c559b4ad47d9cb537" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_frame_transmit_event" kindref="compound">FlexrayFrameTransmitEvent</ref>&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="345"><highlight class="normal">{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>timestamp<sp/>=<sp/>std::chrono::duration_cast&lt;std::chrono::duration&lt;double,<sp/>std::milli&gt;&gt;(msg.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_frame_transmit_event_1a5bd44cdff9f8f65868f73854cb5c5aaf" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Flexray::FlexrayFrameTransmitEvent{&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>msg.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_frame_transmit_event_1ab88dae52e312e56ff041ba0b5560387f" kindref="member">frame</ref>.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_frame_1adadc7b251d0cc524af4393d77e1ac4fd" kindref="member">header</ref></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>ch=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_frame_transmit_event_1ac8ffb6b8bdfacd6327d847dde5b283e5" kindref="member">channel</ref></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>txBuffer=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_frame_transmit_event_1a28d267708c7466eb4e5a05d1f5240a89" kindref="member">txBufferIndex</ref></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>@&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>timestamp.count()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ms}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354" refid="namespace_sil_kit_1_1_services_1_1_flexray_1a4869f6567d1cd595ef9393b200f2c98e" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_controller_config" kindref="compound">FlexrayControllerConfig</ref>&amp;<sp/></highlight><highlight class="comment">/*msg*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Flexray::FlexrayControllerConfig{...}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359" refid="namespace_sil_kit_1_1_services_1_1_flexray_1a3040693ee279965cd38e6f7a15cf4046" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_tx_buffer_config" kindref="compound">FlexrayTxBufferConfig</ref>&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="360"><highlight class="normal">{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Flexray::FlexrayTxBufferConfig{&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ch=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_tx_buffer_config_1a5e064b08e5f47af7d32ada164facc52a" kindref="member">channels</ref></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>slot=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_tx_buffer_config_1aec0cb97067a9a971b72c5aa5b20716f2" kindref="member">slotId</ref></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(msg.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_tx_buffer_config_1ab809b06ef798531913e7b6e79e38d93a" kindref="member">hasPayloadPreambleIndicator</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>PP&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>crc=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_tx_buffer_config_1a313425cc88c523624eb583dcfabcabe4" kindref="member">headerCrc</ref></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>off=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_tx_buffer_config_1a3a7600ca00fc66861eaf4ca77f5f6c63" kindref="member">offset</ref></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>rep=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_tx_buffer_config_1a84df64a033eceeab09b227c000d85536" kindref="member">repetition</ref></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>txMode=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_tx_buffer_config_1a9ced66714fe2c2128c05f88186751e46" kindref="member">transmissionMode</ref></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="namespace_sil_kit_1_1_services_1_1_flexray_1a3a1806309ca7c41e28793aa076e499c1" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_tx_buffer_update" kindref="compound">FlexrayTxBufferUpdate</ref>&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Flexray::FlexrayTxBufferUpdate{&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;idx=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_tx_buffer_update_1aa83b310017e4a49749313a0633c74063" kindref="member">txBufferIndex</ref></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>payloadValid=&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_tx_buffer_update_1acb28b1b0be324529cf597deceb4d31c1" kindref="member">payloadDataValid</ref>)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;t,<sp/>payload=[&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="namespace_sil_kit_1_1_util_1a0fd44922c037ccc53a6b507432434a4e" kindref="member">Util::AsHexString</ref>(msg.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_tx_buffer_update_1a18ed64c342a1289ff5e9302b3ee0a6db" kindref="member">payload</ref>).WithSeparator(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">).WithMaxLength(8)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;],<sp/>payloadSize=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_tx_buffer_update_1a18ed64c342a1289ff5e9302b3ee0a6db" kindref="member">payload</ref>.<ref refid="class_sil_kit_1_1_util_1_1_span_1ad198f88522a763203da4d2b09d2f37f9" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;f&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391" refid="namespace_sil_kit_1_1_services_1_1_flexray_1a7283ac3c469c58f8ed3839b4efdda8f8" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_poc_status_event" kindref="compound">FlexrayPocStatusEvent</ref>&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="392"><highlight class="normal">{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>timestamp<sp/>=<sp/>std::chrono::duration_cast&lt;std::chrono::duration&lt;double,<sp/>std::milli&gt;&gt;(msg.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_poc_status_event_1a60cb4d77ec9a4b13c6ed548c30499b3a" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Flexray::POCStatus{&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;State=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_poc_status_event_1a637a3dcc00a887366f845c1afed594f6" kindref="member">state</ref></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>Freeze=&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg.<ref refid="struct_sil_kit_1_1_services_1_1_flexray_1_1_flexray_poc_status_event_1ab81d4106a0c2a88bd59ad82238e557ba" kindref="member">freeze</ref></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>@&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>timestamp.count()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ms}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="namespace_sil_kit_1_1_services_1_1_flexray_1aba100a331f8126e8b98b65fe6d26e70e" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf7c613d338dd8fac8f5e8bab15fe4b1" kindref="member">FlexraySlotModeType</ref><sp/>msg)</highlight></codeline>
<codeline lineno="401"><highlight class="normal">{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(msg)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf7c613d338dd8fac8f5e8bab15fe4b1ad3969acc5435819e2eaca9dde6430249" kindref="member">FlexraySlotModeType::KeySlot</ref>:</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;KeySlot&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf7c613d338dd8fac8f5e8bab15fe4b1a305da1e7f4f8e417889bf0f0eb35d44e" kindref="member">FlexraySlotModeType::AllPending</ref>:</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;AllPending&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf7c613d338dd8fac8f5e8bab15fe4b1ab1c94ca2fbc3e78fc30069c8d0f01680" kindref="member">FlexraySlotModeType::All</ref>:</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;All&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_sil_kit_1_1_type_conversion_error" kindref="compound">SilKit::TypeConversionError</ref>{};</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419" refid="namespace_sil_kit_1_1_services_1_1_flexray_1ae2f697bf367e26fb5854507ca9c99df2" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a4002591e02c65546bae34d8073ee44a8" kindref="member">FlexrayErrorModeType</ref><sp/>msg)</highlight></codeline>
<codeline lineno="420"><highlight class="normal">{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(msg)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a4002591e02c65546bae34d8073ee44a8a4d3d769b812b6faa6b76e1a8abaece2d" kindref="member">FlexrayErrorModeType::Active</ref>:</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Active&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a4002591e02c65546bae34d8073ee44a8af80bc338b6146b566004a046f8137c85" kindref="member">FlexrayErrorModeType::Passive</ref>:</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Passive&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a4002591e02c65546bae34d8073ee44a8a0a6b837a27ddef7250be2b9682e9fb50" kindref="member">FlexrayErrorModeType::CommHalt</ref>:</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;CommHalt&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_sil_kit_1_1_type_conversion_error" kindref="compound">SilKit::TypeConversionError</ref>{};</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="namespace_sil_kit_1_1_services_1_1_flexray_1a0e4876de63cf29d881eb5cbb819b0920" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1ae104dbd9a36cba45431b07ac2c212e08" kindref="member">FlexrayStartupStateType</ref><sp/>msg)</highlight></codeline>
<codeline lineno="440"><highlight class="normal">{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(msg)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1ae104dbd9a36cba45431b07ac2c212e08aec0fc0100c4fc1ce4eea230c3dc10360" kindref="member">FlexrayStartupStateType::Undefined</ref>:</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Undefined&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1ae104dbd9a36cba45431b07ac2c212e08ab60b7769c0e46ec92682a34d145f8545" kindref="member">FlexrayStartupStateType::ColdStartListen</ref>:</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ColdStartListen&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1ae104dbd9a36cba45431b07ac2c212e08aded7e286234673277c89914a9f0ff096" kindref="member">FlexrayStartupStateType::IntegrationColdstartCheck</ref>:</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;IntegrationColdstartCheck&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1ae104dbd9a36cba45431b07ac2c212e08ae19fd3c34032ee35344db92799f4addb" kindref="member">FlexrayStartupStateType::ColdStartJoin</ref>:</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ColdStartJoin&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1ae104dbd9a36cba45431b07ac2c212e08a60d6d720ac1e4a92a056c38bfded3cd9" kindref="member">FlexrayStartupStateType::ColdStartCollisionResolution</ref>:</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ColdStartCollisionResolution&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1ae104dbd9a36cba45431b07ac2c212e08a199ebc472f8aa76266497b6428d80045" kindref="member">FlexrayStartupStateType::ColdStartConsistencyCheck</ref>:</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ColdStartConsistencyCheck&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1ae104dbd9a36cba45431b07ac2c212e08a18a06c93c53680feddd29d9f09557f6a" kindref="member">FlexrayStartupStateType::IntegrationListen</ref>:</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;IntegrationListen&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1ae104dbd9a36cba45431b07ac2c212e08ad5e42eb8744ee83ae76a9c948539000e" kindref="member">FlexrayStartupStateType::InitializeSchedule</ref>:</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;InitializeSchedule&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1ae104dbd9a36cba45431b07ac2c212e08ac41a5b8bd1a4990064c822e49a21fd0e" kindref="member">FlexrayStartupStateType::IntegrationConsistencyCheck</ref>:</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;IntegrationConsistencyCheck&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1ae104dbd9a36cba45431b07ac2c212e08aabbbcd50e873ad9d17c1d694d1035e94" kindref="member">FlexrayStartupStateType::ColdStartGap</ref>:</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ColdStartGap&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1ae104dbd9a36cba45431b07ac2c212e08a46c28564e17910401a79c339ff1e2a0b" kindref="member">FlexrayStartupStateType::ExternalStartup</ref>:</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ExternalStartup&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_sil_kit_1_1_type_conversion_error" kindref="compound">SilKit::TypeConversionError</ref>{};</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483" refid="namespace_sil_kit_1_1_services_1_1_flexray_1a8d9d60c3ac60877a061a4fc19a253f98" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1adf21d38ced52de66ffdc926ef99574e0" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a0c4249a5d93006ba8b6e21a83def1564" kindref="member">FlexrayWakeupStatusType</ref><sp/>msg)</highlight></codeline>
<codeline lineno="484"><highlight class="normal">{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(msg)</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1ae104dbd9a36cba45431b07ac2c212e08aec0fc0100c4fc1ce4eea230c3dc10360" kindref="member">FlexrayWakeupStatusType::Undefined</ref>:</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Undefined&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a0c4249a5d93006ba8b6e21a83def1564a2855fc8ecb116f85a4b09600fd1cd75f" kindref="member">FlexrayWakeupStatusType::ReceivedHeader</ref>:</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ReceivedHeader&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a0c4249a5d93006ba8b6e21a83def1564a620a0f265f25d0daed63e847af84b885" kindref="member">FlexrayWakeupStatusType::ReceivedWup</ref>:</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ReceivedWup&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a0c4249a5d93006ba8b6e21a83def1564af5160af4ff711d72b1a9b1ebd64feb19" kindref="member">FlexrayWakeupStatusType::CollisionHeader</ref>:</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;CollisionHeader&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a0c4249a5d93006ba8b6e21a83def1564af95e45c576e573aa6b2fe675ee71c5de" kindref="member">FlexrayWakeupStatusType::CollisionWup</ref>:</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;CollisionWup&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a0c4249a5d93006ba8b6e21a83def1564aa1c54500d73ae93b5b0de74dd4f0f26a" kindref="member">FlexrayWakeupStatusType::CollisionUnknown</ref>:</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;CollisionUnknown&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_sil_kit_1_1_services_1_1_flexray_1a0c4249a5d93006ba8b6e21a83def1564aa5b0d6c4be9dd1b8b05c4146fce1b2e1" kindref="member">FlexrayWakeupStatusType::Transmitted</ref>:</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Transmitted&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_sil_kit_1_1_type_conversion_error" kindref="compound">SilKit::TypeConversionError</ref>{};</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Flexray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Services</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>SilKit</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/ubuntu/sil-kit/SilKit/include/silkit/services/flexray/string_utils.hpp"/>
  </compounddef>
</doxygen>
